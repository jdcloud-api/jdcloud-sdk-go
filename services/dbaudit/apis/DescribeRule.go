// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    dbaudit "github.com/lshuining/jdcloud-sdk-go/services/dbaudit/models"
)

type DescribeRuleRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 审计实例ID  */
    InsId string `json:"insId"`

    /* 规则组ID  */
    RuleGroupId string `json:"ruleGroupId"`

    /* 规则ID  */
    RuleId string `json:"ruleId"`

    /* 数据库ID (Optional) */
    DbId *string `json:"dbId"`
}

/*
 * param regionId: 地域 Id (Required)
 * param insId: 审计实例ID (Required)
 * param ruleGroupId: 规则组ID (Required)
 * param ruleId: 规则ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeRuleRequest(
    regionId string,
    insId string,
    ruleGroupId string,
    ruleId string,
) *DescribeRuleRequest {

	return &DescribeRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{insId}/ruleGroups/{ruleGroupId}/rule/{ruleId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InsId: insId,
        RuleGroupId: ruleGroupId,
        RuleId: ruleId,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param insId: 审计实例ID (Required)
 * param ruleGroupId: 规则组ID (Required)
 * param ruleId: 规则ID (Required)
 * param dbId: 数据库ID (Optional)
 */
func NewDescribeRuleRequestWithAllParams(
    regionId string,
    insId string,
    ruleGroupId string,
    ruleId string,
    dbId *string,
) *DescribeRuleRequest {

    return &DescribeRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{insId}/ruleGroups/{ruleGroupId}/rule/{ruleId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InsId: insId,
        RuleGroupId: ruleGroupId,
        RuleId: ruleId,
        DbId: dbId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeRuleRequestWithoutParam() *DescribeRuleRequest {

    return &DescribeRuleRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{insId}/ruleGroups/{ruleGroupId}/rule/{ruleId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *DescribeRuleRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param insId: 审计实例ID(Required) */
func (r *DescribeRuleRequest) SetInsId(insId string) {
    r.InsId = insId
}

/* param ruleGroupId: 规则组ID(Required) */
func (r *DescribeRuleRequest) SetRuleGroupId(ruleGroupId string) {
    r.RuleGroupId = ruleGroupId
}

/* param ruleId: 规则ID(Required) */
func (r *DescribeRuleRequest) SetRuleId(ruleId string) {
    r.RuleId = ruleId
}

/* param dbId: 数据库ID(Optional) */
func (r *DescribeRuleRequest) SetDbId(dbId string) {
    r.DbId = &dbId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeRuleRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeRuleResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeRuleResult `json:"result"`
}

type DescribeRuleResult struct {
    Rule dbaudit.Rule `json:"rule"`
}