// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ModyfyAuditNetCardsRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 数据库ID  */
    DatabaseId string `json:"databaseId"`

    /* agentId  */
    AgentId string `json:"agentId"`

    /* 网卡信息  */
    NetCards []string `json:"netCards"`
}

/*
 * param regionId: 地域 Id (Required)
 * param databaseId: 数据库ID (Required)
 * param agentId: agentId (Required)
 * param netCards: 网卡信息 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModyfyAuditNetCardsRequest(
    regionId string,
    databaseId string,
    agentId string,
    netCards []string,
) *ModyfyAuditNetCardsRequest {

	return &ModyfyAuditNetCardsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/agents/{agentId}/database/{databaseId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        DatabaseId: databaseId,
        AgentId: agentId,
        NetCards: netCards,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param databaseId: 数据库ID (Required)
 * param agentId: agentId (Required)
 * param netCards: 网卡信息 (Required)
 */
func NewModyfyAuditNetCardsRequestWithAllParams(
    regionId string,
    databaseId string,
    agentId string,
    netCards []string,
) *ModyfyAuditNetCardsRequest {

    return &ModyfyAuditNetCardsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/agents/{agentId}/database/{databaseId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DatabaseId: databaseId,
        AgentId: agentId,
        NetCards: netCards,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModyfyAuditNetCardsRequestWithoutParam() *ModyfyAuditNetCardsRequest {

    return &ModyfyAuditNetCardsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/agents/{agentId}/database/{databaseId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *ModyfyAuditNetCardsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param databaseId: 数据库ID(Required) */
func (r *ModyfyAuditNetCardsRequest) SetDatabaseId(databaseId string) {
    r.DatabaseId = databaseId
}

/* param agentId: agentId(Required) */
func (r *ModyfyAuditNetCardsRequest) SetAgentId(agentId string) {
    r.AgentId = agentId
}

/* param netCards: 网卡信息(Required) */
func (r *ModyfyAuditNetCardsRequest) SetNetCards(netCards []string) {
    r.NetCards = netCards
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModyfyAuditNetCardsRequest) GetRegionId() string {
    return r.RegionId
}

type ModyfyAuditNetCardsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModyfyAuditNetCardsResult `json:"result"`
}

type ModyfyAuditNetCardsResult struct {
}