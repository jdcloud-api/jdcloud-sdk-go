// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type UpdateLiveForwardTaskRequest struct {

    core.JDCloudRequest

    /* 任务ID
  */
    TaskId string `json:"taskId"`

    /* 拉流地址
- 支持rtmp
 (Optional) */
    SourceUrl *string `json:"sourceUrl"`

    /* 转推地址
- 支持rtmp
 (Optional) */
    PushUrl *string `json:"pushUrl"`

    /* 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始
 (Optional) */
    StartTime *string `json:"startTime"`

    /* 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
- 不填拉不到流10分钟自动结束
 (Optional) */
    EndTime *string `json:"endTime"`

    /* 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效
 (Optional) */
    CallbackEvents []string `json:"callbackEvents"`

    /* 事件回调地址
 (Optional) */
    CallbackUrl *string `json:"callbackUrl"`

    /* 任务名称
- 最大255字符
 (Optional) */
    Name *string `json:"name"`
}

/*
 * param taskId: 任务ID
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateLiveForwardTaskRequest(
    taskId string,
) *UpdateLiveForwardTaskRequest {

	return &UpdateLiveForwardTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/LiveForwardTask:update",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        TaskId: taskId,
	}
}

/*
 * param taskId: 任务ID
 (Required)
 * param sourceUrl: 拉流地址
- 支持rtmp
 (Optional)
 * param pushUrl: 转推地址
- 支持rtmp
 (Optional)
 * param startTime: 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始
 (Optional)
 * param endTime: 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
- 不填拉不到流10分钟自动结束
 (Optional)
 * param callbackEvents: 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效
 (Optional)
 * param callbackUrl: 事件回调地址
 (Optional)
 * param name: 任务名称
- 最大255字符
 (Optional)
 */
func NewUpdateLiveForwardTaskRequestWithAllParams(
    taskId string,
    sourceUrl *string,
    pushUrl *string,
    startTime *string,
    endTime *string,
    callbackEvents []string,
    callbackUrl *string,
    name *string,
) *UpdateLiveForwardTaskRequest {

    return &UpdateLiveForwardTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/LiveForwardTask:update",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        TaskId: taskId,
        SourceUrl: sourceUrl,
        PushUrl: pushUrl,
        StartTime: startTime,
        EndTime: endTime,
        CallbackEvents: callbackEvents,
        CallbackUrl: callbackUrl,
        Name: name,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateLiveForwardTaskRequestWithoutParam() *UpdateLiveForwardTaskRequest {

    return &UpdateLiveForwardTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/LiveForwardTask:update",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param taskId: 任务ID
(Required) */
func (r *UpdateLiveForwardTaskRequest) SetTaskId(taskId string) {
    r.TaskId = taskId
}

/* param sourceUrl: 拉流地址
- 支持rtmp
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetSourceUrl(sourceUrl string) {
    r.SourceUrl = &sourceUrl
}

/* param pushUrl: 转推地址
- 支持rtmp
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetPushUrl(pushUrl string) {
    r.PushUrl = &pushUrl
}

/* param startTime: 开始时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 不填表示立即开始
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: 结束时间
- UTC时间， ISO8601示例：2021-07-26T08:08:08Z
- 最大支持365天，与开始时间间隔不超过7天。
- 不填拉不到流10分钟自动结束
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param callbackEvents: 回调类型
- 不填发送全部回调
- TaskStart 任务开始
- TaskExit 任务结束
- callbackUrl非空的情况下，callbackEvents有效
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetCallbackEvents(callbackEvents []string) {
    r.CallbackEvents = callbackEvents
}

/* param callbackUrl: 事件回调地址
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetCallbackUrl(callbackUrl string) {
    r.CallbackUrl = &callbackUrl
}

/* param name: 任务名称
- 最大255字符
(Optional) */
func (r *UpdateLiveForwardTaskRequest) SetName(name string) {
    r.Name = &name
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateLiveForwardTaskRequest) GetRegionId() string {
    return ""
}

type UpdateLiveForwardTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateLiveForwardTaskResult `json:"result"`
}

type UpdateLiveForwardTaskResult struct {
}