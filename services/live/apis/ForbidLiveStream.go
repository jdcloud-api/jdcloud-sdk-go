// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ForbidLiveStreamRequest struct {

    core.JDCloudRequest

    /* 推流域名  */
    PublishDomain string `json:"publishDomain"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 流名称  */
    StreamName string `json:"streamName"`

    /* 禁流时长,单位:s 0表示永久禁流;大于0为限时禁流,超过时长自动解禁 (Optional) */
    ForbidTime *int `json:"forbidTime"`
}

/*
 * param publishDomain: 推流域名 (Required)
 * param appName: 应用名称 (Required)
 * param streamName: 流名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewForbidLiveStreamRequest(
    publishDomain string,
    appName string,
    streamName string,
) *ForbidLiveStreamRequest {

	return &ForbidLiveStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/streams:forbid",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        PublishDomain: publishDomain,
        AppName: appName,
        StreamName: streamName,
	}
}

/*
 * param publishDomain: 推流域名 (Required)
 * param appName: 应用名称 (Required)
 * param streamName: 流名称 (Required)
 * param forbidTime: 禁流时长,单位:s 0表示永久禁流;大于0为限时禁流,超过时长自动解禁 (Optional)
 */
func NewForbidLiveStreamRequestWithAllParams(
    publishDomain string,
    appName string,
    streamName string,
    forbidTime *int,
) *ForbidLiveStreamRequest {

    return &ForbidLiveStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams:forbid",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        PublishDomain: publishDomain,
        AppName: appName,
        StreamName: streamName,
        ForbidTime: forbidTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewForbidLiveStreamRequestWithoutParam() *ForbidLiveStreamRequest {

    return &ForbidLiveStreamRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams:forbid",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param publishDomain: 推流域名(Required) */
func (r *ForbidLiveStreamRequest) SetPublishDomain(publishDomain string) {
    r.PublishDomain = publishDomain
}

/* param appName: 应用名称(Required) */
func (r *ForbidLiveStreamRequest) SetAppName(appName string) {
    r.AppName = appName
}

/* param streamName: 流名称(Required) */
func (r *ForbidLiveStreamRequest) SetStreamName(streamName string) {
    r.StreamName = streamName
}

/* param forbidTime: 禁流时长,单位:s 0表示永久禁流;大于0为限时禁流,超过时长自动解禁(Optional) */
func (r *ForbidLiveStreamRequest) SetForbidTime(forbidTime int) {
    r.ForbidTime = &forbidTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ForbidLiveStreamRequest) GetRegionId() string {
    return ""
}

type ForbidLiveStreamResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ForbidLiveStreamResult `json:"result"`
}

type ForbidLiveStreamResult struct {
}