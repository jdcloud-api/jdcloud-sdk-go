// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type AddCustomLiveStreamRecordTemplateRequest struct {

    core.JDCloudRequest

    /* 自动录制周期
- 取值: [15,360]
- 单位: 分钟
  */
    RecordPeriod int `json:"recordPeriod"`

    /* 存储桶
  */
    SaveBucket string `json:"saveBucket"`

    /* endpoint
  */
    SaveEndpoint string `json:"saveEndpoint"`

    /* 录制文件格式:
- 取值: ts,flv,mp4 (多种类型之间用;隔开)
- 不区分大小写
  */
    RecordFileType string `json:"recordFileType"`

    /* 录制模板自定义名称:
 - 取值要求：数字、大小写字母或短横线("-")
 - <b>注意: 不能与已定义命名重复</b>
  */
    Template string `json:"template"`
}

/*
 * param recordPeriod: 自动录制周期
- 取值: [15,360]
- 单位: 分钟
 (Required)
 * param saveBucket: 存储桶
 (Required)
 * param saveEndpoint: endpoint
 (Required)
 * param recordFileType: 录制文件格式:
- 取值: ts,flv,mp4 (多种类型之间用;隔开)
- 不区分大小写
 (Required)
 * param template: 录制模板自定义名称:
 - 取值要求：数字、大小写字母或短横线("-")
 - <b>注意: 不能与已定义命名重复</b>
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddCustomLiveStreamRecordTemplateRequest(
    recordPeriod int,
    saveBucket string,
    saveEndpoint string,
    recordFileType string,
    template string,
) *AddCustomLiveStreamRecordTemplateRequest {

	return &AddCustomLiveStreamRecordTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/recordCustoms:template",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RecordPeriod: recordPeriod,
        SaveBucket: saveBucket,
        SaveEndpoint: saveEndpoint,
        RecordFileType: recordFileType,
        Template: template,
	}
}

/*
 * param recordPeriod: 自动录制周期
- 取值: [15,360]
- 单位: 分钟
 (Required)
 * param saveBucket: 存储桶
 (Required)
 * param saveEndpoint: endpoint
 (Required)
 * param recordFileType: 录制文件格式:
- 取值: ts,flv,mp4 (多种类型之间用;隔开)
- 不区分大小写
 (Required)
 * param template: 录制模板自定义名称:
 - 取值要求：数字、大小写字母或短横线("-")
 - <b>注意: 不能与已定义命名重复</b>
 (Required)
 */
func NewAddCustomLiveStreamRecordTemplateRequestWithAllParams(
    recordPeriod int,
    saveBucket string,
    saveEndpoint string,
    recordFileType string,
    template string,
) *AddCustomLiveStreamRecordTemplateRequest {

    return &AddCustomLiveStreamRecordTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/recordCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RecordPeriod: recordPeriod,
        SaveBucket: saveBucket,
        SaveEndpoint: saveEndpoint,
        RecordFileType: recordFileType,
        Template: template,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddCustomLiveStreamRecordTemplateRequestWithoutParam() *AddCustomLiveStreamRecordTemplateRequest {

    return &AddCustomLiveStreamRecordTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/recordCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param recordPeriod: 自动录制周期
- 取值: [15,360]
- 单位: 分钟
(Required) */
func (r *AddCustomLiveStreamRecordTemplateRequest) SetRecordPeriod(recordPeriod int) {
    r.RecordPeriod = recordPeriod
}

/* param saveBucket: 存储桶
(Required) */
func (r *AddCustomLiveStreamRecordTemplateRequest) SetSaveBucket(saveBucket string) {
    r.SaveBucket = saveBucket
}

/* param saveEndpoint: endpoint
(Required) */
func (r *AddCustomLiveStreamRecordTemplateRequest) SetSaveEndpoint(saveEndpoint string) {
    r.SaveEndpoint = saveEndpoint
}

/* param recordFileType: 录制文件格式:
- 取值: ts,flv,mp4 (多种类型之间用;隔开)
- 不区分大小写
(Required) */
func (r *AddCustomLiveStreamRecordTemplateRequest) SetRecordFileType(recordFileType string) {
    r.RecordFileType = recordFileType
}

/* param template: 录制模板自定义名称:
 - 取值要求：数字、大小写字母或短横线("-")
 - <b>注意: 不能与已定义命名重复</b>
(Required) */
func (r *AddCustomLiveStreamRecordTemplateRequest) SetTemplate(template string) {
    r.Template = template
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddCustomLiveStreamRecordTemplateRequest) GetRegionId() string {
    return ""
}

type AddCustomLiveStreamRecordTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddCustomLiveStreamRecordTemplateResult `json:"result"`
}

type AddCustomLiveStreamRecordTemplateResult struct {
}