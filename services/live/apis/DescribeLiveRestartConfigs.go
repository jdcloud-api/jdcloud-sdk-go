// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    live "github.com/lshuining/jdcloud-sdk-go/services/live/models"
)

type DescribeLiveRestartConfigsRequest struct {

    core.JDCloudRequest

    /* 页码；默认为1；取值范围[1, 100000] (Optional) */
    PageNum *int `json:"pageNum"`

    /* 分页大小；默认为10；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 回看的推流域名  */
    RestartDomain string `json:"restartDomain"`
}

/*
 * param restartDomain: 回看的推流域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeLiveRestartConfigsRequest(
    restartDomain string,
) *DescribeLiveRestartConfigsRequest {

	return &DescribeLiveRestartConfigsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/liveRestart:configs",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RestartDomain: restartDomain,
	}
}

/*
 * param pageNum: 页码；默认为1；取值范围[1, 100000] (Optional)
 * param pageSize: 分页大小；默认为10；取值范围[10, 100] (Optional)
 * param restartDomain: 回看的推流域名 (Required)
 */
func NewDescribeLiveRestartConfigsRequestWithAllParams(
    pageNum *int,
    pageSize *int,
    restartDomain string,
) *DescribeLiveRestartConfigsRequest {

    return &DescribeLiveRestartConfigsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveRestart:configs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNum: pageNum,
        PageSize: pageSize,
        RestartDomain: restartDomain,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeLiveRestartConfigsRequestWithoutParam() *DescribeLiveRestartConfigsRequest {

    return &DescribeLiveRestartConfigsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/liveRestart:configs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pageNum: 页码；默认为1；取值范围[1, 100000](Optional) */
func (r *DescribeLiveRestartConfigsRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}

/* param pageSize: 分页大小；默认为10；取值范围[10, 100](Optional) */
func (r *DescribeLiveRestartConfigsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param restartDomain: 回看的推流域名(Required) */
func (r *DescribeLiveRestartConfigsRequest) SetRestartDomain(restartDomain string) {
    r.RestartDomain = restartDomain
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeLiveRestartConfigsRequest) GetRegionId() string {
    return ""
}

type DescribeLiveRestartConfigsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeLiveRestartConfigsResult `json:"result"`
}

type DescribeLiveRestartConfigsResult struct {
    PageNumber int `json:"pageNumber"`
    PageSize int `json:"pageSize"`
    TotalCount int `json:"totalCount"`
    RestartConfigs []live.RestartConfig `json:"restartConfigs"`
}