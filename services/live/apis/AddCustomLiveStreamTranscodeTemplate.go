// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type AddCustomLiveStreamTranscodeTemplateRequest struct {

    core.JDCloudRequest

    /* 转码输出的码率值  */
    VideoCodeRate int `json:"videoCodeRate"`

    /* 转码输出的帧率值  */
    VideoFrameRate string `json:"videoFrameRate"`

    /* 转码输出视频宽度  */
    Width int `json:"width"`

    /* 转码输出视频宽度  */
    Height int `json:"height"`

    /* 转码模板自定义名称  */
    Template string `json:"template"`

    /* 转码输出音频编码格式  */
    AudioCodec string `json:"audioCodec"`

    /* 转码输出音频格式  */
    AudioFormat string `json:"audioFormat"`

    /* 转码输出音频采样率  */
    AudioSampleRate int `json:"audioSampleRate"`

    /* 转码输出音频通道数  */
    AudioChannel int `json:"audioChannel"`

    /* 转码输出音频码率  */
    AudioCodeRate int `json:"audioCodeRate"`
}

/*
 * param videoCodeRate: 转码输出的码率值 (Required)
 * param videoFrameRate: 转码输出的帧率值 (Required)
 * param width: 转码输出视频宽度 (Required)
 * param height: 转码输出视频宽度 (Required)
 * param template: 转码模板自定义名称 (Required)
 * param audioCodec: 转码输出音频编码格式 (Required)
 * param audioFormat: 转码输出音频格式 (Required)
 * param audioSampleRate: 转码输出音频采样率 (Required)
 * param audioChannel: 转码输出音频通道数 (Required)
 * param audioCodeRate: 转码输出音频码率 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddCustomLiveStreamTranscodeTemplateRequest(
    videoCodeRate int,
    videoFrameRate string,
    width int,
    height int,
    template string,
    audioCodec string,
    audioFormat string,
    audioSampleRate int,
    audioChannel int,
    audioCodeRate int,
) *AddCustomLiveStreamTranscodeTemplateRequest {

	return &AddCustomLiveStreamTranscodeTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/transcodeCustoms:template",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        VideoCodeRate: videoCodeRate,
        VideoFrameRate: videoFrameRate,
        Width: width,
        Height: height,
        Template: template,
        AudioCodec: audioCodec,
        AudioFormat: audioFormat,
        AudioSampleRate: audioSampleRate,
        AudioChannel: audioChannel,
        AudioCodeRate: audioCodeRate,
	}
}

/*
 * param videoCodeRate: 转码输出的码率值 (Required)
 * param videoFrameRate: 转码输出的帧率值 (Required)
 * param width: 转码输出视频宽度 (Required)
 * param height: 转码输出视频宽度 (Required)
 * param template: 转码模板自定义名称 (Required)
 * param audioCodec: 转码输出音频编码格式 (Required)
 * param audioFormat: 转码输出音频格式 (Required)
 * param audioSampleRate: 转码输出音频采样率 (Required)
 * param audioChannel: 转码输出音频通道数 (Required)
 * param audioCodeRate: 转码输出音频码率 (Required)
 */
func NewAddCustomLiveStreamTranscodeTemplateRequestWithAllParams(
    videoCodeRate int,
    videoFrameRate string,
    width int,
    height int,
    template string,
    audioCodec string,
    audioFormat string,
    audioSampleRate int,
    audioChannel int,
    audioCodeRate int,
) *AddCustomLiveStreamTranscodeTemplateRequest {

    return &AddCustomLiveStreamTranscodeTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        VideoCodeRate: videoCodeRate,
        VideoFrameRate: videoFrameRate,
        Width: width,
        Height: height,
        Template: template,
        AudioCodec: audioCodec,
        AudioFormat: audioFormat,
        AudioSampleRate: audioSampleRate,
        AudioChannel: audioChannel,
        AudioCodeRate: audioCodeRate,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddCustomLiveStreamTranscodeTemplateRequestWithoutParam() *AddCustomLiveStreamTranscodeTemplateRequest {

    return &AddCustomLiveStreamTranscodeTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param videoCodeRate: 转码输出的码率值(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetVideoCodeRate(videoCodeRate int) {
    r.VideoCodeRate = videoCodeRate
}

/* param videoFrameRate: 转码输出的帧率值(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetVideoFrameRate(videoFrameRate string) {
    r.VideoFrameRate = videoFrameRate
}

/* param width: 转码输出视频宽度(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetWidth(width int) {
    r.Width = width
}

/* param height: 转码输出视频宽度(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetHeight(height int) {
    r.Height = height
}

/* param template: 转码模板自定义名称(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetTemplate(template string) {
    r.Template = template
}

/* param audioCodec: 转码输出音频编码格式(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetAudioCodec(audioCodec string) {
    r.AudioCodec = audioCodec
}

/* param audioFormat: 转码输出音频格式(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetAudioFormat(audioFormat string) {
    r.AudioFormat = audioFormat
}

/* param audioSampleRate: 转码输出音频采样率(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetAudioSampleRate(audioSampleRate int) {
    r.AudioSampleRate = audioSampleRate
}

/* param audioChannel: 转码输出音频通道数(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetAudioChannel(audioChannel int) {
    r.AudioChannel = audioChannel
}

/* param audioCodeRate: 转码输出音频码率(Required) */
func (r *AddCustomLiveStreamTranscodeTemplateRequest) SetAudioCodeRate(audioCodeRate int) {
    r.AudioCodeRate = audioCodeRate
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddCustomLiveStreamTranscodeTemplateRequest) GetRegionId() string {
    return ""
}

type AddCustomLiveStreamTranscodeTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddCustomLiveStreamTranscodeTemplateResult `json:"result"`
}

type AddCustomLiveStreamTranscodeTemplateResult struct {
}