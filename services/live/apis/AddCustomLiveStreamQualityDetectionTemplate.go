// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type AddCustomLiveStreamQualityDetectionTemplateRequest struct {

    core.JDCloudRequest

    /* 模板名称。长度不超过128个字符。UTF-8编码
  */
    Template string `json:"template"`

    /* 检测项列表。取值范围：
  BlackScreen - 黑屏
  PureColor - 纯色
  ColorCast - 偏色
  FrozenFrame - 静帧
  Brightness - 亮度
  Contrast - 对比度
  */
    Modules []string `json:"modules"`
}

/*
 * param template: 模板名称。长度不超过128个字符。UTF-8编码
 (Required)
 * param modules: 检测项列表。取值范围：
  BlackScreen - 黑屏
  PureColor - 纯色
  ColorCast - 偏色
  FrozenFrame - 静帧
  Brightness - 亮度
  Contrast - 对比度
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddCustomLiveStreamQualityDetectionTemplateRequest(
    template string,
    modules []string,
) *AddCustomLiveStreamQualityDetectionTemplateRequest {

	return &AddCustomLiveStreamQualityDetectionTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/qualityDetectionCustoms:template",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Template: template,
        Modules: modules,
	}
}

/*
 * param template: 模板名称。长度不超过128个字符。UTF-8编码
 (Required)
 * param modules: 检测项列表。取值范围：
  BlackScreen - 黑屏
  PureColor - 纯色
  ColorCast - 偏色
  FrozenFrame - 静帧
  Brightness - 亮度
  Contrast - 对比度
 (Required)
 */
func NewAddCustomLiveStreamQualityDetectionTemplateRequestWithAllParams(
    template string,
    modules []string,
) *AddCustomLiveStreamQualityDetectionTemplateRequest {

    return &AddCustomLiveStreamQualityDetectionTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/qualityDetectionCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Template: template,
        Modules: modules,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddCustomLiveStreamQualityDetectionTemplateRequestWithoutParam() *AddCustomLiveStreamQualityDetectionTemplateRequest {

    return &AddCustomLiveStreamQualityDetectionTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/qualityDetectionCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param template: 模板名称。长度不超过128个字符。UTF-8编码
(Required) */
func (r *AddCustomLiveStreamQualityDetectionTemplateRequest) SetTemplate(template string) {
    r.Template = template
}

/* param modules: 检测项列表。取值范围：
  BlackScreen - 黑屏
  PureColor - 纯色
  ColorCast - 偏色
  FrozenFrame - 静帧
  Brightness - 亮度
  Contrast - 对比度
(Required) */
func (r *AddCustomLiveStreamQualityDetectionTemplateRequest) SetModules(modules []string) {
    r.Modules = modules
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddCustomLiveStreamQualityDetectionTemplateRequest) GetRegionId() string {
    return ""
}

type AddCustomLiveStreamQualityDetectionTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddCustomLiveStreamQualityDetectionTemplateResult `json:"result"`
}

type AddCustomLiveStreamQualityDetectionTemplateResult struct {
}