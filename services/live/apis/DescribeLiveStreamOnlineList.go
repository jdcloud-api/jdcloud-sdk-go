// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    live "github.com/jdcloud-api/jdcloud-sdk-go/services/live/models"
)

type DescribeLiveStreamOnlineListRequest struct {

    core.JDCloudRequest

    /* 推流域名  */
    PublishDomain string `json:"publishDomain"`

    /* 页码；默认为1；取值范围[1, 100000] (Optional) */
    PageNum *int `json:"pageNum"`

    /* 分页大小；默认为10；取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 应用名称（APP） (Optional) */
    AppName *string `json:"appName"`
}

/*
 * param publishDomain: 推流域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeLiveStreamOnlineListRequest(
    publishDomain string,
) *DescribeLiveStreamOnlineListRequest {

	return &DescribeLiveStreamOnlineListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/streams/{publishDomain}/onlineList",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        PublishDomain: publishDomain,
	}
}

/*
 * param publishDomain: 推流域名 (Required)
 * param pageNum: 页码；默认为1；取值范围[1, 100000] (Optional)
 * param pageSize: 分页大小；默认为10；取值范围[10, 100] (Optional)
 * param appName: 应用名称（APP） (Optional)
 */
func NewDescribeLiveStreamOnlineListRequestWithAllParams(
    publishDomain string,
    pageNum *int,
    pageSize *int,
    appName *string,
) *DescribeLiveStreamOnlineListRequest {

    return &DescribeLiveStreamOnlineListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{publishDomain}/onlineList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PublishDomain: publishDomain,
        PageNum: pageNum,
        PageSize: pageSize,
        AppName: appName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeLiveStreamOnlineListRequestWithoutParam() *DescribeLiveStreamOnlineListRequest {

    return &DescribeLiveStreamOnlineListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{publishDomain}/onlineList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param publishDomain: 推流域名(Required) */
func (r *DescribeLiveStreamOnlineListRequest) SetPublishDomain(publishDomain string) {
    r.PublishDomain = publishDomain
}

/* param pageNum: 页码；默认为1；取值范围[1, 100000](Optional) */
func (r *DescribeLiveStreamOnlineListRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}

/* param pageSize: 分页大小；默认为10；取值范围[10, 100](Optional) */
func (r *DescribeLiveStreamOnlineListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param appName: 应用名称（APP）(Optional) */
func (r *DescribeLiveStreamOnlineListRequest) SetAppName(appName string) {
    r.AppName = &appName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeLiveStreamOnlineListRequest) GetRegionId() string {
    return ""
}

type DescribeLiveStreamOnlineListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeLiveStreamOnlineListResult `json:"result"`
}

type DescribeLiveStreamOnlineListResult struct {
    PageNumber int `json:"pageNumber"`
    PageSize int `json:"pageSize"`
    TotalCount int `json:"totalCount"`
    OnlineStreamInfos []live.OnlineStreamInfo `json:"onlineStreamInfos"`
}