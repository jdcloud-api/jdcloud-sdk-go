// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    live "github.com/jdcloud-api/jdcloud-sdk-go/services/live/models"
)

type DescribeLiveStreamPublishListRequest struct {

    core.JDCloudRequest

    /* 推流域名  */
    PublishDomain string `json:"publishDomain"`

    /* 页码<br>
- 取值范围[1, 100000]
 (Optional) */
    PageNum *int `json:"pageNum"`

    /* 分页大小<br>
- 取值范围[10, 100]
 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 应用名称 (Optional) */
    AppName *string `json:"appName"`

    /* 流名称 (Optional) */
    StreamName *string `json:"streamName"`

    /* 推流起始时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
  */
    StartTime string `json:"startTime"`

    /* 推流结束时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
- 结束时间为空默认为当前时间
 (Optional) */
    EndTime *string `json:"endTime"`
}

/*
 * param publishDomain: 推流域名 (Required)
 * param startTime: 推流起始时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeLiveStreamPublishListRequest(
    publishDomain string,
    startTime string,
) *DescribeLiveStreamPublishListRequest {

	return &DescribeLiveStreamPublishListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/streams/{publishDomain}/publishList",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        PublishDomain: publishDomain,
        StartTime: startTime,
	}
}

/*
 * param publishDomain: 推流域名 (Required)
 * param pageNum: 页码<br>
- 取值范围[1, 100000]
 (Optional)
 * param pageSize: 分页大小<br>
- 取值范围[10, 100]
 (Optional)
 * param appName: 应用名称 (Optional)
 * param streamName: 流名称 (Optional)
 * param startTime: 推流起始时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
 (Required)
 * param endTime: 推流结束时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
- 结束时间为空默认为当前时间
 (Optional)
 */
func NewDescribeLiveStreamPublishListRequestWithAllParams(
    publishDomain string,
    pageNum *int,
    pageSize *int,
    appName *string,
    streamName *string,
    startTime string,
    endTime *string,
) *DescribeLiveStreamPublishListRequest {

    return &DescribeLiveStreamPublishListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{publishDomain}/publishList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PublishDomain: publishDomain,
        PageNum: pageNum,
        PageSize: pageSize,
        AppName: appName,
        StreamName: streamName,
        StartTime: startTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeLiveStreamPublishListRequestWithoutParam() *DescribeLiveStreamPublishListRequest {

    return &DescribeLiveStreamPublishListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{publishDomain}/publishList",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param publishDomain: 推流域名(Required) */
func (r *DescribeLiveStreamPublishListRequest) SetPublishDomain(publishDomain string) {
    r.PublishDomain = publishDomain
}

/* param pageNum: 页码<br>
- 取值范围[1, 100000]
(Optional) */
func (r *DescribeLiveStreamPublishListRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}

/* param pageSize: 分页大小<br>
- 取值范围[10, 100]
(Optional) */
func (r *DescribeLiveStreamPublishListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param appName: 应用名称(Optional) */
func (r *DescribeLiveStreamPublishListRequest) SetAppName(appName string) {
    r.AppName = &appName
}

/* param streamName: 流名称(Optional) */
func (r *DescribeLiveStreamPublishListRequest) SetStreamName(streamName string) {
    r.StreamName = &streamName
}

/* param startTime: 推流起始时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
(Required) */
func (r *DescribeLiveStreamPublishListRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

/* param endTime: 推流结束时间<br>
- UTC时间
  格式:yyyy-MM-dd'T'HH:mm:ss'Z'
  示例:2018-10-21T10:00:00Z
- 最大支持最近90天内的流历史查询
- 结束时间为空默认为当前时间
(Optional) */
func (r *DescribeLiveStreamPublishListRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeLiveStreamPublishListRequest) GetRegionId() string {
    return ""
}

type DescribeLiveStreamPublishListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeLiveStreamPublishListResult `json:"result"`
}

type DescribeLiveStreamPublishListResult struct {
    PageNumber int `json:"pageNumber"`
    PageSize int `json:"pageSize"`
    TotalCount int `json:"totalCount"`
    LiveStreamPublishInfos []live.LiveStreamPublishInfo `json:"liveStreamPublishInfos"`
}