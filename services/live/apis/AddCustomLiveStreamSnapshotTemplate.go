// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type AddCustomLiveStreamSnapshotTemplateRequest struct {

    core.JDCloudRequest

    /* 截图格式
- 取值: jpg, png
- 不区分大小写
  */
    Format string `json:"format"`

    /* 截图宽度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
 (Optional) */
    Width *int `json:"width"`

    /* 截图高度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
 (Optional) */
    Height *int `json:"height"`

    /* 截图与设定的宽高不匹配时的处理规则
  1: 拉伸
  2: 留黑
  3: 留白
  4: 高斯模糊
- 1是按照设定宽高拉伸
- 2,3,4是等比例的缩放多余或不足处按调置处理
  */
    FillType int `json:"fillType"`

    /* 截图周期
- 取值范围 [5,3600]
- 单位: 秒
  */
    SnapshotInterval int `json:"snapshotInterval"`

    /* 存储模式
  1: 覆盖存储
  2: 顺序存储
  */
    SaveMode int `json:"saveMode"`

    /* 存储桶  */
    SaveBucket string `json:"saveBucket"`

    /* 存储地址  */
    SaveEndpoint string `json:"saveEndpoint"`

    /* 截图模板自定义名称:
- 取值要求: 数字、大小写字母或短横线("-"),
  首尾不能有特殊字符("-")
- <b>注意: 不能与已定义命名重复</b>
  */
    Template string `json:"template"`
}

/*
 * param format: 截图格式
- 取值: jpg, png
- 不区分大小写
 (Required)
 * param fillType: 截图与设定的宽高不匹配时的处理规则
  1: 拉伸
  2: 留黑
  3: 留白
  4: 高斯模糊
- 1是按照设定宽高拉伸
- 2,3,4是等比例的缩放多余或不足处按调置处理
 (Required)
 * param snapshotInterval: 截图周期
- 取值范围 [5,3600]
- 单位: 秒
 (Required)
 * param saveMode: 存储模式
  1: 覆盖存储
  2: 顺序存储
 (Required)
 * param saveBucket: 存储桶 (Required)
 * param saveEndpoint: 存储地址 (Required)
 * param template: 截图模板自定义名称:
- 取值要求: 数字、大小写字母或短横线("-"),
  首尾不能有特殊字符("-")
- <b>注意: 不能与已定义命名重复</b>
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddCustomLiveStreamSnapshotTemplateRequest(
    format string,
    fillType int,
    snapshotInterval int,
    saveMode int,
    saveBucket string,
    saveEndpoint string,
    template string,
) *AddCustomLiveStreamSnapshotTemplateRequest {

	return &AddCustomLiveStreamSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/snapshotCustoms:template",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Format: format,
        FillType: fillType,
        SnapshotInterval: snapshotInterval,
        SaveMode: saveMode,
        SaveBucket: saveBucket,
        SaveEndpoint: saveEndpoint,
        Template: template,
	}
}

/*
 * param format: 截图格式
- 取值: jpg, png
- 不区分大小写
 (Required)
 * param width: 截图宽度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
 (Optional)
 * param height: 截图高度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
 (Optional)
 * param fillType: 截图与设定的宽高不匹配时的处理规则
  1: 拉伸
  2: 留黑
  3: 留白
  4: 高斯模糊
- 1是按照设定宽高拉伸
- 2,3,4是等比例的缩放多余或不足处按调置处理
 (Required)
 * param snapshotInterval: 截图周期
- 取值范围 [5,3600]
- 单位: 秒
 (Required)
 * param saveMode: 存储模式
  1: 覆盖存储
  2: 顺序存储
 (Required)
 * param saveBucket: 存储桶 (Required)
 * param saveEndpoint: 存储地址 (Required)
 * param template: 截图模板自定义名称:
- 取值要求: 数字、大小写字母或短横线("-"),
  首尾不能有特殊字符("-")
- <b>注意: 不能与已定义命名重复</b>
 (Required)
 */
func NewAddCustomLiveStreamSnapshotTemplateRequestWithAllParams(
    format string,
    width *int,
    height *int,
    fillType int,
    snapshotInterval int,
    saveMode int,
    saveBucket string,
    saveEndpoint string,
    template string,
) *AddCustomLiveStreamSnapshotTemplateRequest {

    return &AddCustomLiveStreamSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Format: format,
        Width: width,
        Height: height,
        FillType: fillType,
        SnapshotInterval: snapshotInterval,
        SaveMode: saveMode,
        SaveBucket: saveBucket,
        SaveEndpoint: saveEndpoint,
        Template: template,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddCustomLiveStreamSnapshotTemplateRequestWithoutParam() *AddCustomLiveStreamSnapshotTemplateRequest {

    return &AddCustomLiveStreamSnapshotTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotCustoms:template",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param format: 截图格式
- 取值: jpg, png
- 不区分大小写
(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetFormat(format string) {
    r.Format = format
}

/* param width: 截图宽度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
(Optional) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetWidth(width int) {
    r.Width = &width
}

/* param height: 截图高度
- 取值: [8,8192]
- 如果(width,height)只设置其中之一,则按所设置参数项等比缩放另一项输出截图
- 如果(width,height)都不设置，则按源流大小输出截图
(Optional) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetHeight(height int) {
    r.Height = &height
}

/* param fillType: 截图与设定的宽高不匹配时的处理规则
  1: 拉伸
  2: 留黑
  3: 留白
  4: 高斯模糊
- 1是按照设定宽高拉伸
- 2,3,4是等比例的缩放多余或不足处按调置处理
(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetFillType(fillType int) {
    r.FillType = fillType
}

/* param snapshotInterval: 截图周期
- 取值范围 [5,3600]
- 单位: 秒
(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetSnapshotInterval(snapshotInterval int) {
    r.SnapshotInterval = snapshotInterval
}

/* param saveMode: 存储模式
  1: 覆盖存储
  2: 顺序存储
(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetSaveMode(saveMode int) {
    r.SaveMode = saveMode
}

/* param saveBucket: 存储桶(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetSaveBucket(saveBucket string) {
    r.SaveBucket = saveBucket
}

/* param saveEndpoint: 存储地址(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetSaveEndpoint(saveEndpoint string) {
    r.SaveEndpoint = saveEndpoint
}

/* param template: 截图模板自定义名称:
- 取值要求: 数字、大小写字母或短横线("-"),
  首尾不能有特殊字符("-")
- <b>注意: 不能与已定义命名重复</b>
(Required) */
func (r *AddCustomLiveStreamSnapshotTemplateRequest) SetTemplate(template string) {
    r.Template = template
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddCustomLiveStreamSnapshotTemplateRequest) GetRegionId() string {
    return ""
}

type AddCustomLiveStreamSnapshotTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddCustomLiveStreamSnapshotTemplateResult `json:"result"`
}

type AddCustomLiveStreamSnapshotTemplateResult struct {
}