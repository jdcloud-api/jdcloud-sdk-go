// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    iam "github.com/jdcloud-api/jdcloud-sdk-go/services/iam/models"
)

type DescribeSubUserPermissionsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 子用户用户名  */
    SubUser string `json:"subUser"`

    /* 页码  */
    PageNumber int `json:"pageNumber"`

    /* 每页显示数目  */
    PageSize int `json:"pageSize"`
}

/*
 * param regionId: Region ID 
 * param subUser: 子用户用户名 
 * param pageNumber: 页码 
 * param pageSize: 每页显示数目 
 */
func NewDescribeSubUserPermissionsRequest(
    regionId string,
    subUser string,
    pageNumber int,
    pageSize int,
) *DescribeSubUserPermissionsRequest {

	return &DescribeSubUserPermissionsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/subUser/{subUser}/permisssions",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        SubUser: subUser,
        PageNumber: pageNumber,
        PageSize: pageSize,
	}
}

func (r *DescribeSubUserPermissionsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

func (r *DescribeSubUserPermissionsRequest) SetSubUser(subUser string) {
    r.SubUser = subUser
}

func (r *DescribeSubUserPermissionsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = pageNumber
}

func (r *DescribeSubUserPermissionsRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeSubUserPermissionsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeSubUserPermissionsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeSubUserPermissionsResult `json:"result"`
}

type DescribeSubUserPermissionsResult struct {
    Total int `json:"total"`
    Permissions []iam.Permission `json:"permissions"`
}