// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    iam "github.com/jdcloud-api/jdcloud-sdk-go/services/iam/models"
)

type AddOrganizationUserRelationRequest struct {

    core.JDCloudRequest

    /* 组织ID  */
    OrgId string `json:"orgId"`

    /* 新建组织用户关联子用户关系参数  */
    AddOrganizationUserRelationInfo *iam.AddOrganizationUserRelationInfo `json:"addOrganizationUserRelationInfo"`
}

/*
 * param orgId: 组织ID (Required)
 * param addOrganizationUserRelationInfo: 新建组织用户关联子用户关系参数 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddOrganizationUserRelationRequest(
    orgId string,
    addOrganizationUserRelationInfo *iam.AddOrganizationUserRelationInfo,
) *AddOrganizationUserRelationRequest {

	return &AddOrganizationUserRelationRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/organization/{orgId}/userRelation:add",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        OrgId: orgId,
        AddOrganizationUserRelationInfo: addOrganizationUserRelationInfo,
	}
}

/*
 * param orgId: 组织ID (Required)
 * param addOrganizationUserRelationInfo: 新建组织用户关联子用户关系参数 (Required)
 */
func NewAddOrganizationUserRelationRequestWithAllParams(
    orgId string,
    addOrganizationUserRelationInfo *iam.AddOrganizationUserRelationInfo,
) *AddOrganizationUserRelationRequest {

    return &AddOrganizationUserRelationRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/organization/{orgId}/userRelation:add",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        OrgId: orgId,
        AddOrganizationUserRelationInfo: addOrganizationUserRelationInfo,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddOrganizationUserRelationRequestWithoutParam() *AddOrganizationUserRelationRequest {

    return &AddOrganizationUserRelationRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/organization/{orgId}/userRelation:add",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param orgId: 组织ID(Required) */
func (r *AddOrganizationUserRelationRequest) SetOrgId(orgId string) {
    r.OrgId = orgId
}
/* param addOrganizationUserRelationInfo: 新建组织用户关联子用户关系参数(Required) */
func (r *AddOrganizationUserRelationRequest) SetAddOrganizationUserRelationInfo(addOrganizationUserRelationInfo *iam.AddOrganizationUserRelationInfo) {
    r.AddOrganizationUserRelationInfo = addOrganizationUserRelationInfo
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddOrganizationUserRelationRequest) GetRegionId() string {
    return ""
}

type AddOrganizationUserRelationResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddOrganizationUserRelationResult `json:"result"`
}

type AddOrganizationUserRelationResult struct {
}