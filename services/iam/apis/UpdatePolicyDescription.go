// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    iam "github.com/lshuining/jdcloud-sdk-go/services/iam/models"
)

type UpdatePolicyDescriptionRequest struct {

    core.JDCloudRequest

    /* 策略名称  */
    PolicyName string `json:"policyName"`

    /* 策略描述信息  */
    UpdatePolicyDescriptionInfo *iam.UpdatePolicyDescriptionInfo `json:"updatePolicyDescriptionInfo"`
}

/*
 * param policyName: 策略名称 (Required)
 * param updatePolicyDescriptionInfo: 策略描述信息 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdatePolicyDescriptionRequest(
    policyName string,
    updatePolicyDescriptionInfo *iam.UpdatePolicyDescriptionInfo,
) *UpdatePolicyDescriptionRequest {

	return &UpdatePolicyDescriptionRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/policy/{policyName}/description",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        PolicyName: policyName,
        UpdatePolicyDescriptionInfo: updatePolicyDescriptionInfo,
	}
}

/*
 * param policyName: 策略名称 (Required)
 * param updatePolicyDescriptionInfo: 策略描述信息 (Required)
 */
func NewUpdatePolicyDescriptionRequestWithAllParams(
    policyName string,
    updatePolicyDescriptionInfo *iam.UpdatePolicyDescriptionInfo,
) *UpdatePolicyDescriptionRequest {

    return &UpdatePolicyDescriptionRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/policy/{policyName}/description",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        PolicyName: policyName,
        UpdatePolicyDescriptionInfo: updatePolicyDescriptionInfo,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdatePolicyDescriptionRequestWithoutParam() *UpdatePolicyDescriptionRequest {

    return &UpdatePolicyDescriptionRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/policy/{policyName}/description",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param policyName: 策略名称(Required) */
func (r *UpdatePolicyDescriptionRequest) SetPolicyName(policyName string) {
    r.PolicyName = policyName
}

/* param updatePolicyDescriptionInfo: 策略描述信息(Required) */
func (r *UpdatePolicyDescriptionRequest) SetUpdatePolicyDescriptionInfo(updatePolicyDescriptionInfo *iam.UpdatePolicyDescriptionInfo) {
    r.UpdatePolicyDescriptionInfo = updatePolicyDescriptionInfo
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdatePolicyDescriptionRequest) GetRegionId() string {
    return ""
}

type UpdatePolicyDescriptionResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdatePolicyDescriptionResult `json:"result"`
}

type UpdatePolicyDescriptionResult struct {
}