// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type DescribeProgressRequest struct {

    core.JDCloudRequest

    /* 地域代码  */
    RegionId string `json:"regionId"`

    /* 实例ID  */
    InstanceId string `json:"instanceId"`

    /* 是否获取创建域名进度，0不需要，1需要 (Optional) */
    BackendProgress *int `json:"backendProgress"`
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceId: 实例ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeProgressRequest(
    regionId string,
    instanceId string,
) *DescribeProgressRequest {

	return &DescribeProgressRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/progress",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InstanceId: instanceId,
	}
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceId: 实例ID (Required)
 * param backendProgress: 是否获取创建域名进度，0不需要，1需要 (Optional)
 */
func NewDescribeProgressRequestWithAllParams(
    regionId string,
    instanceId string,
    backendProgress *int,
) *DescribeProgressRequest {

    return &DescribeProgressRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/progress",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        BackendProgress: backendProgress,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeProgressRequestWithoutParam() *DescribeProgressRequest {

    return &DescribeProgressRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/progress",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码(Required) */
func (r *DescribeProgressRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: 实例ID(Required) */
func (r *DescribeProgressRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param backendProgress: 是否获取创建域名进度，0不需要，1需要(Optional) */
func (r *DescribeProgressRequest) SetBackendProgress(backendProgress int) {
    r.BackendProgress = &backendProgress
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeProgressRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeProgressResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeProgressResult `json:"result"`
}

type DescribeProgressResult struct {
    InstanceReadyDomain int `json:"instanceReadyDomain"`
    InstanceTotalDomain int `json:"instanceTotalDomain"`
    InstanceReadyNode int `json:"instanceReadyNode"`
    InstanceTotalNode int `json:"instanceTotalNode"`
}