// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    antipro "github.com/lshuining/jdcloud-sdk-go/services/antipro/models"
)

type CreateInstanceRequest struct {

    core.JDCloudRequest

    /* 地域 Id, DDoS 防护包目前支持华北-北京, 华东-宿迁, 华东-上海  */
    RegionId string `json:"regionId"`

    /* 创建防护包实例请求参数  */
    CreateInstanceSpec *antipro.CreateInstanceSpec `json:"createInstanceSpec"`

    /* 自动续费配置, 默认不开通 (Optional) */
    AutoRenewalSpec *antipro.AutoRenewalSpec `json:"autoRenewalSpec"`

    /* 提交订单附加操作 (Optional) */
    ExtraOperationSpec *antipro.ExtraOperationSpec `json:"extraOperationSpec"`
}

/*
 * param regionId: 地域 Id, DDoS 防护包目前支持华北-北京, 华东-宿迁, 华东-上海 (Required)
 * param createInstanceSpec: 创建防护包实例请求参数 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateInstanceRequest(
    regionId string,
    createInstanceSpec *antipro.CreateInstanceSpec,
) *CreateInstanceRequest {

	return &CreateInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CreateInstanceSpec: createInstanceSpec,
	}
}

/*
 * param regionId: 地域 Id, DDoS 防护包目前支持华北-北京, 华东-宿迁, 华东-上海 (Required)
 * param createInstanceSpec: 创建防护包实例请求参数 (Required)
 * param autoRenewalSpec: 自动续费配置, 默认不开通 (Optional)
 * param extraOperationSpec: 提交订单附加操作 (Optional)
 */
func NewCreateInstanceRequestWithAllParams(
    regionId string,
    createInstanceSpec *antipro.CreateInstanceSpec,
    autoRenewalSpec *antipro.AutoRenewalSpec,
    extraOperationSpec *antipro.ExtraOperationSpec,
) *CreateInstanceRequest {

    return &CreateInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CreateInstanceSpec: createInstanceSpec,
        AutoRenewalSpec: autoRenewalSpec,
        ExtraOperationSpec: extraOperationSpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateInstanceRequestWithoutParam() *CreateInstanceRequest {

    return &CreateInstanceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id, DDoS 防护包目前支持华北-北京, 华东-宿迁, 华东-上海(Required) */
func (r *CreateInstanceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param createInstanceSpec: 创建防护包实例请求参数(Required) */
func (r *CreateInstanceRequest) SetCreateInstanceSpec(createInstanceSpec *antipro.CreateInstanceSpec) {
    r.CreateInstanceSpec = createInstanceSpec
}

/* param autoRenewalSpec: 自动续费配置, 默认不开通(Optional) */
func (r *CreateInstanceRequest) SetAutoRenewalSpec(autoRenewalSpec *antipro.AutoRenewalSpec) {
    r.AutoRenewalSpec = autoRenewalSpec
}

/* param extraOperationSpec: 提交订单附加操作(Optional) */
func (r *CreateInstanceRequest) SetExtraOperationSpec(extraOperationSpec *antipro.ExtraOperationSpec) {
    r.ExtraOperationSpec = extraOperationSpec
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateInstanceRequest) GetRegionId() string {
    return r.RegionId
}

type CreateInstanceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateInstanceResult `json:"result"`
}

type CreateInstanceResult struct {
    InstanceId string `json:"instanceId"`
}