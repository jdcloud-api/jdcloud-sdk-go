// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type DescribeAttackSourceRequest struct {

    core.JDCloudRequest

    /* 攻击记录 Id  */
    AttackLogId string `json:"attackLogId"`

    /* DDoS 防护包已防护的公网 IP. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-protection-package/api/describeprotectediplist'>describeProtectedIpList</a> 接口查询 DDoS 防护包已防护的公网 IP  */
    Ip string `json:"ip"`
}

/*
 * param attackLogId: 攻击记录 Id (Required)
 * param ip: DDoS 防护包已防护的公网 IP. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-protection-package/api/describeprotectediplist'>describeProtectedIpList</a> 接口查询 DDoS 防护包已防护的公网 IP (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeAttackSourceRequest(
    attackLogId string,
    ip string,
) *DescribeAttackSourceRequest {

	return &DescribeAttackSourceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/attacklog/{attackLogId}:describeAttackSource",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        AttackLogId: attackLogId,
        Ip: ip,
	}
}

/*
 * param attackLogId: 攻击记录 Id (Required)
 * param ip: DDoS 防护包已防护的公网 IP. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-protection-package/api/describeprotectediplist'>describeProtectedIpList</a> 接口查询 DDoS 防护包已防护的公网 IP (Required)
 */
func NewDescribeAttackSourceRequestWithAllParams(
    attackLogId string,
    ip string,
) *DescribeAttackSourceRequest {

    return &DescribeAttackSourceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/attacklog/{attackLogId}:describeAttackSource",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        AttackLogId: attackLogId,
        Ip: ip,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeAttackSourceRequestWithoutParam() *DescribeAttackSourceRequest {

    return &DescribeAttackSourceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/attacklog/{attackLogId}:describeAttackSource",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param attackLogId: 攻击记录 Id(Required) */
func (r *DescribeAttackSourceRequest) SetAttackLogId(attackLogId string) {
    r.AttackLogId = attackLogId
}

/* param ip: DDoS 防护包已防护的公网 IP. <br>- 使用 <a href='http://docs.jdcloud.com/anti-ddos-protection-package/api/describeprotectediplist'>describeProtectedIpList</a> 接口查询 DDoS 防护包已防护的公网 IP(Required) */
func (r *DescribeAttackSourceRequest) SetIp(ip string) {
    r.Ip = ip
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeAttackSourceRequest) GetRegionId() string {
    return ""
}

type DescribeAttackSourceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeAttackSourceResult `json:"result"`
}

type DescribeAttackSourceResult struct {
    Data []string `json:"data"`
}