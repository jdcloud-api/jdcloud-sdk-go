// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ModifyContractRequest struct {

    core.JDCloudRequest

    /* 区域(如:cn-north-1)  */
    RegionId string `json:"regionId"`

    /* 合同唯一标识(添加不需要传，编辑必传) (Optional) */
    ContractUuid *string `json:"contractUuid"`

    /* 合同编号 (Optional) */
    ContractNo *string `json:"contractNo"`

    /* 开始时间 (Optional) */
    StartDate *string `json:"startDate"`

    /* 结束时间 (Optional) */
    EndDate *string `json:"endDate"`

    /* 备注 (Optional) */
    Remark *string `json:"remark"`

    /* 合同附件文件标识 (Optional) */
    FileUuid *string `json:"fileUuid"`
}

/*
 * param regionId: 区域(如:cn-north-1) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyContractRequest(
    regionId string,
) *ModifyContractRequest {

	return &ModifyContractRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/Contract:modifyContract",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 区域(如:cn-north-1) (Required)
 * param contractUuid: 合同唯一标识(添加不需要传，编辑必传) (Optional)
 * param contractNo: 合同编号 (Optional)
 * param startDate: 开始时间 (Optional)
 * param endDate: 结束时间 (Optional)
 * param remark: 备注 (Optional)
 * param fileUuid: 合同附件文件标识 (Optional)
 */
func NewModifyContractRequestWithAllParams(
    regionId string,
    contractUuid *string,
    contractNo *string,
    startDate *string,
    endDate *string,
    remark *string,
    fileUuid *string,
) *ModifyContractRequest {

    return &ModifyContractRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/Contract:modifyContract",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ContractUuid: contractUuid,
        ContractNo: contractNo,
        StartDate: startDate,
        EndDate: endDate,
        Remark: remark,
        FileUuid: fileUuid,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyContractRequestWithoutParam() *ModifyContractRequest {

    return &ModifyContractRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/Contract:modifyContract",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域(如:cn-north-1)(Required) */
func (r *ModifyContractRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param contractUuid: 合同唯一标识(添加不需要传，编辑必传)(Optional) */
func (r *ModifyContractRequest) SetContractUuid(contractUuid string) {
    r.ContractUuid = &contractUuid
}
/* param contractNo: 合同编号(Optional) */
func (r *ModifyContractRequest) SetContractNo(contractNo string) {
    r.ContractNo = &contractNo
}
/* param startDate: 开始时间(Optional) */
func (r *ModifyContractRequest) SetStartDate(startDate string) {
    r.StartDate = &startDate
}
/* param endDate: 结束时间(Optional) */
func (r *ModifyContractRequest) SetEndDate(endDate string) {
    r.EndDate = &endDate
}
/* param remark: 备注(Optional) */
func (r *ModifyContractRequest) SetRemark(remark string) {
    r.Remark = &remark
}
/* param fileUuid: 合同附件文件标识(Optional) */
func (r *ModifyContractRequest) SetFileUuid(fileUuid string) {
    r.FileUuid = &fileUuid
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyContractRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyContractResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyContractResult `json:"result"`
}

type ModifyContractResult struct {
    Result bool `json:"result"`
    RequestId string `json:"requestId"`
}