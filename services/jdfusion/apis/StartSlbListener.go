// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type StartSlbListenerRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 负载均衡id  */
    Id string `json:"id"`

    /* 监听器端口  */
    ListenerPort int `json:"listenerPort"`
}

/*
 * param regionId: 地域ID (Required)
 * param id: 负载均衡id (Required)
 * param listenerPort: 监听器端口 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewStartSlbListenerRequest(
    regionId string,
    id string,
    listenerPort int,
) *StartSlbListenerRequest {

	return &StartSlbListenerRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/vpc_slbs_listener/{id}:start",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Id: id,
        ListenerPort: listenerPort,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param id: 负载均衡id (Required)
 * param listenerPort: 监听器端口 (Required)
 */
func NewStartSlbListenerRequestWithAllParams(
    regionId string,
    id string,
    listenerPort int,
) *StartSlbListenerRequest {

    return &StartSlbListenerRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/vpc_slbs_listener/{id}:start",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Id: id,
        ListenerPort: listenerPort,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewStartSlbListenerRequestWithoutParam() *StartSlbListenerRequest {

    return &StartSlbListenerRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/vpc_slbs_listener/{id}:start",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *StartSlbListenerRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param id: 负载均衡id(Required) */
func (r *StartSlbListenerRequest) SetId(id string) {
    r.Id = id
}

/* param listenerPort: 监听器端口(Required) */
func (r *StartSlbListenerRequest) SetListenerPort(listenerPort int) {
    r.ListenerPort = listenerPort
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r StartSlbListenerRequest) GetRegionId() string {
    return r.RegionId
}

type StartSlbListenerResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result StartSlbListenerResult `json:"result"`
}

type StartSlbListenerResult struct {
}