// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    jdccs "github.com/lshuining/jdcloud-sdk-go/services/jdccs/models"
)

type DescribeTrafficSamplingRequest struct {

    core.JDCloudRequest

    /* 资源ID，支持多个resourceId批量查询，每个id用英文竖线分隔  */
    ResourceId string `json:"resourceId"`

    /* 查询时间范围的开始时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟）  */
    StartTime int `json:"startTime"`

    /* 查询时间范围的结束时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟）  */
    EndTime int `json:"endTime"`
}

/*
 * param resourceId: 资源ID，支持多个resourceId批量查询，每个id用英文竖线分隔 (Required)
 * param startTime: 查询时间范围的开始时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟） (Required)
 * param endTime: 查询时间范围的结束时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeTrafficSamplingRequest(
    resourceId string,
    startTime int,
    endTime int,
) *DescribeTrafficSamplingRequest {

	return &DescribeTrafficSamplingRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/trafficSampling",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        ResourceId: resourceId,
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param resourceId: 资源ID，支持多个resourceId批量查询，每个id用英文竖线分隔 (Required)
 * param startTime: 查询时间范围的开始时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟） (Required)
 * param endTime: 查询时间范围的结束时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟） (Required)
 */
func NewDescribeTrafficSamplingRequestWithAllParams(
    resourceId string,
    startTime int,
    endTime int,
) *DescribeTrafficSamplingRequest {

    return &DescribeTrafficSamplingRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/trafficSampling",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ResourceId: resourceId,
        StartTime: startTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeTrafficSamplingRequestWithoutParam() *DescribeTrafficSamplingRequest {

    return &DescribeTrafficSamplingRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/trafficSampling",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param resourceId: 资源ID，支持多个resourceId批量查询，每个id用英文竖线分隔(Required) */
func (r *DescribeTrafficSamplingRequest) SetResourceId(resourceId string) {
    r.ResourceId = resourceId
}

/* param startTime: 查询时间范围的开始时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟）(Required) */
func (r *DescribeTrafficSamplingRequest) SetStartTime(startTime int) {
    r.StartTime = startTime
}

/* param endTime: 查询时间范围的结束时间， UNIX时间戳，（支持查询最近30分钟数据且时间范围不超过5分钟）(Required) */
func (r *DescribeTrafficSamplingRequest) SetEndTime(endTime int) {
    r.EndTime = endTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeTrafficSamplingRequest) GetRegionId() string {
    return ""
}

type DescribeTrafficSamplingResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeTrafficSamplingResult `json:"result"`
}

type DescribeTrafficSamplingResult struct {
    Data []jdccs.TrafficSamplingData `json:"data"`
}