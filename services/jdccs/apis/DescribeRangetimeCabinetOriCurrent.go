// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DescribeRangetimeCabinetOriCurrentRequest struct {

    core.JDCloudRequest

    /* IDC机房ID  */
    Idc string `json:"idc"`

    /* 机柜资源ID  */
    ResourceId string `json:"resourceId"`

    /* 查询时间范围的开始时间， UNIX时间戳，（最多支持最近90天数据查询）  */
    StartTime int `json:"startTime"`

    /* 查询时间范围的结束时间， UNIX时间戳，（最多支持最近90天数据查询）  */
    EndTime int `json:"endTime"`
}

/*
 * param idc: IDC机房ID (Required)
 * param resourceId: 机柜资源ID (Required)
 * param startTime: 查询时间范围的开始时间， UNIX时间戳，（最多支持最近90天数据查询） (Required)
 * param endTime: 查询时间范围的结束时间， UNIX时间戳，（最多支持最近90天数据查询） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeRangetimeCabinetOriCurrentRequest(
    idc string,
    resourceId string,
    startTime int,
    endTime int,
) *DescribeRangetimeCabinetOriCurrentRequest {

	return &DescribeRangetimeCabinetOriCurrentRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/idcs/{idc}/rangetimeCabinetOriCurrent",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Idc: idc,
        ResourceId: resourceId,
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param idc: IDC机房ID (Required)
 * param resourceId: 机柜资源ID (Required)
 * param startTime: 查询时间范围的开始时间， UNIX时间戳，（最多支持最近90天数据查询） (Required)
 * param endTime: 查询时间范围的结束时间， UNIX时间戳，（最多支持最近90天数据查询） (Required)
 */
func NewDescribeRangetimeCabinetOriCurrentRequestWithAllParams(
    idc string,
    resourceId string,
    startTime int,
    endTime int,
) *DescribeRangetimeCabinetOriCurrentRequest {

    return &DescribeRangetimeCabinetOriCurrentRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/idcs/{idc}/rangetimeCabinetOriCurrent",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Idc: idc,
        ResourceId: resourceId,
        StartTime: startTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeRangetimeCabinetOriCurrentRequestWithoutParam() *DescribeRangetimeCabinetOriCurrentRequest {

    return &DescribeRangetimeCabinetOriCurrentRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/idcs/{idc}/rangetimeCabinetOriCurrent",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param idc: IDC机房ID(Required) */
func (r *DescribeRangetimeCabinetOriCurrentRequest) SetIdc(idc string) {
    r.Idc = idc
}
/* param resourceId: 机柜资源ID(Required) */
func (r *DescribeRangetimeCabinetOriCurrentRequest) SetResourceId(resourceId string) {
    r.ResourceId = resourceId
}
/* param startTime: 查询时间范围的开始时间， UNIX时间戳，（最多支持最近90天数据查询）(Required) */
func (r *DescribeRangetimeCabinetOriCurrentRequest) SetStartTime(startTime int) {
    r.StartTime = startTime
}
/* param endTime: 查询时间范围的结束时间， UNIX时间戳，（最多支持最近90天数据查询）(Required) */
func (r *DescribeRangetimeCabinetOriCurrentRequest) SetEndTime(endTime int) {
    r.EndTime = endTime
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeRangetimeCabinetOriCurrentRequest) GetRegionId() string {
    return ""
}

type DescribeRangetimeCabinetOriCurrentResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeRangetimeCabinetOriCurrentResult `json:"result"`
}

type DescribeRangetimeCabinetOriCurrentResult struct {
    Data interface{} `json:"data"`
}