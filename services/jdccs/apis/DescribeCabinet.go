// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    jdccs "github.com/lshuining/jdcloud-sdk-go/services/jdccs/models"
)

type DescribeCabinetRequest struct {

    core.JDCloudRequest

    /* IDC机房ID  */
    Idc string `json:"idc"`

    /* 机柜实例ID  */
    CabinetId string `json:"cabinetId"`
}

/*
 * param idc: IDC机房ID (Required)
 * param cabinetId: 机柜实例ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeCabinetRequest(
    idc string,
    cabinetId string,
) *DescribeCabinetRequest {

	return &DescribeCabinetRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/idcs/{idc}/cabinets/{cabinetId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Idc: idc,
        CabinetId: cabinetId,
	}
}

/*
 * param idc: IDC机房ID (Required)
 * param cabinetId: 机柜实例ID (Required)
 */
func NewDescribeCabinetRequestWithAllParams(
    idc string,
    cabinetId string,
) *DescribeCabinetRequest {

    return &DescribeCabinetRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/idcs/{idc}/cabinets/{cabinetId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Idc: idc,
        CabinetId: cabinetId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeCabinetRequestWithoutParam() *DescribeCabinetRequest {

    return &DescribeCabinetRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/idcs/{idc}/cabinets/{cabinetId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param idc: IDC机房ID(Required) */
func (r *DescribeCabinetRequest) SetIdc(idc string) {
    r.Idc = idc
}

/* param cabinetId: 机柜实例ID(Required) */
func (r *DescribeCabinetRequest) SetCabinetId(cabinetId string) {
    r.CabinetId = cabinetId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeCabinetRequest) GetRegionId() string {
    return ""
}

type DescribeCabinetResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeCabinetResult `json:"result"`
}

type DescribeCabinetResult struct {
    Cabinet jdccs.Cabinet `json:"cabinet"`
}