// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type SwitchAlarmRequest struct {

    core.JDCloudRequest

    /* 报警规则ID  */
    AlarmId string `json:"alarmId"`

    /* 规则状态 disabled:禁用 enabled:启用 (Optional) */
    Status *string `json:"status"`
}

/*
 * param alarmId: 报警规则ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSwitchAlarmRequest(
    alarmId string,
) *SwitchAlarmRequest {

	return &SwitchAlarmRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/alarms/{alarmId}:switch",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        AlarmId: alarmId,
	}
}

/*
 * param alarmId: 报警规则ID (Required)
 * param status: 规则状态 disabled:禁用 enabled:启用 (Optional)
 */
func NewSwitchAlarmRequestWithAllParams(
    alarmId string,
    status *string,
) *SwitchAlarmRequest {

    return &SwitchAlarmRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/alarms/{alarmId}:switch",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        AlarmId: alarmId,
        Status: status,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSwitchAlarmRequestWithoutParam() *SwitchAlarmRequest {

    return &SwitchAlarmRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/alarms/{alarmId}:switch",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param alarmId: 报警规则ID(Required) */
func (r *SwitchAlarmRequest) SetAlarmId(alarmId string) {
    r.AlarmId = alarmId
}

/* param status: 规则状态 disabled:禁用 enabled:启用(Optional) */
func (r *SwitchAlarmRequest) SetStatus(status string) {
    r.Status = &status
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SwitchAlarmRequest) GetRegionId() string {
    return ""
}

type SwitchAlarmResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SwitchAlarmResult `json:"result"`
}

type SwitchAlarmResult struct {
    Success bool `json:"success"`
}