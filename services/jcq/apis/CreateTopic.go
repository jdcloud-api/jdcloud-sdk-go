// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type CreateTopicRequest struct {

    core.JDCloudRequest

    /* 所在区域的Region ID  */
    RegionId string `json:"regionId"`

    /* topic名称  */
    TopicName string `json:"topicName"`

    /* 类型，[normal,global_order]  */
    Type string `json:"type"`

    /* 描述，长度不大于255 (Optional) */
    Description *string `json:"description"`
}

/*
 * param regionId: 所在区域的Region ID (Required)
 * param topicName: topic名称 (Required)
 * param type_: 类型，[normal,global_order] (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateTopicRequest(
    regionId string,
    topicName string,
    type_ string,
) *CreateTopicRequest {

	return &CreateTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/topics",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        TopicName: topicName,
        Type: type_,
	}
}

/*
 * param regionId: 所在区域的Region ID (Required)
 * param topicName: topic名称 (Required)
 * param type_: 类型，[normal,global_order] (Required)
 * param description: 描述，长度不大于255 (Optional)
 */
func NewCreateTopicRequestWithAllParams(
    regionId string,
    topicName string,
    type_ string,
    description *string,
) *CreateTopicRequest {

    return &CreateTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/topics",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        TopicName: topicName,
        Type: type_,
        Description: description,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateTopicRequestWithoutParam() *CreateTopicRequest {

    return &CreateTopicRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/topics",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 所在区域的Region ID(Required) */
func (r *CreateTopicRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param topicName: topic名称(Required) */
func (r *CreateTopicRequest) SetTopicName(topicName string) {
    r.TopicName = topicName
}

/* param type_: 类型，[normal,global_order](Required) */
func (r *CreateTopicRequest) SetType(type_ string) {
    r.Type = type_
}

/* param description: 描述，长度不大于255(Optional) */
func (r *CreateTopicRequest) SetDescription(description string) {
    r.Description = &description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateTopicRequest) GetRegionId() string {
    return r.RegionId
}

type CreateTopicResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateTopicResult `json:"result"`
}

type CreateTopicResult struct {
}