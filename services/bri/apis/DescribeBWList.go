// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    bri "github.com/lshuining/jdcloud-sdk-go/services/bri/models"
)

type DescribeBWListRequest struct {

    core.JDCloudRequest

    /* 实例所属的地域ID  */
    RegionId string `json:"regionId"`

    /* 数据类型，不传或者为空返回所有类型数据，ip-IP，phone-手机，addr-地址，card-身份，pin-账户，eid-设备 (Optional) */
    ResourceType *string `json:"resourceType"`

    /* 数据类型，不传或者为空返回所有类型数据，列表类型，black-黑名单，white-白名单 (Optional) */
    BwType *string `json:"bwType"`

    /* 页面大小，缺省为10 (Optional) */
    Size *int `json:"size"`

    /* 起始页，缺省为1 (Optional) */
    Index *int `json:"index"`
}

/*
 * param regionId: 实例所属的地域ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeBWListRequest(
    regionId string,
) *DescribeBWListRequest {

	return &DescribeBWListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/blackwhite:list",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param resourceType: 数据类型，不传或者为空返回所有类型数据，ip-IP，phone-手机，addr-地址，card-身份，pin-账户，eid-设备 (Optional)
 * param bwType: 数据类型，不传或者为空返回所有类型数据，列表类型，black-黑名单，white-白名单 (Optional)
 * param size: 页面大小，缺省为10 (Optional)
 * param index: 起始页，缺省为1 (Optional)
 */
func NewDescribeBWListRequestWithAllParams(
    regionId string,
    resourceType *string,
    bwType *string,
    size *int,
    index *int,
) *DescribeBWListRequest {

    return &DescribeBWListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/blackwhite:list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ResourceType: resourceType,
        BwType: bwType,
        Size: size,
        Index: index,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeBWListRequestWithoutParam() *DescribeBWListRequest {

    return &DescribeBWListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/blackwhite:list",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 实例所属的地域ID(Required) */
func (r *DescribeBWListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param resourceType: 数据类型，不传或者为空返回所有类型数据，ip-IP，phone-手机，addr-地址，card-身份，pin-账户，eid-设备(Optional) */
func (r *DescribeBWListRequest) SetResourceType(resourceType string) {
    r.ResourceType = &resourceType
}

/* param bwType: 数据类型，不传或者为空返回所有类型数据，列表类型，black-黑名单，white-白名单(Optional) */
func (r *DescribeBWListRequest) SetBwType(bwType string) {
    r.BwType = &bwType
}

/* param size: 页面大小，缺省为10(Optional) */
func (r *DescribeBWListRequest) SetSize(size int) {
    r.Size = &size
}

/* param index: 起始页，缺省为1(Optional) */
func (r *DescribeBWListRequest) SetIndex(index int) {
    r.Index = &index
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeBWListRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeBWListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeBWListResult `json:"result"`
}

type DescribeBWListResult struct {
    TotalCount int `json:"totalCount"`
    Index int `json:"index"`
    Size int `json:"size"`
    List []bri.Bwcfg `json:"list"`
}