// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package client

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    iotedge "github.com/lshuining/jdcloud-sdk-go/services/iotedge/apis"
    "encoding/json"
    "errors"
)

type IotedgeClient struct {
    core.JDCloudClient
}

func NewIotedgeClient(credential *core.Credential) *IotedgeClient {
    if credential == nil {
        return nil
    }

    config := core.NewConfig()
    config.SetEndpoint("iotedge.jdcloud-api.com")

    return &IotedgeClient{
        core.JDCloudClient{
            Credential:  *credential,
            Config:      *config,
            ServiceName: "iotedge",
            Revision:    "1.0.0",
            Logger:      core.NewDefaultLogger(core.LogInfo),
        }}
}

func (c *IotedgeClient) SetConfig(config *core.Config) {
    c.Config = *config
}

func (c *IotedgeClient) SetLogger(logger core.Logger) {
    c.Logger = logger
}

func (c *IotedgeClient) DisableLogger() {
    c.Logger = core.NewDummyLogger()
}

/* 删除子设备 */
func (c *IotedgeClient) DelSubDeviceWithCore(request *iotedge.DelSubDeviceWithCoreRequest) (*iotedge.DelSubDeviceWithCoreResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DelSubDeviceWithCoreResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 卸载安装的APP */
func (c *IotedgeClient) UnInstallApp(request *iotedge.UnInstallAppRequest) (*iotedge.UnInstallAppResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.UnInstallAppResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询已经部署的App应用 */
func (c *IotedgeClient) DescribeDeployApp(request *iotedge.DescribeDeployAppRequest) (*iotedge.DescribeDeployAppResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DescribeDeployAppResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 删除Edge接口 */
func (c *IotedgeClient) DeleteEdgeWithCore(request *iotedge.DeleteEdgeWithCoreRequest) (*iotedge.DeleteEdgeWithCoreResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DeleteEdgeWithCoreResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询APP部署列表 */
func (c *IotedgeClient) DescribeDeployDetails(request *iotedge.DescribeDeployDetailsRequest) (*iotedge.DescribeDeployDetailsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DescribeDeployDetailsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* APP启动/停止服务 */
func (c *IotedgeClient) SetAppStatus(request *iotedge.SetAppStatusRequest) (*iotedge.SetAppStatusResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.SetAppStatusResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 部署内容查询 */
func (c *IotedgeClient) DescribeConfig(request *iotedge.DescribeConfigRequest) (*iotedge.DescribeConfigResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DescribeConfigResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 添加子设备 */
func (c *IotedgeClient) AddSubDeviceWithCore(request *iotedge.AddSubDeviceWithCoreRequest) (*iotedge.AddSubDeviceWithCoreResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.AddSubDeviceWithCoreResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 部署APP应用 */
func (c *IotedgeClient) DeployApp(request *iotedge.DeployAppRequest) (*iotedge.DeployAppResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.DeployAppResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 添加Edge设备 */
func (c *IotedgeClient) AddEdgeWithCore(request *iotedge.AddEdgeWithCoreRequest) (*iotedge.AddEdgeWithCoreResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &iotedge.AddEdgeWithCoreResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

