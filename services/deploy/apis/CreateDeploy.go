// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type CreateDeployRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 部署组ID，部署组的唯一标识  */
    GroupId string `json:"groupId"`

    /* 描述 (Optional) */
    Desc *string `json:"desc"`

    /* 部署来源：1url，2云编译，3云存储  */
    DeploySource int `json:"deploySource"`

    /* 部署操作 (Optional) */
    DeployCmd *string `json:"deployCmd"`

    /* 1使用输入的操作，2使用程序自带操作 (Optional) */
    CmdSource *int `json:"cmdSource"`

    /* 部署操作展示格式：1form,2ymal (Optional) */
    CmdType *int `json:"cmdType"`

    /* 项目类型 1tomcat,2 (Optional) */
    ProductType *int `json:"productType"`

    /* 下载url (Optional) */
    DownloadUrl *string `json:"downloadUrl"`

    /* md5 (Optional) */
    Md5 *string `json:"md5"`

    /* 云编译项目名 (Optional) */
    CompileProject *string `json:"compileProject"`

    /* 云编译构建序号 (Optional) */
    CompileSeries *string `json:"compileSeries"`

    /* 云存储空间 (Optional) */
    OssSpace *string `json:"ossSpace"`

    /* 云存储目录 (Optional) */
    OssDir *string `json:"ossDir"`

    /* 文件类型：1.tar，2.zip,3.tar.gz (Optional) */
    FileType *int `json:"fileType"`
}

/*
 * param regionId: 地域ID (Required)
 * param groupId: 部署组ID，部署组的唯一标识 (Required)
 * param deploySource: 部署来源：1url，2云编译，3云存储 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateDeployRequest(
    regionId string,
    groupId string,
    deploySource int,
) *CreateDeployRequest {

	return &CreateDeployRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/deploy",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        GroupId: groupId,
        DeploySource: deploySource,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param groupId: 部署组ID，部署组的唯一标识 (Required)
 * param desc: 描述 (Optional)
 * param deploySource: 部署来源：1url，2云编译，3云存储 (Required)
 * param deployCmd: 部署操作 (Optional)
 * param cmdSource: 1使用输入的操作，2使用程序自带操作 (Optional)
 * param cmdType: 部署操作展示格式：1form,2ymal (Optional)
 * param productType: 项目类型 1tomcat,2 (Optional)
 * param downloadUrl: 下载url (Optional)
 * param md5: md5 (Optional)
 * param compileProject: 云编译项目名 (Optional)
 * param compileSeries: 云编译构建序号 (Optional)
 * param ossSpace: 云存储空间 (Optional)
 * param ossDir: 云存储目录 (Optional)
 * param fileType: 文件类型：1.tar，2.zip,3.tar.gz (Optional)
 */
func NewCreateDeployRequestWithAllParams(
    regionId string,
    groupId string,
    desc *string,
    deploySource int,
    deployCmd *string,
    cmdSource *int,
    cmdType *int,
    productType *int,
    downloadUrl *string,
    md5 *string,
    compileProject *string,
    compileSeries *string,
    ossSpace *string,
    ossDir *string,
    fileType *int,
) *CreateDeployRequest {

    return &CreateDeployRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/deploy",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        GroupId: groupId,
        Desc: desc,
        DeploySource: deploySource,
        DeployCmd: deployCmd,
        CmdSource: cmdSource,
        CmdType: cmdType,
        ProductType: productType,
        DownloadUrl: downloadUrl,
        Md5: md5,
        CompileProject: compileProject,
        CompileSeries: compileSeries,
        OssSpace: ossSpace,
        OssDir: ossDir,
        FileType: fileType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateDeployRequestWithoutParam() *CreateDeployRequest {

    return &CreateDeployRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/deploy",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateDeployRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param groupId: 部署组ID，部署组的唯一标识(Required) */
func (r *CreateDeployRequest) SetGroupId(groupId string) {
    r.GroupId = groupId
}

/* param desc: 描述(Optional) */
func (r *CreateDeployRequest) SetDesc(desc string) {
    r.Desc = &desc
}

/* param deploySource: 部署来源：1url，2云编译，3云存储(Required) */
func (r *CreateDeployRequest) SetDeploySource(deploySource int) {
    r.DeploySource = deploySource
}

/* param deployCmd: 部署操作(Optional) */
func (r *CreateDeployRequest) SetDeployCmd(deployCmd string) {
    r.DeployCmd = &deployCmd
}

/* param cmdSource: 1使用输入的操作，2使用程序自带操作(Optional) */
func (r *CreateDeployRequest) SetCmdSource(cmdSource int) {
    r.CmdSource = &cmdSource
}

/* param cmdType: 部署操作展示格式：1form,2ymal(Optional) */
func (r *CreateDeployRequest) SetCmdType(cmdType int) {
    r.CmdType = &cmdType
}

/* param productType: 项目类型 1tomcat,2(Optional) */
func (r *CreateDeployRequest) SetProductType(productType int) {
    r.ProductType = &productType
}

/* param downloadUrl: 下载url(Optional) */
func (r *CreateDeployRequest) SetDownloadUrl(downloadUrl string) {
    r.DownloadUrl = &downloadUrl
}

/* param md5: md5(Optional) */
func (r *CreateDeployRequest) SetMd5(md5 string) {
    r.Md5 = &md5
}

/* param compileProject: 云编译项目名(Optional) */
func (r *CreateDeployRequest) SetCompileProject(compileProject string) {
    r.CompileProject = &compileProject
}

/* param compileSeries: 云编译构建序号(Optional) */
func (r *CreateDeployRequest) SetCompileSeries(compileSeries string) {
    r.CompileSeries = &compileSeries
}

/* param ossSpace: 云存储空间(Optional) */
func (r *CreateDeployRequest) SetOssSpace(ossSpace string) {
    r.OssSpace = &ossSpace
}

/* param ossDir: 云存储目录(Optional) */
func (r *CreateDeployRequest) SetOssDir(ossDir string) {
    r.OssDir = &ossDir
}

/* param fileType: 文件类型：1.tar，2.zip,3.tar.gz(Optional) */
func (r *CreateDeployRequest) SetFileType(fileType int) {
    r.FileType = &fileType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateDeployRequest) GetRegionId() string {
    return r.RegionId
}

type CreateDeployResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateDeployResult `json:"result"`
}

type CreateDeployResult struct {
    DeployId string `json:"deployId"`
}