// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type OperateRRRequest struct {

    core.JDCloudRequest

    /* 实例所属的地域ID  */
    RegionId string `json:"regionId"`

    /* 域名ID  */
    DomainId string `json:"domainId"`

    /* 需要操作的解析记录ID  */
    Ids []int `json:"ids"`

    /* 操作类型，on->启用 off->停用 del->删除  */
    Action string `json:"action"`
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param domainId: 域名ID (Required)
 * param ids: 需要操作的解析记录ID (Required)
 * param action: 操作类型，on->启用 off->停用 del->删除 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewOperateRRRequest(
    regionId string,
    domainId string,
    ids []int,
    action string,
) *OperateRRRequest {

	return &OperateRRRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/domain/{domainId}/RROperate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        DomainId: domainId,
        Ids: ids,
        Action: action,
	}
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param domainId: 域名ID (Required)
 * param ids: 需要操作的解析记录ID (Required)
 * param action: 操作类型，on->启用 off->停用 del->删除 (Required)
 */
func NewOperateRRRequestWithAllParams(
    regionId string,
    domainId string,
    ids []int,
    action string,
) *OperateRRRequest {

    return &OperateRRRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/domain/{domainId}/RROperate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        DomainId: domainId,
        Ids: ids,
        Action: action,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewOperateRRRequestWithoutParam() *OperateRRRequest {

    return &OperateRRRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/domain/{domainId}/RROperate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 实例所属的地域ID(Required) */
func (r *OperateRRRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param domainId: 域名ID(Required) */
func (r *OperateRRRequest) SetDomainId(domainId string) {
    r.DomainId = domainId
}

/* param ids: 需要操作的解析记录ID(Required) */
func (r *OperateRRRequest) SetIds(ids []int) {
    r.Ids = ids
}

/* param action: 操作类型，on->启用 off->停用 del->删除(Required) */
func (r *OperateRRRequest) SetAction(action string) {
    r.Action = action
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r OperateRRRequest) GetRegionId() string {
    return r.RegionId
}

type OperateRRResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result OperateRRResult `json:"result"`
}

type OperateRRResult struct {
}