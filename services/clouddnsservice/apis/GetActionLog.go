// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    clouddnsservice "github.com/jdcloud-api/jdcloud-sdk-go/services/clouddnsservice/models"
)

type GetActionLogRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 分页参数，页的序号，默认是1  */
    PageNumber int `json:"pageNumber"`

    /* 分页参数，每页含有的结果的数目，默认是10  */
    PageSize int `json:"pageSize"`

    /* 记录的起始时间，格式：UTC时间例如2017-11-10T23:00:00Z  */
    StartTime string `json:"startTime"`

    /* 记录的终止时间，格式：UTC时间例如2017-11-10T23:00:00Z  */
    EndTime string `json:"endTime"`

    /* 日志需要匹配的关键词 (Optional) */
    KeyWord *string `json:"keyWord"`

    /* 日志里面的结果是成功还是失败 (Optional) */
    Success *bool `json:"success"`

    /* 日志的类型 (Optional) */
    Type *int `json:"type"`
}

/*
 * param regionId: 地域ID (Required)
 * param pageNumber: 分页参数，页的序号，默认是1 (Required)
 * param pageSize: 分页参数，每页含有的结果的数目，默认是10 (Required)
 * param startTime: 记录的起始时间，格式：UTC时间例如2017-11-10T23:00:00Z (Required)
 * param endTime: 记录的终止时间，格式：UTC时间例如2017-11-10T23:00:00Z (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetActionLogRequest(
    regionId string,
    pageNumber int,
    pageSize int,
    startTime string,
    endTime string,
) *GetActionLogRequest {

	return &GetActionLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/log/actionLog",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param pageNumber: 分页参数，页的序号，默认是1 (Required)
 * param pageSize: 分页参数，每页含有的结果的数目，默认是10 (Required)
 * param startTime: 记录的起始时间，格式：UTC时间例如2017-11-10T23:00:00Z (Required)
 * param endTime: 记录的终止时间，格式：UTC时间例如2017-11-10T23:00:00Z (Required)
 * param keyWord: 日志需要匹配的关键词 (Optional)
 * param success: 日志里面的结果是成功还是失败 (Optional)
 * param type_: 日志的类型 (Optional)
 */
func NewGetActionLogRequestWithAllParams(
    regionId string,
    pageNumber int,
    pageSize int,
    startTime string,
    endTime string,
    keyWord *string,
    success *bool,
    type_ *int,
) *GetActionLogRequest {

    return &GetActionLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/log/actionLog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        StartTime: startTime,
        EndTime: endTime,
        KeyWord: keyWord,
        Success: success,
        Type: type_,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetActionLogRequestWithoutParam() *GetActionLogRequest {

    return &GetActionLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/log/actionLog",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GetActionLogRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageNumber: 分页参数，页的序号，默认是1(Required) */
func (r *GetActionLogRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = pageNumber
}

/* param pageSize: 分页参数，每页含有的结果的数目，默认是10(Required) */
func (r *GetActionLogRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}

/* param startTime: 记录的起始时间，格式：UTC时间例如2017-11-10T23:00:00Z(Required) */
func (r *GetActionLogRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

/* param endTime: 记录的终止时间，格式：UTC时间例如2017-11-10T23:00:00Z(Required) */
func (r *GetActionLogRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

/* param keyWord: 日志需要匹配的关键词(Optional) */
func (r *GetActionLogRequest) SetKeyWord(keyWord string) {
    r.KeyWord = &keyWord
}

/* param success: 日志里面的结果是成功还是失败(Optional) */
func (r *GetActionLogRequest) SetSuccess(success bool) {
    r.Success = &success
}

/* param type_: 日志的类型(Optional) */
func (r *GetActionLogRequest) SetType(type_ int) {
    r.Type = &type_
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetActionLogRequest) GetRegionId() string {
    return r.RegionId
}

type GetActionLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetActionLogResult `json:"result"`
}

type GetActionLogResult struct {
    DataList []clouddnsservice.Actionlog `json:"dataList"`
    CurrentCount int `json:"currentCount"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}