// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package models


type UranusTaskInfoRes struct {

    /* 新模型（MODEL），老模型（OLD_MODEL）、数据开发（IDE）、数据集成（PIPE）、数据质量（DQ)  */
    FlowCode string `json:"flowCode"`

    /* projectNameMatch (Optional) */
    ProjectNameMatch *bool `json:"projectNameMatch"`

    /* nameKeyWord (Optional) */
    NameKeyWord *string `json:"nameKeyWord"`

    /* 关联类型 JobRelationEnum (Optional) */
    RelationType *string `json:"relationType"`

    /* 操作类型 (Optional) */
    RedirectType *string `json:"redirectType"`

    /* 表名 (Optional) */
    TableName *string `json:"tableName"`

    /* tableNameMatch (Optional) */
    TableNameMatch *bool `json:"tableNameMatch"`

    /* 任务名称 (Optional) */
    JobName *string `json:"jobName"`

    /* 所属系统 (Optional) */
    JobSystem *string `json:"jobSystem"`

    /* 触发类型 (Optional) */
    TriggerType *string `json:"triggerType"`

    /* 依赖任务 (Optional) */
    Dependencies *string `json:"dependencies"`

    /* 负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 优先级 (Optional) */
    Priority *string `json:"priority"`

    /* 任务描述 (Optional) */
    JobDesc *string `json:"jobDesc"`

    /* 脚本类型，JCW为purl_sql，注意所有都是小写 (Optional) */
    ScriptType *string `json:"scriptType"`

    /* 脚本名称 (Optional) */
    RunScript *string `json:"runScript"`

    /* 脚本内容 (Optional) */
    ScriptContent []string `json:"scriptContent"`

    /* 运行频率 (Optional) */
    Cycle *string `json:"cycle"`

    /* 运行频率 (Optional) */
    Sequence *string `json:"sequence"`

    /* 生命周期 (Optional) */
    LifeCycle *string `json:"lifeCycle"`

    /* 失败后是否重试 (Optional) */
    Retry *bool `json:"retry"`

    /* 预警时机 (Optional) */
    NotifyOccasion *string `json:"notifyOccasion"`

    /* 预警时间 (Optional) */
    NotifyTime *string `json:"notifyTime"`

    /* 预警方式 (Optional) */
    NotifyPattern *string `json:"notifyPattern"`

    /* 预警通知人 (Optional) */
    Notifier *string `json:"notifier"`

    /* 开始运行时间（HH：mm） (Optional) */
    StartRunTime *string `json:"startRunTime"`

    /* 结束运行时间（HH：mm） (Optional) */
    EndRunTime *string `json:"endRunTime"`

    /* 定时、一次任务（开始运行时间） (Optional) */
    RunTime *string `json:"runTime"`

    /* 定时、一次任务（开始运行时间） (Optional) */
    RunDate *string `json:"runDate"`

    /* 节点Code  */
    TaskCode string `json:"taskCode"`

    /* markIds (Optional) */
    MarkIds *string `json:"markIds"`

    /* 超时时间 (Optional) */
    RunTimeOut *int `json:"runTimeOut"`

    /* 脚本来源类型 (Optional) */
    ScriptSourceType *string `json:"scriptSourceType"`

    /* isDeploy (Optional) */
    IsDeploy *bool `json:"isDeploy"`

    /* 脚本路径 (Optional) */
    ScriptPath *string `json:"scriptPath"`

    /* 脚本文件字节数组,是将脚本文件内容转换为byte数组 (Optional) */
    ScriptByte []string `json:"scriptByte"`

    /* 脚本文件Code (Optional) */
    FileCode *string `json:"fileCode"`

    /* 作业发布描述 (Optional) */
    PublishDesc *string `json:"publishDesc"`

    /* 脚本内容 (Optional) */
    ScriptInfo *string `json:"scriptInfo"`

    /* 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态 (Optional) */
    Version *int `json:"version"`

    /* 周期开始时间（小时分钟任务用） (Optional) */
    SequenceStartTime *string `json:"sequenceStartTime"`

    /* 周期结束时间（小时分钟任务用） (Optional) */
    SequenceEndTime *string `json:"sequenceEndTime"`

    /* 时间间隔（小时分钟任务用） (Optional) */
    SequenceInterval *int `json:"sequenceInterval"`

    /* 脚本运行引擎 (Optional) */
    RunEngine *string `json:"runEngine"`

    /* 队列code (Optional) */
    ResourceCode *string `json:"resourceCode"`

    /* 队列Name (Optional) */
    ResourceName *string `json:"resourceName"`

    /* 协作人 (Optional) */
    Cooperator *string `json:"cooperator"`

    /* 输入参数 (Optional) */
    TaskParamList []UranusTaskParamReq `json:"taskParamList"`

    /* 输出参数 (Optional) */
    ExportParamList []UranusTaskParamReq `json:"exportParamList"`

    /*  (Optional) */
    FromGravity *bool `json:"fromGravity"`

    /* 作业读写数据源主id，数据源的主ID (Optional) */
    DatasourcePrimaryId *string `json:"datasourcePrimaryId"`

    /* 作业读写数据源使用环境类型,dev：开发环境，prod：生产环境 (Optional) */
    DatasourceUseEnvType *string `json:"datasourceUseEnvType"`
}
