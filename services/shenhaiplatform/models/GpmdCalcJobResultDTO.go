// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package models


type GpmdCalcJobResultDTO struct {

    /* 作业名称 (Optional) */
    JobName string `json:"jobName"`

    /* 表id (Optional) */
    TableId int `json:"tableId"`

    /* 数据库名称 (Optional) */
    DatabaseName string `json:"databaseName"`

    /* 集市编码 (Optional) */
    MarketCode string `json:"marketCode"`

    /* 集市名称 (Optional) */
    MarketName string `json:"marketName"`

    /* 模型表名 (Optional) */
    TableName string `json:"tableName"`

    /* 作业系统 (Optional) */
    JobSystem string `json:"jobSystem"`

    /* 任务类型(触发类型) (Optional) */
    TriggerType string `json:"triggerType"`

    /*  (Optional) */
    TriggerConfig GpmdTriggerConfigDTO `json:"triggerConfig"`

    /* zip命令行 (Optional) */
    ZipCommand string `json:"zipCommand"`

    /* zip名称 (Optional) */
    ZipFileName string `json:"zipFileName"`

    /* zip参数 (Optional) */
    ZipParams string `json:"zipParams"`

    /* 依赖任务列表 (Optional) */
    Dependencies string `json:"dependencies"`

    /* 负责人 (Optional) */
    Manager string `json:"manager"`

    /* 协作人 (Optional) */
    Cooperator string `json:"cooperator"`

    /* 优先级 (Optional) */
    Priority int `json:"priority"`

    /* 任务描述 (Optional) */
    JobDesc string `json:"jobDesc"`

    /* 脚本类型 (Optional) */
    ScriptType string `json:"scriptType"`

    /* 脚本模板 (Optional) */
    ScriptTemplate string `json:"scriptTemplate"`

    /* 运行频率(运行周期) (Optional) */
    Cycle string `json:"cycle"`

    /* 运行频率(运行周期内序列) (Optional) */
    Sequence string `json:"sequence"`

    /* 生命周期 (Optional) */
    LifeCycle string `json:"lifeCycle"`

    /* 失败后是否重试 (Optional) */
    Retry bool `json:"retry"`

    /* 定时、一次任务（开始运行时间） (Optional) */
    RunTime string `json:"runTime"`

    /* 定时、一次任务（开始运行时间） (Optional) */
    RunDate string `json:"runDate"`

    /* 超时时间 (Optional) */
    RunTimeOut int `json:"runTimeOut"`

    /* 脚本来源类型（本地或者git） (Optional) */
    ScriptSourceType string `json:"scriptSourceType"`

    /* 开始运行时间 (Optional) */
    StartRunTime string `json:"startRunTime"`

    /* 结束运行时间 (Optional) */
    EndRunTime string `json:"endRunTime"`

    /* 运行脚本 (Optional) */
    RunScript string `json:"runScript"`

    /* 通知事件 (Optional) */
    NotifyOccasion string `json:"notifyOccasion"`

    /* 通知时间 (Optional) */
    NotifyTime string `json:"notifyTime"`

    /* 通知模式 (Optional) */
    NotifyPattern string `json:"notifyPattern"`

    /* 通知者 (Optional) */
    Notifier string `json:"notifier"`

    /* 是否拥有模型 (Optional) */
    HasModel bool `json:"hasModel"`

    /* 脚本文件字节数组,是将脚本文件内容转换为byte数组 (Optional) */
    ScriptByte []string `json:"scriptByte"`

    /* 根据版本号，判断是重新发布还是新建，如果新建添加版本号，不是新建，更新历史表作业状态状态 (Optional) */
    Version int `json:"version"`

    /* 判断是否是运维中心调用编辑接口1，运维中心 (Optional) */
    Core int `json:"core"`

    /* 数据渠道来源：新模型（MODEL），老模型（OLD_MODEL）、集成开发（IDE）、数据管道（PIPE）、数据质量（DQ）、AI(KUAI) (Optional) */
    Channel string `json:"channel"`

    /* 周期开始时间 (Optional) */
    SequenceStartTime string `json:"sequenceStartTime"`

    /* 周期结束时间 (Optional) */
    SequenceEndTime string `json:"sequenceEndTime"`

    /* 时间间隔 (Optional) */
    SequenceInterval int `json:"sequenceInterval"`

    /* 启用状态 (Optional) */
    Enable string `json:"enable"`

    /* 脚本运行引擎  枚举值 "TEZ、MR、SPARK" (Optional) */
    RunParams string `json:"runParams"`

    /* 提交配置（仅HiveSQL在Spark引擎下支持指定） (Optional) */
    SubmitConf []GpmdConfPairStringString `json:"submitConf"`

    /* 审计日志信息 (Optional) */
    UpdateInfo interface{} `json:"updateInfo"`
}
