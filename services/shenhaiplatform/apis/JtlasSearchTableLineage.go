// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type JtlasSearchTableLineageRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 方向  */
    Direction string `json:"direction"`

    /* 边类型  */
    EdgeType string `json:"edgeType"`

    /*   */
    NodeId string `json:"nodeId"`

    /* 检索深度 (Optional) */
    Depth *int `json:"depth"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param direction: 方向 (Required)
 * param edgeType: 边类型 (Required)
 * param nodeId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewJtlasSearchTableLineageRequest(
    regionId string,
    appName string,
    direction string,
    edgeType string,
    nodeId string,
) *JtlasSearchTableLineageRequest {

	return &JtlasSearchTableLineageRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/jtlasSearchTableLineage",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        Direction: direction,
        EdgeType: edgeType,
        NodeId: nodeId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param direction: 方向 (Required)
 * param edgeType: 边类型 (Required)
 * param nodeId:  (Required)
 * param depth: 检索深度 (Optional)
 */
func NewJtlasSearchTableLineageRequestWithAllParams(
    regionId string,
    appName string,
    direction string,
    edgeType string,
    nodeId string,
    depth *int,
) *JtlasSearchTableLineageRequest {

    return &JtlasSearchTableLineageRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/jtlasSearchTableLineage",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        Direction: direction,
        EdgeType: edgeType,
        NodeId: nodeId,
        Depth: depth,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewJtlasSearchTableLineageRequestWithoutParam() *JtlasSearchTableLineageRequest {

    return &JtlasSearchTableLineageRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/jtlasSearchTableLineage",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *JtlasSearchTableLineageRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *JtlasSearchTableLineageRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param direction: 方向(Required) */
func (r *JtlasSearchTableLineageRequest) SetDirection(direction string) {
    r.Direction = direction
}
/* param edgeType: 边类型(Required) */
func (r *JtlasSearchTableLineageRequest) SetEdgeType(edgeType string) {
    r.EdgeType = edgeType
}
/* param nodeId: (Required) */
func (r *JtlasSearchTableLineageRequest) SetNodeId(nodeId string) {
    r.NodeId = nodeId
}
/* param depth: 检索深度(Optional) */
func (r *JtlasSearchTableLineageRequest) SetDepth(depth int) {
    r.Depth = &depth
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r JtlasSearchTableLineageRequest) GetRegionId() string {
    return r.RegionId
}

type JtlasSearchTableLineageResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result JtlasSearchTableLineageResult `json:"result"`
}

type JtlasSearchTableLineageResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result interface{} `json:"result"`
}