// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type JtlasSubscribeTableRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 表模型ID  */
    Id string `json:"id"`

    /* 订阅类型 (Optional) */
    SubscribeType *string `json:"subscribeType"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param id: 表模型ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewJtlasSubscribeTableRequest(
    regionId string,
    appName string,
    id string,
) *JtlasSubscribeTableRequest {

	return &JtlasSubscribeTableRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/jtlasSubscribeTable",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        Id: id,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param id: 表模型ID (Required)
 * param subscribeType: 订阅类型 (Optional)
 */
func NewJtlasSubscribeTableRequestWithAllParams(
    regionId string,
    appName string,
    id string,
    subscribeType *string,
) *JtlasSubscribeTableRequest {

    return &JtlasSubscribeTableRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/jtlasSubscribeTable",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        Id: id,
        SubscribeType: subscribeType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewJtlasSubscribeTableRequestWithoutParam() *JtlasSubscribeTableRequest {

    return &JtlasSubscribeTableRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/jtlasSubscribeTable",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *JtlasSubscribeTableRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *JtlasSubscribeTableRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param id: 表模型ID(Required) */
func (r *JtlasSubscribeTableRequest) SetId(id string) {
    r.Id = id
}
/* param subscribeType: 订阅类型(Optional) */
func (r *JtlasSubscribeTableRequest) SetSubscribeType(subscribeType string) {
    r.SubscribeType = &subscribeType
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r JtlasSubscribeTableRequest) GetRegionId() string {
    return r.RegionId
}

type JtlasSubscribeTableResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result JtlasSubscribeTableResult `json:"result"`
}

type JtlasSubscribeTableResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result string `json:"result"`
}