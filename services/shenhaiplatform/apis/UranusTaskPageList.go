// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type UranusTaskPageListRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 分页 (Optional) */
    Page *int `json:"page"`

    /* 分页 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 作业名称 (Optional) */
    TaskName *string `json:"taskName"`

    /* 任务类型 (Optional) */
    JobType []int `json:"jobType"`

    /* 子任务类型 (Optional) */
    JobChildType []int `json:"jobChildType"`

    /* 负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 作业状态 (Optional) */
    JobStatus []int `json:"jobStatus"`

    /* 修改状态 (Optional) */
    UpdateStatus []int `json:"updateStatus"`

    /* 创建时间 (Optional) */
    CreateTimeBefore *string `json:"createTimeBefore"`

    /* 创建时间 (Optional) */
    CreateTimeAfter *string `json:"createTimeAfter"`

    /* 更新时间 (Optional) */
    UpdateTimeBefore *string `json:"updateTimeBefore"`

    /* 更新时间 (Optional) */
    UpdateTimeAfter *string `json:"updateTimeAfter"`

    /* 流程Code (Optional) */
    FlowCode *string `json:"flowCode"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusTaskPageListRequest(
    regionId string,
    appName string,
) *UranusTaskPageListRequest {

	return &UranusTaskPageListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusTaskPageList",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param page: 分页 (Optional)
 * param pageSize: 分页 (Optional)
 * param taskName: 作业名称 (Optional)
 * param jobType: 任务类型 (Optional)
 * param jobChildType: 子任务类型 (Optional)
 * param manager: 负责人 (Optional)
 * param jobStatus: 作业状态 (Optional)
 * param updateStatus: 修改状态 (Optional)
 * param createTimeBefore: 创建时间 (Optional)
 * param createTimeAfter: 创建时间 (Optional)
 * param updateTimeBefore: 更新时间 (Optional)
 * param updateTimeAfter: 更新时间 (Optional)
 * param flowCode: 流程Code (Optional)
 */
func NewUranusTaskPageListRequestWithAllParams(
    regionId string,
    appName string,
    page *int,
    pageSize *int,
    taskName *string,
    jobType []int,
    jobChildType []int,
    manager *string,
    jobStatus []int,
    updateStatus []int,
    createTimeBefore *string,
    createTimeAfter *string,
    updateTimeBefore *string,
    updateTimeAfter *string,
    flowCode *string,
) *UranusTaskPageListRequest {

    return &UranusTaskPageListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTaskPageList",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        Page: page,
        PageSize: pageSize,
        TaskName: taskName,
        JobType: jobType,
        JobChildType: jobChildType,
        Manager: manager,
        JobStatus: jobStatus,
        UpdateStatus: updateStatus,
        CreateTimeBefore: createTimeBefore,
        CreateTimeAfter: createTimeAfter,
        UpdateTimeBefore: updateTimeBefore,
        UpdateTimeAfter: updateTimeAfter,
        FlowCode: flowCode,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusTaskPageListRequestWithoutParam() *UranusTaskPageListRequest {

    return &UranusTaskPageListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTaskPageList",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusTaskPageListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusTaskPageListRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param page: 分页(Optional) */
func (r *UranusTaskPageListRequest) SetPage(page int) {
    r.Page = &page
}
/* param pageSize: 分页(Optional) */
func (r *UranusTaskPageListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param taskName: 作业名称(Optional) */
func (r *UranusTaskPageListRequest) SetTaskName(taskName string) {
    r.TaskName = &taskName
}
/* param jobType: 任务类型(Optional) */
func (r *UranusTaskPageListRequest) SetJobType(jobType []int) {
    r.JobType = jobType
}
/* param jobChildType: 子任务类型(Optional) */
func (r *UranusTaskPageListRequest) SetJobChildType(jobChildType []int) {
    r.JobChildType = jobChildType
}
/* param manager: 负责人(Optional) */
func (r *UranusTaskPageListRequest) SetManager(manager string) {
    r.Manager = &manager
}
/* param jobStatus: 作业状态(Optional) */
func (r *UranusTaskPageListRequest) SetJobStatus(jobStatus []int) {
    r.JobStatus = jobStatus
}
/* param updateStatus: 修改状态(Optional) */
func (r *UranusTaskPageListRequest) SetUpdateStatus(updateStatus []int) {
    r.UpdateStatus = updateStatus
}
/* param createTimeBefore: 创建时间(Optional) */
func (r *UranusTaskPageListRequest) SetCreateTimeBefore(createTimeBefore string) {
    r.CreateTimeBefore = &createTimeBefore
}
/* param createTimeAfter: 创建时间(Optional) */
func (r *UranusTaskPageListRequest) SetCreateTimeAfter(createTimeAfter string) {
    r.CreateTimeAfter = &createTimeAfter
}
/* param updateTimeBefore: 更新时间(Optional) */
func (r *UranusTaskPageListRequest) SetUpdateTimeBefore(updateTimeBefore string) {
    r.UpdateTimeBefore = &updateTimeBefore
}
/* param updateTimeAfter: 更新时间(Optional) */
func (r *UranusTaskPageListRequest) SetUpdateTimeAfter(updateTimeAfter string) {
    r.UpdateTimeAfter = &updateTimeAfter
}
/* param flowCode: 流程Code(Optional) */
func (r *UranusTaskPageListRequest) SetFlowCode(flowCode string) {
    r.FlowCode = &flowCode
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusTaskPageListRequest) GetRegionId() string {
    return r.RegionId
}

type UranusTaskPageListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusTaskPageListResult `json:"result"`
}

type UranusTaskPageListResult struct {
    Code string `json:"code"`
    ErrorTitle string `json:"errorTitle"`
    ErrorMsg string `json:"errorMsg"`
    Result shenhaiplatform.UranusPageResultContentTaskNodePageRes `json:"result"`
    SubCode string `json:"subCode"`
    Successed bool `json:"successed"`
}