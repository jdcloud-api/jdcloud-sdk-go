// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type GravityParticleDubboJobManagerGetMgrJobByJobeRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /*  (Optional) */
    UserName *string `json:"userName"`

    /*  (Optional) */
    Remark *string `json:"remark"`

    /*  (Optional) */
    JobNames []string `json:"jobNames"`

    /*  (Optional) */
    FileId *int `json:"fileId"`

    /*  (Optional) */
    Version *int `json:"version"`

    /*  (Optional) */
    PublishDesc *string `json:"publishDesc"`

    /*  (Optional) */
    Manager *bool `json:"manager"`

    /*  (Optional) */
    JobManager *bool `json:"jobManager"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGravityParticleDubboJobManagerGetMgrJobByJobeRequest(
    regionId string,
    appName string,
) *GravityParticleDubboJobManagerGetMgrJobByJobeRequest {

	return &GravityParticleDubboJobManagerGetMgrJobByJobeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/gravityParticleDubboJobManagerGetMgrJobByJobe",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param userName:  (Optional)
 * param remark:  (Optional)
 * param jobNames:  (Optional)
 * param fileId:  (Optional)
 * param version:  (Optional)
 * param publishDesc:  (Optional)
 * param manager:  (Optional)
 * param jobManager:  (Optional)
 */
func NewGravityParticleDubboJobManagerGetMgrJobByJobeRequestWithAllParams(
    regionId string,
    appName string,
    userName *string,
    remark *string,
    jobNames []string,
    fileId *int,
    version *int,
    publishDesc *string,
    manager *bool,
    jobManager *bool,
) *GravityParticleDubboJobManagerGetMgrJobByJobeRequest {

    return &GravityParticleDubboJobManagerGetMgrJobByJobeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleDubboJobManagerGetMgrJobByJobe",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        UserName: userName,
        Remark: remark,
        JobNames: jobNames,
        FileId: fileId,
        Version: version,
        PublishDesc: publishDesc,
        Manager: manager,
        JobManager: jobManager,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGravityParticleDubboJobManagerGetMgrJobByJobeRequestWithoutParam() *GravityParticleDubboJobManagerGetMgrJobByJobeRequest {

    return &GravityParticleDubboJobManagerGetMgrJobByJobeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleDubboJobManagerGetMgrJobByJobe",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param userName: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetUserName(userName string) {
    r.UserName = &userName
}
/* param remark: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetRemark(remark string) {
    r.Remark = &remark
}
/* param jobNames: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetJobNames(jobNames []string) {
    r.JobNames = jobNames
}
/* param fileId: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetFileId(fileId int) {
    r.FileId = &fileId
}
/* param version: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetVersion(version int) {
    r.Version = &version
}
/* param publishDesc: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetPublishDesc(publishDesc string) {
    r.PublishDesc = &publishDesc
}
/* param manager: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetManager(manager bool) {
    r.Manager = &manager
}
/* param jobManager: (Optional) */
func (r *GravityParticleDubboJobManagerGetMgrJobByJobeRequest) SetJobManager(jobManager bool) {
    r.JobManager = &jobManager
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GravityParticleDubboJobManagerGetMgrJobByJobeRequest) GetRegionId() string {
    return r.RegionId
}

type GravityParticleDubboJobManagerGetMgrJobByJobeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GravityParticleDubboJobManagerGetMgrJobByJobeResult `json:"result"`
}

type GravityParticleDubboJobManagerGetMgrJobByJobeResult struct {
    Success int `json:"success"`
    Code string `json:"code"`
    Msg string `json:"msg"`
    Result bool `json:"result"`
}