// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type WorkspaceCreateRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /*  (Optional) */
    UserPin *string `json:"userPin"`

    /*  (Optional) */
    WorkspaceId *string `json:"workspaceId"`

    /*  (Optional) */
    WorkspaceName *string `json:"workspaceName"`

    /*  (Optional) */
    Manager []string `json:"manager"`

    /*  (Optional) */
    WorkspaceDescription *string `json:"workspaceDescription"`

    /*  (Optional) */
    WorkspaceModel *string `json:"workspaceModel"`

    /*  (Optional) */
    EngineType *string `json:"engineType"`

    /*  (Optional) */
    CalculateResourceCode []string `json:"calculateResourceCode"`

    /*  (Optional) */
    IntegrationResourceCode []string `json:"integrationResourceCode"`

    /*  (Optional) */
    NeedBundleProject *bool `json:"needBundleProject"`

    /*  (Optional) */
    BundleDevProjectReq *shenhaiplatform.BundleProjectReq `json:"bundleDevProjectReq"`

    /*  (Optional) */
    BundleProdProjectReq *shenhaiplatform.BundleProjectReq `json:"bundleProdProjectReq"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewWorkspaceCreateRequest(
    regionId string,
    appName string,
) *WorkspaceCreateRequest {

	return &WorkspaceCreateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/workspaceCreate",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param userPin:  (Optional)
 * param workspaceId:  (Optional)
 * param workspaceName:  (Optional)
 * param manager:  (Optional)
 * param workspaceDescription:  (Optional)
 * param workspaceModel:  (Optional)
 * param engineType:  (Optional)
 * param calculateResourceCode:  (Optional)
 * param integrationResourceCode:  (Optional)
 * param needBundleProject:  (Optional)
 * param bundleDevProjectReq:  (Optional)
 * param bundleProdProjectReq:  (Optional)
 */
func NewWorkspaceCreateRequestWithAllParams(
    regionId string,
    appName string,
    userPin *string,
    workspaceId *string,
    workspaceName *string,
    manager []string,
    workspaceDescription *string,
    workspaceModel *string,
    engineType *string,
    calculateResourceCode []string,
    integrationResourceCode []string,
    needBundleProject *bool,
    bundleDevProjectReq *shenhaiplatform.BundleProjectReq,
    bundleProdProjectReq *shenhaiplatform.BundleProjectReq,
) *WorkspaceCreateRequest {

    return &WorkspaceCreateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/workspaceCreate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        UserPin: userPin,
        WorkspaceId: workspaceId,
        WorkspaceName: workspaceName,
        Manager: manager,
        WorkspaceDescription: workspaceDescription,
        WorkspaceModel: workspaceModel,
        EngineType: engineType,
        CalculateResourceCode: calculateResourceCode,
        IntegrationResourceCode: integrationResourceCode,
        NeedBundleProject: needBundleProject,
        BundleDevProjectReq: bundleDevProjectReq,
        BundleProdProjectReq: bundleProdProjectReq,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewWorkspaceCreateRequestWithoutParam() *WorkspaceCreateRequest {

    return &WorkspaceCreateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/workspaceCreate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *WorkspaceCreateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *WorkspaceCreateRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param userPin: (Optional) */
func (r *WorkspaceCreateRequest) SetUserPin(userPin string) {
    r.UserPin = &userPin
}
/* param workspaceId: (Optional) */
func (r *WorkspaceCreateRequest) SetWorkspaceId(workspaceId string) {
    r.WorkspaceId = &workspaceId
}
/* param workspaceName: (Optional) */
func (r *WorkspaceCreateRequest) SetWorkspaceName(workspaceName string) {
    r.WorkspaceName = &workspaceName
}
/* param manager: (Optional) */
func (r *WorkspaceCreateRequest) SetManager(manager []string) {
    r.Manager = manager
}
/* param workspaceDescription: (Optional) */
func (r *WorkspaceCreateRequest) SetWorkspaceDescription(workspaceDescription string) {
    r.WorkspaceDescription = &workspaceDescription
}
/* param workspaceModel: (Optional) */
func (r *WorkspaceCreateRequest) SetWorkspaceModel(workspaceModel string) {
    r.WorkspaceModel = &workspaceModel
}
/* param engineType: (Optional) */
func (r *WorkspaceCreateRequest) SetEngineType(engineType string) {
    r.EngineType = &engineType
}
/* param calculateResourceCode: (Optional) */
func (r *WorkspaceCreateRequest) SetCalculateResourceCode(calculateResourceCode []string) {
    r.CalculateResourceCode = calculateResourceCode
}
/* param integrationResourceCode: (Optional) */
func (r *WorkspaceCreateRequest) SetIntegrationResourceCode(integrationResourceCode []string) {
    r.IntegrationResourceCode = integrationResourceCode
}
/* param needBundleProject: (Optional) */
func (r *WorkspaceCreateRequest) SetNeedBundleProject(needBundleProject bool) {
    r.NeedBundleProject = &needBundleProject
}
/* param bundleDevProjectReq: (Optional) */
func (r *WorkspaceCreateRequest) SetBundleDevProjectReq(bundleDevProjectReq *shenhaiplatform.BundleProjectReq) {
    r.BundleDevProjectReq = bundleDevProjectReq
}
/* param bundleProdProjectReq: (Optional) */
func (r *WorkspaceCreateRequest) SetBundleProdProjectReq(bundleProdProjectReq *shenhaiplatform.BundleProjectReq) {
    r.BundleProdProjectReq = bundleProdProjectReq
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r WorkspaceCreateRequest) GetRegionId() string {
    return r.RegionId
}

type WorkspaceCreateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result WorkspaceCreateResult `json:"result"`
}

type WorkspaceCreateResult struct {
}