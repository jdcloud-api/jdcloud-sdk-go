// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type UranusTableDataDownloadRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 执行历史ID  */
    HistoryId int `json:"historyId"`

    /* 文件名称  */
    FileName string `json:"fileName"`

    /* 字符集: GBK、UTF-8 (Optional) */
    CharacterSet *string `json:"characterSet"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param historyId: 执行历史ID (Required)
 * param fileName: 文件名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusTableDataDownloadRequest(
    regionId string,
    appName string,
    historyId int,
    fileName string,
) *UranusTableDataDownloadRequest {

	return &UranusTableDataDownloadRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusTableDataDownload",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        HistoryId: historyId,
        FileName: fileName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param historyId: 执行历史ID (Required)
 * param fileName: 文件名称 (Required)
 * param characterSet: 字符集: GBK、UTF-8 (Optional)
 */
func NewUranusTableDataDownloadRequestWithAllParams(
    regionId string,
    appName string,
    historyId int,
    fileName string,
    characterSet *string,
) *UranusTableDataDownloadRequest {

    return &UranusTableDataDownloadRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTableDataDownload",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        HistoryId: historyId,
        FileName: fileName,
        CharacterSet: characterSet,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusTableDataDownloadRequestWithoutParam() *UranusTableDataDownloadRequest {

    return &UranusTableDataDownloadRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTableDataDownload",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusTableDataDownloadRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusTableDataDownloadRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param historyId: 执行历史ID(Required) */
func (r *UranusTableDataDownloadRequest) SetHistoryId(historyId int) {
    r.HistoryId = historyId
}
/* param fileName: 文件名称(Required) */
func (r *UranusTableDataDownloadRequest) SetFileName(fileName string) {
    r.FileName = fileName
}
/* param characterSet: 字符集: GBK、UTF-8(Optional) */
func (r *UranusTableDataDownloadRequest) SetCharacterSet(characterSet string) {
    r.CharacterSet = &characterSet
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusTableDataDownloadRequest) GetRegionId() string {
    return r.RegionId
}

type UranusTableDataDownloadResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusTableDataDownloadResult `json:"result"`
}

type UranusTableDataDownloadResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result string `json:"result"`
}