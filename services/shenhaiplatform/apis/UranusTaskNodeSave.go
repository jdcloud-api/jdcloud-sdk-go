// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type UranusTaskNodeSaveRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 节点名称 (Optional) */
    TaskName *string `json:"taskName"`

    /* 子节点code List (Optional) */
    ChildrenCode []string `json:"childrenCode"`

    /* 父节点code List (Optional) */
    ParentCode []string `json:"parentCode"`

    /* 节点描述 (Optional) */
    TaskDesc *string `json:"taskDesc"`

    /* 任务类型 (Optional) */
    TaskNodeId *int `json:"taskNodeId"`

    /* 节点CODE (Optional) */
    TaskCode *string `json:"taskCode"`

    /* 负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 节点数据 以下前端需要用到的数据 (Optional) */
    TaskData *string `json:"taskData"`

    /* 节点名称 以下前端需要用到的数据 (Optional) */
    NodeName *string `json:"nodeName"`

    /* 节点类型 (Optional) */
    NodeTypeName *string `json:"nodeTypeName"`

    /* 节点图标 以下前端需要用到的数据 (Optional) */
    NodeIcon *string `json:"nodeIcon"`

    /* 工作流Code (Optional) */
    FlowCode *string `json:"flowCode"`

    /* 脚本文件的业务Code (Optional) */
    FileCode *string `json:"fileCode"`

    /* 作业名称 (Optional) */
    JobName *string `json:"jobName"`

    /* 是否工作流任务 (Optional) */
    IsUranus *int `json:"isUranus"`

    /* 是否当前工作流任务 (Optional) */
    IsCurrentFlow *int `json:"isCurrentFlow"`

    /* 给前端用到的 (Optional) */
    Parent []shenhaiplatform.UranusTaskNodeSaveReq `json:"parent"`

    /* 是否有子任务依赖前端用到 (Optional) */
    HaveChildren *int `json:"haveChildren"`

    /* 协作人 (Optional) */
    Cooperator *string `json:"cooperator"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusTaskNodeSaveRequest(
    regionId string,
    appName string,
) *UranusTaskNodeSaveRequest {

	return &UranusTaskNodeSaveRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusTaskNodeSave",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param taskName: 节点名称 (Optional)
 * param childrenCode: 子节点code List (Optional)
 * param parentCode: 父节点code List (Optional)
 * param taskDesc: 节点描述 (Optional)
 * param taskNodeId: 任务类型 (Optional)
 * param taskCode: 节点CODE (Optional)
 * param manager: 负责人 (Optional)
 * param taskData: 节点数据 以下前端需要用到的数据 (Optional)
 * param nodeName: 节点名称 以下前端需要用到的数据 (Optional)
 * param nodeTypeName: 节点类型 (Optional)
 * param nodeIcon: 节点图标 以下前端需要用到的数据 (Optional)
 * param flowCode: 工作流Code (Optional)
 * param fileCode: 脚本文件的业务Code (Optional)
 * param jobName: 作业名称 (Optional)
 * param isUranus: 是否工作流任务 (Optional)
 * param isCurrentFlow: 是否当前工作流任务 (Optional)
 * param parent: 给前端用到的 (Optional)
 * param haveChildren: 是否有子任务依赖前端用到 (Optional)
 * param cooperator: 协作人 (Optional)
 */
func NewUranusTaskNodeSaveRequestWithAllParams(
    regionId string,
    appName string,
    taskName *string,
    childrenCode []string,
    parentCode []string,
    taskDesc *string,
    taskNodeId *int,
    taskCode *string,
    manager *string,
    taskData *string,
    nodeName *string,
    nodeTypeName *string,
    nodeIcon *string,
    flowCode *string,
    fileCode *string,
    jobName *string,
    isUranus *int,
    isCurrentFlow *int,
    parent []shenhaiplatform.UranusTaskNodeSaveReq,
    haveChildren *int,
    cooperator *string,
) *UranusTaskNodeSaveRequest {

    return &UranusTaskNodeSaveRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTaskNodeSave",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        TaskName: taskName,
        ChildrenCode: childrenCode,
        ParentCode: parentCode,
        TaskDesc: taskDesc,
        TaskNodeId: taskNodeId,
        TaskCode: taskCode,
        Manager: manager,
        TaskData: taskData,
        NodeName: nodeName,
        NodeTypeName: nodeTypeName,
        NodeIcon: nodeIcon,
        FlowCode: flowCode,
        FileCode: fileCode,
        JobName: jobName,
        IsUranus: isUranus,
        IsCurrentFlow: isCurrentFlow,
        Parent: parent,
        HaveChildren: haveChildren,
        Cooperator: cooperator,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusTaskNodeSaveRequestWithoutParam() *UranusTaskNodeSaveRequest {

    return &UranusTaskNodeSaveRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusTaskNodeSave",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusTaskNodeSaveRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusTaskNodeSaveRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param taskName: 节点名称(Optional) */
func (r *UranusTaskNodeSaveRequest) SetTaskName(taskName string) {
    r.TaskName = &taskName
}
/* param childrenCode: 子节点code List(Optional) */
func (r *UranusTaskNodeSaveRequest) SetChildrenCode(childrenCode []string) {
    r.ChildrenCode = childrenCode
}
/* param parentCode: 父节点code List(Optional) */
func (r *UranusTaskNodeSaveRequest) SetParentCode(parentCode []string) {
    r.ParentCode = parentCode
}
/* param taskDesc: 节点描述(Optional) */
func (r *UranusTaskNodeSaveRequest) SetTaskDesc(taskDesc string) {
    r.TaskDesc = &taskDesc
}
/* param taskNodeId: 任务类型(Optional) */
func (r *UranusTaskNodeSaveRequest) SetTaskNodeId(taskNodeId int) {
    r.TaskNodeId = &taskNodeId
}
/* param taskCode: 节点CODE(Optional) */
func (r *UranusTaskNodeSaveRequest) SetTaskCode(taskCode string) {
    r.TaskCode = &taskCode
}
/* param manager: 负责人(Optional) */
func (r *UranusTaskNodeSaveRequest) SetManager(manager string) {
    r.Manager = &manager
}
/* param taskData: 节点数据 以下前端需要用到的数据(Optional) */
func (r *UranusTaskNodeSaveRequest) SetTaskData(taskData string) {
    r.TaskData = &taskData
}
/* param nodeName: 节点名称 以下前端需要用到的数据(Optional) */
func (r *UranusTaskNodeSaveRequest) SetNodeName(nodeName string) {
    r.NodeName = &nodeName
}
/* param nodeTypeName: 节点类型(Optional) */
func (r *UranusTaskNodeSaveRequest) SetNodeTypeName(nodeTypeName string) {
    r.NodeTypeName = &nodeTypeName
}
/* param nodeIcon: 节点图标 以下前端需要用到的数据(Optional) */
func (r *UranusTaskNodeSaveRequest) SetNodeIcon(nodeIcon string) {
    r.NodeIcon = &nodeIcon
}
/* param flowCode: 工作流Code(Optional) */
func (r *UranusTaskNodeSaveRequest) SetFlowCode(flowCode string) {
    r.FlowCode = &flowCode
}
/* param fileCode: 脚本文件的业务Code(Optional) */
func (r *UranusTaskNodeSaveRequest) SetFileCode(fileCode string) {
    r.FileCode = &fileCode
}
/* param jobName: 作业名称(Optional) */
func (r *UranusTaskNodeSaveRequest) SetJobName(jobName string) {
    r.JobName = &jobName
}
/* param isUranus: 是否工作流任务(Optional) */
func (r *UranusTaskNodeSaveRequest) SetIsUranus(isUranus int) {
    r.IsUranus = &isUranus
}
/* param isCurrentFlow: 是否当前工作流任务(Optional) */
func (r *UranusTaskNodeSaveRequest) SetIsCurrentFlow(isCurrentFlow int) {
    r.IsCurrentFlow = &isCurrentFlow
}
/* param parent: 给前端用到的(Optional) */
func (r *UranusTaskNodeSaveRequest) SetParent(parent []shenhaiplatform.UranusTaskNodeSaveReq) {
    r.Parent = parent
}
/* param haveChildren: 是否有子任务依赖前端用到(Optional) */
func (r *UranusTaskNodeSaveRequest) SetHaveChildren(haveChildren int) {
    r.HaveChildren = &haveChildren
}
/* param cooperator: 协作人(Optional) */
func (r *UranusTaskNodeSaveRequest) SetCooperator(cooperator string) {
    r.Cooperator = &cooperator
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusTaskNodeSaveRequest) GetRegionId() string {
    return r.RegionId
}

type UranusTaskNodeSaveResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusTaskNodeSaveResult `json:"result"`
}

type UranusTaskNodeSaveResult struct {
    Code string `json:"code"`
    ErrorTitle string `json:"errorTitle"`
    ErrorMsg string `json:"errorMsg"`
    Result shenhaiplatform.UranusTaskNodeDetailRes `json:"result"`
    SubCode string `json:"subCode"`
    Successed bool `json:"successed"`
}