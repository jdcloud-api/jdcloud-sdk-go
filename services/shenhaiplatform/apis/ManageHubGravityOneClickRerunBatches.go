// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type ManageHubGravityOneClickRerunBatchesRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 页号 (Optional) */
    PageNum *int `json:"pageNum"`

    /* 页大小 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 操作人 (Optional) */
    Operator *string `json:"operator"`

    /* 操作时间-开始 (Optional) */
    OperateTimeAfter *int64 `json:"operateTimeAfter"`

    /* 操作时间-结束 (Optional) */
    OperateTimeBefore *int64 `json:"operateTimeBefore"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewManageHubGravityOneClickRerunBatchesRequest(
    regionId string,
    appName string,
) *ManageHubGravityOneClickRerunBatchesRequest {

	return &ManageHubGravityOneClickRerunBatchesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityOneClickRerunBatches",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageNum: 页号 (Optional)
 * param pageSize: 页大小 (Optional)
 * param operator: 操作人 (Optional)
 * param operateTimeAfter: 操作时间-开始 (Optional)
 * param operateTimeBefore: 操作时间-结束 (Optional)
 */
func NewManageHubGravityOneClickRerunBatchesRequestWithAllParams(
    regionId string,
    appName string,
    pageNum *int,
    pageSize *int,
    operator *string,
    operateTimeAfter *int64,
    operateTimeBefore *int64,
) *ManageHubGravityOneClickRerunBatchesRequest {

    return &ManageHubGravityOneClickRerunBatchesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityOneClickRerunBatches",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        PageNum: pageNum,
        PageSize: pageSize,
        Operator: operator,
        OperateTimeAfter: operateTimeAfter,
        OperateTimeBefore: operateTimeBefore,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewManageHubGravityOneClickRerunBatchesRequestWithoutParam() *ManageHubGravityOneClickRerunBatchesRequest {

    return &ManageHubGravityOneClickRerunBatchesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityOneClickRerunBatches",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param pageNum: 页号(Optional) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}
/* param pageSize: 页大小(Optional) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param operator: 操作人(Optional) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetOperator(operator string) {
    r.Operator = &operator
}
/* param operateTimeAfter: 操作时间-开始(Optional) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetOperateTimeAfter(operateTimeAfter int64) {
    r.OperateTimeAfter = &operateTimeAfter
}
/* param operateTimeBefore: 操作时间-结束(Optional) */
func (r *ManageHubGravityOneClickRerunBatchesRequest) SetOperateTimeBefore(operateTimeBefore int64) {
    r.OperateTimeBefore = &operateTimeBefore
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ManageHubGravityOneClickRerunBatchesRequest) GetRegionId() string {
    return r.RegionId
}

type ManageHubGravityOneClickRerunBatchesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ManageHubGravityOneClickRerunBatchesResult `json:"result"`
}

type ManageHubGravityOneClickRerunBatchesResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result shenhaiplatform.PageVoRerunBatchVo `json:"result"`
}