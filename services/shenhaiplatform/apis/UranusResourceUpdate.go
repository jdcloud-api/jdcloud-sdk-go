// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type UranusResourceUpdateRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 资源code (Optional) */
    ResourceCode *string `json:"resourceCode"`

    /* 原始资源名称（上传的原始文件在本地客户端的文件名称） (Optional) */
    OriginalName *string `json:"originalName"`

    /* 文件上传方式（默认为本地上传） (Optional) */
    UploadMode *string `json:"uploadMode"`

    /* 负责人 (Optional) */
    Managers []string `json:"managers"`

    /* 资源状态 (Optional) */
    Status *string `json:"status"`

    /* 环境信息（prod：生产环境；dev：开发环境），简单模式默认为prod (Optional) */
    Env *string `json:"env"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusResourceUpdateRequest(
    regionId string,
    appName string,
) *UranusResourceUpdateRequest {

	return &UranusResourceUpdateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusResourceUpdate",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param resourceCode: 资源code (Optional)
 * param originalName: 原始资源名称（上传的原始文件在本地客户端的文件名称） (Optional)
 * param uploadMode: 文件上传方式（默认为本地上传） (Optional)
 * param managers: 负责人 (Optional)
 * param status: 资源状态 (Optional)
 * param env: 环境信息（prod：生产环境；dev：开发环境），简单模式默认为prod (Optional)
 */
func NewUranusResourceUpdateRequestWithAllParams(
    regionId string,
    appName string,
    resourceCode *string,
    originalName *string,
    uploadMode *string,
    managers []string,
    status *string,
    env *string,
) *UranusResourceUpdateRequest {

    return &UranusResourceUpdateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusResourceUpdate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        ResourceCode: resourceCode,
        OriginalName: originalName,
        UploadMode: uploadMode,
        Managers: managers,
        Status: status,
        Env: env,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusResourceUpdateRequestWithoutParam() *UranusResourceUpdateRequest {

    return &UranusResourceUpdateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusResourceUpdate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusResourceUpdateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusResourceUpdateRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param resourceCode: 资源code(Optional) */
func (r *UranusResourceUpdateRequest) SetResourceCode(resourceCode string) {
    r.ResourceCode = &resourceCode
}
/* param originalName: 原始资源名称（上传的原始文件在本地客户端的文件名称）(Optional) */
func (r *UranusResourceUpdateRequest) SetOriginalName(originalName string) {
    r.OriginalName = &originalName
}
/* param uploadMode: 文件上传方式（默认为本地上传）(Optional) */
func (r *UranusResourceUpdateRequest) SetUploadMode(uploadMode string) {
    r.UploadMode = &uploadMode
}
/* param managers: 负责人(Optional) */
func (r *UranusResourceUpdateRequest) SetManagers(managers []string) {
    r.Managers = managers
}
/* param status: 资源状态(Optional) */
func (r *UranusResourceUpdateRequest) SetStatus(status string) {
    r.Status = &status
}
/* param env: 环境信息（prod：生产环境；dev：开发环境），简单模式默认为prod(Optional) */
func (r *UranusResourceUpdateRequest) SetEnv(env string) {
    r.Env = &env
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusResourceUpdateRequest) GetRegionId() string {
    return r.RegionId
}

type UranusResourceUpdateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusResourceUpdateResult `json:"result"`
}

type UranusResourceUpdateResult struct {
    Code string `json:"code"`
    ErrorTitle string `json:"errorTitle"`
    ErrorMsg string `json:"errorMsg"`
    Result shenhaiplatform.UranusResourceVo `json:"result"`
    SubCode string `json:"subCode"`
    Successed bool `json:"successed"`
}