// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type GravityParticleParticleJobListJobInstanceRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 页面大小  */
    PageSize int `json:"pageSize"`

    /* 页码  */
    PageNum int `json:"pageNum"`

    /* 运行状态 (Optional) */
    StatusList []string `json:"statusList"`

    /* 作业上上线下线状态 (Optional) */
    Enable *string `json:"enable"`

    /* 运行周期 (Optional) */
    Cycle *string `json:"cycle"`

    /* 处理类型 (Optional) */
    ProcessType *string `json:"processType"`

    /* 负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 作业名 (Optional) */
    JobName *string `json:"jobName"`

    /* 任务类型 (Optional) */
    JobType *string `json:"jobType"`

    /* 任务创建日期-结束 (Optional) */
    CreateTimeBefore *string `json:"createTimeBefore"`

    /* 任务创建日期-开始 (Optional) */
    CreateTimeAfter *string `json:"createTimeAfter"`

    /* 运行开始时间范围 (Optional) */
    StartTimeBefore *string `json:"startTimeBefore"`

    /* 运行开始时间范围 (Optional) */
    StartTimeAfter *string `json:"startTimeAfter"`

    /* 运行结束时间范围 (Optional) */
    EndTimeAfter *string `json:"endTimeAfter"`

    /* 运行结束时间范围 (Optional) */
    EndTimeBefore *string `json:"endTimeBefore"`

    /* 数据日期 (Optional) */
    TxDate *string `json:"txDate"`

    /*  (Optional) */
    JobChildType *string `json:"jobChildType"`

    /* 客户作业名 (Optional) */
    CstJobName *string `json:"cstJobName"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGravityParticleParticleJobListJobInstanceRequest(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
) *GravityParticleParticleJobListJobInstanceRequest {

	return &GravityParticleParticleJobListJobInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJobInstance",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 * param statusList: 运行状态 (Optional)
 * param enable: 作业上上线下线状态 (Optional)
 * param cycle: 运行周期 (Optional)
 * param processType: 处理类型 (Optional)
 * param manager: 负责人 (Optional)
 * param jobName: 作业名 (Optional)
 * param jobType: 任务类型 (Optional)
 * param createTimeBefore: 任务创建日期-结束 (Optional)
 * param createTimeAfter: 任务创建日期-开始 (Optional)
 * param startTimeBefore: 运行开始时间范围 (Optional)
 * param startTimeAfter: 运行开始时间范围 (Optional)
 * param endTimeAfter: 运行结束时间范围 (Optional)
 * param endTimeBefore: 运行结束时间范围 (Optional)
 * param txDate: 数据日期 (Optional)
 * param jobChildType:  (Optional)
 * param cstJobName: 客户作业名 (Optional)
 */
func NewGravityParticleParticleJobListJobInstanceRequestWithAllParams(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
    statusList []string,
    enable *string,
    cycle *string,
    processType *string,
    manager *string,
    jobName *string,
    jobType *string,
    createTimeBefore *string,
    createTimeAfter *string,
    startTimeBefore *string,
    startTimeAfter *string,
    endTimeAfter *string,
    endTimeBefore *string,
    txDate *string,
    jobChildType *string,
    cstJobName *string,
) *GravityParticleParticleJobListJobInstanceRequest {

    return &GravityParticleParticleJobListJobInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJobInstance",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
        StatusList: statusList,
        Enable: enable,
        Cycle: cycle,
        ProcessType: processType,
        Manager: manager,
        JobName: jobName,
        JobType: jobType,
        CreateTimeBefore: createTimeBefore,
        CreateTimeAfter: createTimeAfter,
        StartTimeBefore: startTimeBefore,
        StartTimeAfter: startTimeAfter,
        EndTimeAfter: endTimeAfter,
        EndTimeBefore: endTimeBefore,
        TxDate: txDate,
        JobChildType: jobChildType,
        CstJobName: cstJobName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGravityParticleParticleJobListJobInstanceRequestWithoutParam() *GravityParticleParticleJobListJobInstanceRequest {

    return &GravityParticleParticleJobListJobInstanceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJobInstance",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param pageSize: 页面大小(Required) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}
/* param pageNum: 页码(Required) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetPageNum(pageNum int) {
    r.PageNum = pageNum
}
/* param statusList: 运行状态(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetStatusList(statusList []string) {
    r.StatusList = statusList
}
/* param enable: 作业上上线下线状态(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetEnable(enable string) {
    r.Enable = &enable
}
/* param cycle: 运行周期(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetCycle(cycle string) {
    r.Cycle = &cycle
}
/* param processType: 处理类型(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetProcessType(processType string) {
    r.ProcessType = &processType
}
/* param manager: 负责人(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetManager(manager string) {
    r.Manager = &manager
}
/* param jobName: 作业名(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetJobName(jobName string) {
    r.JobName = &jobName
}
/* param jobType: 任务类型(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetJobType(jobType string) {
    r.JobType = &jobType
}
/* param createTimeBefore: 任务创建日期-结束(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetCreateTimeBefore(createTimeBefore string) {
    r.CreateTimeBefore = &createTimeBefore
}
/* param createTimeAfter: 任务创建日期-开始(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetCreateTimeAfter(createTimeAfter string) {
    r.CreateTimeAfter = &createTimeAfter
}
/* param startTimeBefore: 运行开始时间范围(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetStartTimeBefore(startTimeBefore string) {
    r.StartTimeBefore = &startTimeBefore
}
/* param startTimeAfter: 运行开始时间范围(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetStartTimeAfter(startTimeAfter string) {
    r.StartTimeAfter = &startTimeAfter
}
/* param endTimeAfter: 运行结束时间范围(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetEndTimeAfter(endTimeAfter string) {
    r.EndTimeAfter = &endTimeAfter
}
/* param endTimeBefore: 运行结束时间范围(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetEndTimeBefore(endTimeBefore string) {
    r.EndTimeBefore = &endTimeBefore
}
/* param txDate: 数据日期(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetTxDate(txDate string) {
    r.TxDate = &txDate
}
/* param jobChildType: (Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetJobChildType(jobChildType string) {
    r.JobChildType = &jobChildType
}
/* param cstJobName: 客户作业名(Optional) */
func (r *GravityParticleParticleJobListJobInstanceRequest) SetCstJobName(cstJobName string) {
    r.CstJobName = &cstJobName
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GravityParticleParticleJobListJobInstanceRequest) GetRegionId() string {
    return r.RegionId
}

type GravityParticleParticleJobListJobInstanceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GravityParticleParticleJobListJobInstanceResult `json:"result"`
}

type GravityParticleParticleJobListJobInstanceResult struct {
    Success int `json:"success"`
    Result shenhaiplatform.GpjmPageInfoListJobInstanceResultDTO `json:"result"`
    Code string `json:"code"`
    Msg string `json:"msg"`
    _REQ_SEQ_NO_ string `json:"_REQ_SEQ_NO_"`
}