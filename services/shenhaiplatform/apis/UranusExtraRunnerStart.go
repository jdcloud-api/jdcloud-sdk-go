// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type UranusExtraRunnerStartRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 流程code (Optional) */
    FlowCode *string `json:"flowCode"`

    /* 脚本内容 (Optional) */
    Content *string `json:"content"`

    /* 执行引擎MapReduce,Spark,Tez,presto,Python2,Python3,auto,默认spark (Optional) */
    ExecEngine *string `json:"execEngine"`

    /* 脚本内容的变量参数配置 (Optional) */
    Args *shenhaiplatform.UranusTaskParamReq `json:"args"`

    /* 资源组名称 (Optional) */
    ResourceName *string `json:"resourceName"`

    /* 资源组code (Optional) */
    ResourceCode *string `json:"resourceCode"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusExtraRunnerStartRequest(
    regionId string,
    appName string,
) *UranusExtraRunnerStartRequest {

	return &UranusExtraRunnerStartRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusExtraRunnerStart",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param flowCode: 流程code (Optional)
 * param content: 脚本内容 (Optional)
 * param execEngine: 执行引擎MapReduce,Spark,Tez,presto,Python2,Python3,auto,默认spark (Optional)
 * param args: 脚本内容的变量参数配置 (Optional)
 * param resourceName: 资源组名称 (Optional)
 * param resourceCode: 资源组code (Optional)
 */
func NewUranusExtraRunnerStartRequestWithAllParams(
    regionId string,
    appName string,
    flowCode *string,
    content *string,
    execEngine *string,
    args *shenhaiplatform.UranusTaskParamReq,
    resourceName *string,
    resourceCode *string,
) *UranusExtraRunnerStartRequest {

    return &UranusExtraRunnerStartRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusExtraRunnerStart",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        FlowCode: flowCode,
        Content: content,
        ExecEngine: execEngine,
        Args: args,
        ResourceName: resourceName,
        ResourceCode: resourceCode,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusExtraRunnerStartRequestWithoutParam() *UranusExtraRunnerStartRequest {

    return &UranusExtraRunnerStartRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusExtraRunnerStart",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusExtraRunnerStartRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusExtraRunnerStartRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param flowCode: 流程code(Optional) */
func (r *UranusExtraRunnerStartRequest) SetFlowCode(flowCode string) {
    r.FlowCode = &flowCode
}
/* param content: 脚本内容(Optional) */
func (r *UranusExtraRunnerStartRequest) SetContent(content string) {
    r.Content = &content
}
/* param execEngine: 执行引擎MapReduce,Spark,Tez,presto,Python2,Python3,auto,默认spark(Optional) */
func (r *UranusExtraRunnerStartRequest) SetExecEngine(execEngine string) {
    r.ExecEngine = &execEngine
}
/* param args: 脚本内容的变量参数配置(Optional) */
func (r *UranusExtraRunnerStartRequest) SetArgs(args *shenhaiplatform.UranusTaskParamReq) {
    r.Args = args
}
/* param resourceName: 资源组名称(Optional) */
func (r *UranusExtraRunnerStartRequest) SetResourceName(resourceName string) {
    r.ResourceName = &resourceName
}
/* param resourceCode: 资源组code(Optional) */
func (r *UranusExtraRunnerStartRequest) SetResourceCode(resourceCode string) {
    r.ResourceCode = &resourceCode
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusExtraRunnerStartRequest) GetRegionId() string {
    return r.RegionId
}

type UranusExtraRunnerStartResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusExtraRunnerStartResult `json:"result"`
}

type UranusExtraRunnerStartResult struct {
    Code string `json:"code"`
    ErrorTitle string `json:"errorTitle"`
    ErrorMsg string `json:"errorMsg"`
    Result int `json:"result"`
    SubCode string `json:"subCode"`
    Successed bool `json:"successed"`
}