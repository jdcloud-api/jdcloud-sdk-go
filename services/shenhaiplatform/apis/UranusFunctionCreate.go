// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type UranusFunctionCreateRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 租户code (Optional) */
    CompanyCode *string `json:"companyCode"`

    /* 命名空间code (Optional) */
    WorkspaceCode *string `json:"workspaceCode"`

    /* 函数名称（支持字母、数字、下划线，不超过50个字符） (Optional) */
    FunctionName *string `json:"functionName"`

    /* 分类目录id (Optional) */
    FunctionCatalogId *int `json:"functionCatalogId"`

    /* 函数主类全路径 (Optional) */
    ClassName *string `json:"className"`

    /* 负责人 (Optional) */
    Managers []string `json:"managers"`

    /* 依赖的资源code（包括资源文件/资源目录） (Optional) */
    ResourceCodes []string `json:"resourceCodes"`

    /* 函数格式 (Optional) */
    FunctionFormat *string `json:"functionFormat"`

    /* 函数使用说明 (Optional) */
    FunctionUsage *string `json:"functionUsage"`

    /* 关联引擎 (Optional) */
    RelativeEngine *string `json:"relativeEngine"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusFunctionCreateRequest(
    regionId string,
    appName string,
) *UranusFunctionCreateRequest {

	return &UranusFunctionCreateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusFunctionCreate",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param companyCode: 租户code (Optional)
 * param workspaceCode: 命名空间code (Optional)
 * param functionName: 函数名称（支持字母、数字、下划线，不超过50个字符） (Optional)
 * param functionCatalogId: 分类目录id (Optional)
 * param className: 函数主类全路径 (Optional)
 * param managers: 负责人 (Optional)
 * param resourceCodes: 依赖的资源code（包括资源文件/资源目录） (Optional)
 * param functionFormat: 函数格式 (Optional)
 * param functionUsage: 函数使用说明 (Optional)
 * param relativeEngine: 关联引擎 (Optional)
 */
func NewUranusFunctionCreateRequestWithAllParams(
    regionId string,
    appName string,
    companyCode *string,
    workspaceCode *string,
    functionName *string,
    functionCatalogId *int,
    className *string,
    managers []string,
    resourceCodes []string,
    functionFormat *string,
    functionUsage *string,
    relativeEngine *string,
) *UranusFunctionCreateRequest {

    return &UranusFunctionCreateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusFunctionCreate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        CompanyCode: companyCode,
        WorkspaceCode: workspaceCode,
        FunctionName: functionName,
        FunctionCatalogId: functionCatalogId,
        ClassName: className,
        Managers: managers,
        ResourceCodes: resourceCodes,
        FunctionFormat: functionFormat,
        FunctionUsage: functionUsage,
        RelativeEngine: relativeEngine,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusFunctionCreateRequestWithoutParam() *UranusFunctionCreateRequest {

    return &UranusFunctionCreateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusFunctionCreate",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusFunctionCreateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusFunctionCreateRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param companyCode: 租户code(Optional) */
func (r *UranusFunctionCreateRequest) SetCompanyCode(companyCode string) {
    r.CompanyCode = &companyCode
}
/* param workspaceCode: 命名空间code(Optional) */
func (r *UranusFunctionCreateRequest) SetWorkspaceCode(workspaceCode string) {
    r.WorkspaceCode = &workspaceCode
}
/* param functionName: 函数名称（支持字母、数字、下划线，不超过50个字符）(Optional) */
func (r *UranusFunctionCreateRequest) SetFunctionName(functionName string) {
    r.FunctionName = &functionName
}
/* param functionCatalogId: 分类目录id(Optional) */
func (r *UranusFunctionCreateRequest) SetFunctionCatalogId(functionCatalogId int) {
    r.FunctionCatalogId = &functionCatalogId
}
/* param className: 函数主类全路径(Optional) */
func (r *UranusFunctionCreateRequest) SetClassName(className string) {
    r.ClassName = &className
}
/* param managers: 负责人(Optional) */
func (r *UranusFunctionCreateRequest) SetManagers(managers []string) {
    r.Managers = managers
}
/* param resourceCodes: 依赖的资源code（包括资源文件/资源目录）(Optional) */
func (r *UranusFunctionCreateRequest) SetResourceCodes(resourceCodes []string) {
    r.ResourceCodes = resourceCodes
}
/* param functionFormat: 函数格式(Optional) */
func (r *UranusFunctionCreateRequest) SetFunctionFormat(functionFormat string) {
    r.FunctionFormat = &functionFormat
}
/* param functionUsage: 函数使用说明(Optional) */
func (r *UranusFunctionCreateRequest) SetFunctionUsage(functionUsage string) {
    r.FunctionUsage = &functionUsage
}
/* param relativeEngine: 关联引擎(Optional) */
func (r *UranusFunctionCreateRequest) SetRelativeEngine(relativeEngine string) {
    r.RelativeEngine = &relativeEngine
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusFunctionCreateRequest) GetRegionId() string {
    return r.RegionId
}

type UranusFunctionCreateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusFunctionCreateResult `json:"result"`
}

type UranusFunctionCreateResult struct {
    Code string `json:"code"`
    ErrorTitle string `json:"errorTitle"`
    ErrorMsg string `json:"errorMsg"`
    Result int `json:"result"`
    SubCode string `json:"subCode"`
    Successed bool `json:"successed"`
}