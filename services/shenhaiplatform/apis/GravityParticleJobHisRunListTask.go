// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type GravityParticleJobHisRunListTaskRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 页面大小  */
    PageSize int `json:"pageSize"`

    /* 页码  */
    PageNum int `json:"pageNum"`

    /* 补数任务是否关闭 (Optional) */
    Enable *string `json:"enable"`

    /* 任务名称 (Optional) */
    JobName *string `json:"jobName"`

    /* 客户作业名 (Optional) */
    CstJobName *string `json:"cstJobName"`

    /* 任务类型 (Optional) */
    JobType *string `json:"jobType"`

    /* 处理类型 (Optional) */
    ProcessType *string `json:"processType"`

    /* 处理类型列表 (Optional) */
    ProcessTypeList []string `json:"processTypeList"`

    /* 执行类型列表 (Optional) */
    ExeTypeList []string `json:"exeTypeList"`

    /* 周期具体日期 (Optional) */
    Cycle *string `json:"cycle"`

    /* 作业负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 任务状态 (Optional) */
    Statu *string `json:"statu"`

    /* 补数开始日期 (Optional) */
    JobStartDate *string `json:"jobStartDate"`

    /* 补数结束日期 (Optional) */
    JobEndDate *string `json:"jobEndDate"`

    /* 创建时间结束区间 (Optional) */
    CreateDateBefore *string `json:"createDateBefore"`

    /* 工作空间code (Optional) */
    WorkspaceCode *string `json:"workspaceCode"`

    /*  (Optional) */
    JobChildType *string `json:"jobChildType"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGravityParticleJobHisRunListTaskRequest(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
) *GravityParticleJobHisRunListTaskRequest {

	return &GravityParticleJobHisRunListTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/gravityParticleJobHisRunListTask",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 * param enable: 补数任务是否关闭 (Optional)
 * param jobName: 任务名称 (Optional)
 * param cstJobName: 客户作业名 (Optional)
 * param jobType: 任务类型 (Optional)
 * param processType: 处理类型 (Optional)
 * param processTypeList: 处理类型列表 (Optional)
 * param exeTypeList: 执行类型列表 (Optional)
 * param cycle: 周期具体日期 (Optional)
 * param manager: 作业负责人 (Optional)
 * param statu: 任务状态 (Optional)
 * param jobStartDate: 补数开始日期 (Optional)
 * param jobEndDate: 补数结束日期 (Optional)
 * param createDateBefore: 创建时间结束区间 (Optional)
 * param workspaceCode: 工作空间code (Optional)
 * param jobChildType:  (Optional)
 */
func NewGravityParticleJobHisRunListTaskRequestWithAllParams(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
    enable *string,
    jobName *string,
    cstJobName *string,
    jobType *string,
    processType *string,
    processTypeList []string,
    exeTypeList []string,
    cycle *string,
    manager *string,
    statu *string,
    jobStartDate *string,
    jobEndDate *string,
    createDateBefore *string,
    workspaceCode *string,
    jobChildType *string,
) *GravityParticleJobHisRunListTaskRequest {

    return &GravityParticleJobHisRunListTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleJobHisRunListTask",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
        Enable: enable,
        JobName: jobName,
        CstJobName: cstJobName,
        JobType: jobType,
        ProcessType: processType,
        ProcessTypeList: processTypeList,
        ExeTypeList: exeTypeList,
        Cycle: cycle,
        Manager: manager,
        Statu: statu,
        JobStartDate: jobStartDate,
        JobEndDate: jobEndDate,
        CreateDateBefore: createDateBefore,
        WorkspaceCode: workspaceCode,
        JobChildType: jobChildType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGravityParticleJobHisRunListTaskRequestWithoutParam() *GravityParticleJobHisRunListTaskRequest {

    return &GravityParticleJobHisRunListTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleJobHisRunListTask",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GravityParticleJobHisRunListTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *GravityParticleJobHisRunListTaskRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param pageSize: 页面大小(Required) */
func (r *GravityParticleJobHisRunListTaskRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}
/* param pageNum: 页码(Required) */
func (r *GravityParticleJobHisRunListTaskRequest) SetPageNum(pageNum int) {
    r.PageNum = pageNum
}
/* param enable: 补数任务是否关闭(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetEnable(enable string) {
    r.Enable = &enable
}
/* param jobName: 任务名称(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetJobName(jobName string) {
    r.JobName = &jobName
}
/* param cstJobName: 客户作业名(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetCstJobName(cstJobName string) {
    r.CstJobName = &cstJobName
}
/* param jobType: 任务类型(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetJobType(jobType string) {
    r.JobType = &jobType
}
/* param processType: 处理类型(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetProcessType(processType string) {
    r.ProcessType = &processType
}
/* param processTypeList: 处理类型列表(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetProcessTypeList(processTypeList []string) {
    r.ProcessTypeList = processTypeList
}
/* param exeTypeList: 执行类型列表(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetExeTypeList(exeTypeList []string) {
    r.ExeTypeList = exeTypeList
}
/* param cycle: 周期具体日期(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetCycle(cycle string) {
    r.Cycle = &cycle
}
/* param manager: 作业负责人(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetManager(manager string) {
    r.Manager = &manager
}
/* param statu: 任务状态(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetStatu(statu string) {
    r.Statu = &statu
}
/* param jobStartDate: 补数开始日期(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetJobStartDate(jobStartDate string) {
    r.JobStartDate = &jobStartDate
}
/* param jobEndDate: 补数结束日期(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetJobEndDate(jobEndDate string) {
    r.JobEndDate = &jobEndDate
}
/* param createDateBefore: 创建时间结束区间(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetCreateDateBefore(createDateBefore string) {
    r.CreateDateBefore = &createDateBefore
}
/* param workspaceCode: 工作空间code(Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetWorkspaceCode(workspaceCode string) {
    r.WorkspaceCode = &workspaceCode
}
/* param jobChildType: (Optional) */
func (r *GravityParticleJobHisRunListTaskRequest) SetJobChildType(jobChildType string) {
    r.JobChildType = &jobChildType
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GravityParticleJobHisRunListTaskRequest) GetRegionId() string {
    return r.RegionId
}

type GravityParticleJobHisRunListTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GravityParticleJobHisRunListTaskResult `json:"result"`
}

type GravityParticleJobHisRunListTaskResult struct {
    Id int `json:"id"`
    Txdate string `json:"txdate"`
    Statu string `json:"statu"`
    Enable string `json:"enable"`
    CurrentMsg string `json:"currentMsg"`
    JobName string `json:"jobName"`
    JobStartDate string `json:"jobStartDate"`
    JobEndDate string `json:"jobEndDate"`
    Description string `json:"description"`
    Cycle string `json:"cycle"`
    ProcessType string `json:"processType"`
    ExeType string `json:"exeType"`
    CreateDate string `json:"createDate"`
    ProcessTypeLabel string `json:"processTypeLabel"`
    Manager string `json:"manager"`
    StatusLabel string `json:"statusLabel"`
    JobType string `json:"jobType"`
    JobChildType string `json:"jobChildType"`
    ManagerFlag bool `json:"managerFlag"`
    CstJobName string `json:"cstJobName"`
}