// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type UranusDataLoadPreviewRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 文件类型：csv、text、xls、xlsx  */
    FileType string `json:"fileType"`

    /* 文件路径（key）  */
    FileKey string `json:"fileKey"`

    /* 分隔符: en-comma 英文逗号，en-semicolon 英文分号，space 空格，pipe 竖线，hash 井号，and 与号，line-feed-lf 换行符（UNIX），line-feed-crlf 换行符（Windows） (Optional) */
    Delimiter *string `json:"delimiter"`

    /* 导入起始行 (Optional) */
    StartRow *int `json:"startRow"`

    /* 字符集: GBK、UTF-8、ISO-8859-1，默认为 (Optional) */
    CharacterSet *string `json:"characterSet"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param fileType: 文件类型：csv、text、xls、xlsx (Required)
 * param fileKey: 文件路径（key） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUranusDataLoadPreviewRequest(
    regionId string,
    appName string,
    fileType string,
    fileKey string,
) *UranusDataLoadPreviewRequest {

	return &UranusDataLoadPreviewRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/uranusDataLoadPreview",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        FileType: fileType,
        FileKey: fileKey,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param fileType: 文件类型：csv、text、xls、xlsx (Required)
 * param fileKey: 文件路径（key） (Required)
 * param delimiter: 分隔符: en-comma 英文逗号，en-semicolon 英文分号，space 空格，pipe 竖线，hash 井号，and 与号，line-feed-lf 换行符（UNIX），line-feed-crlf 换行符（Windows） (Optional)
 * param startRow: 导入起始行 (Optional)
 * param characterSet: 字符集: GBK、UTF-8、ISO-8859-1，默认为 (Optional)
 */
func NewUranusDataLoadPreviewRequestWithAllParams(
    regionId string,
    appName string,
    fileType string,
    fileKey string,
    delimiter *string,
    startRow *int,
    characterSet *string,
) *UranusDataLoadPreviewRequest {

    return &UranusDataLoadPreviewRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusDataLoadPreview",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        FileType: fileType,
        FileKey: fileKey,
        Delimiter: delimiter,
        StartRow: startRow,
        CharacterSet: characterSet,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUranusDataLoadPreviewRequestWithoutParam() *UranusDataLoadPreviewRequest {

    return &UranusDataLoadPreviewRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/uranusDataLoadPreview",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UranusDataLoadPreviewRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *UranusDataLoadPreviewRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param fileType: 文件类型：csv、text、xls、xlsx(Required) */
func (r *UranusDataLoadPreviewRequest) SetFileType(fileType string) {
    r.FileType = fileType
}
/* param fileKey: 文件路径（key）(Required) */
func (r *UranusDataLoadPreviewRequest) SetFileKey(fileKey string) {
    r.FileKey = fileKey
}
/* param delimiter: 分隔符: en-comma 英文逗号，en-semicolon 英文分号，space 空格，pipe 竖线，hash 井号，and 与号，line-feed-lf 换行符（UNIX），line-feed-crlf 换行符（Windows）(Optional) */
func (r *UranusDataLoadPreviewRequest) SetDelimiter(delimiter string) {
    r.Delimiter = &delimiter
}
/* param startRow: 导入起始行(Optional) */
func (r *UranusDataLoadPreviewRequest) SetStartRow(startRow int) {
    r.StartRow = &startRow
}
/* param characterSet: 字符集: GBK、UTF-8、ISO-8859-1，默认为(Optional) */
func (r *UranusDataLoadPreviewRequest) SetCharacterSet(characterSet string) {
    r.CharacterSet = &characterSet
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UranusDataLoadPreviewRequest) GetRegionId() string {
    return r.RegionId
}

type UranusDataLoadPreviewResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UranusDataLoadPreviewResult `json:"result"`
}

type UranusDataLoadPreviewResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result []shenhaiplatform.Row `json:"result"`
}