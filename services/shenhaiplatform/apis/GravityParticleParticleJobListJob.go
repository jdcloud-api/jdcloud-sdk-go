// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type GravityParticleParticleJobListJobRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 页面大小  */
    PageSize int `json:"pageSize"`

    /* 页码  */
    PageNum int `json:"pageNum"`

    /* 最后一次运行状态 (Optional) */
    LastJobStatus []string `json:"lastJobStatus"`

    /* 处理类型 (Optional) */
    ExcludeJobTypes []string `json:"excludeJobTypes"`

    /*  (Optional) */
    MarketJobsAll *string `json:"marketJobsAll"`

    /* 负责人 (Optional) */
    Manager *string `json:"manager"`

    /* 任务类型 (Optional) */
    QueryMode *string `json:"queryMode"`

    /* 作业上上线下线状态 (Optional) */
    Enable *string `json:"enable"`

    /* 作业名 (Optional) */
    JobName *string `json:"jobName"`

    /*  (Optional) */
    CurrentStatus *string `json:"currentStatus"`

    /* 处理类型 (Optional) */
    ProcessType *string `json:"processType"`

    /* 数据日期 (Optional) */
    LastTxdate *string `json:"lastTxdate"`

    /* 运行周期 (Optional) */
    Cycle *string `json:"cycle"`

    /* 任务执行时间开始 (Optional) */
    JobStartRunTime *string `json:"jobStartRunTime"`

    /* 任务执行时间- 结束 (Optional) */
    JobEndRunTime *string `json:"jobEndRunTime"`

    /* 任务创建日期-结束 (Optional) */
    CreateTimeBefore *string `json:"createTimeBefore"`

    /* 任务创建日期-开始 (Optional) */
    CreateTimeAfter *string `json:"createTimeAfter"`

    /* 任务修改日期-结束 (Optional) */
    UpdateTimeBefore *string `json:"updateTimeBefore"`

    /* 任务修改日期-开始 (Optional) */
    UpdateTimeAfter *string `json:"updateTimeAfter"`

    /* 任务类型 (Optional) */
    JobType *string `json:"jobType"`

    /*  (Optional) */
    MarkClassifyCode *string `json:"markClassifyCode"`

    /*  (Optional) */
    MarkName *string `json:"markName"`

    /*  (Optional) */
    JobChildType *string `json:"jobChildType"`

    /* 客户作业名 (Optional) */
    CstJobName *string `json:"cstJobName"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGravityParticleParticleJobListJobRequest(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
) *GravityParticleParticleJobListJobRequest {

	return &GravityParticleParticleJobListJobRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJob",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageSize: 页面大小 (Required)
 * param pageNum: 页码 (Required)
 * param lastJobStatus: 最后一次运行状态 (Optional)
 * param excludeJobTypes: 处理类型 (Optional)
 * param marketJobsAll:  (Optional)
 * param manager: 负责人 (Optional)
 * param queryMode: 任务类型 (Optional)
 * param enable: 作业上上线下线状态 (Optional)
 * param jobName: 作业名 (Optional)
 * param currentStatus:  (Optional)
 * param processType: 处理类型 (Optional)
 * param lastTxdate: 数据日期 (Optional)
 * param cycle: 运行周期 (Optional)
 * param jobStartRunTime: 任务执行时间开始 (Optional)
 * param jobEndRunTime: 任务执行时间- 结束 (Optional)
 * param createTimeBefore: 任务创建日期-结束 (Optional)
 * param createTimeAfter: 任务创建日期-开始 (Optional)
 * param updateTimeBefore: 任务修改日期-结束 (Optional)
 * param updateTimeAfter: 任务修改日期-开始 (Optional)
 * param jobType: 任务类型 (Optional)
 * param markClassifyCode:  (Optional)
 * param markName:  (Optional)
 * param jobChildType:  (Optional)
 * param cstJobName: 客户作业名 (Optional)
 */
func NewGravityParticleParticleJobListJobRequestWithAllParams(
    regionId string,
    appName string,
    pageSize int,
    pageNum int,
    lastJobStatus []string,
    excludeJobTypes []string,
    marketJobsAll *string,
    manager *string,
    queryMode *string,
    enable *string,
    jobName *string,
    currentStatus *string,
    processType *string,
    lastTxdate *string,
    cycle *string,
    jobStartRunTime *string,
    jobEndRunTime *string,
    createTimeBefore *string,
    createTimeAfter *string,
    updateTimeBefore *string,
    updateTimeAfter *string,
    jobType *string,
    markClassifyCode *string,
    markName *string,
    jobChildType *string,
    cstJobName *string,
) *GravityParticleParticleJobListJobRequest {

    return &GravityParticleParticleJobListJobRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJob",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        PageSize: pageSize,
        PageNum: pageNum,
        LastJobStatus: lastJobStatus,
        ExcludeJobTypes: excludeJobTypes,
        MarketJobsAll: marketJobsAll,
        Manager: manager,
        QueryMode: queryMode,
        Enable: enable,
        JobName: jobName,
        CurrentStatus: currentStatus,
        ProcessType: processType,
        LastTxdate: lastTxdate,
        Cycle: cycle,
        JobStartRunTime: jobStartRunTime,
        JobEndRunTime: jobEndRunTime,
        CreateTimeBefore: createTimeBefore,
        CreateTimeAfter: createTimeAfter,
        UpdateTimeBefore: updateTimeBefore,
        UpdateTimeAfter: updateTimeAfter,
        JobType: jobType,
        MarkClassifyCode: markClassifyCode,
        MarkName: markName,
        JobChildType: jobChildType,
        CstJobName: cstJobName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGravityParticleParticleJobListJobRequestWithoutParam() *GravityParticleParticleJobListJobRequest {

    return &GravityParticleParticleJobListJobRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/gravityParticleParticleJobListJob",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GravityParticleParticleJobListJobRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *GravityParticleParticleJobListJobRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param pageSize: 页面大小(Required) */
func (r *GravityParticleParticleJobListJobRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}
/* param pageNum: 页码(Required) */
func (r *GravityParticleParticleJobListJobRequest) SetPageNum(pageNum int) {
    r.PageNum = pageNum
}
/* param lastJobStatus: 最后一次运行状态(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetLastJobStatus(lastJobStatus []string) {
    r.LastJobStatus = lastJobStatus
}
/* param excludeJobTypes: 处理类型(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetExcludeJobTypes(excludeJobTypes []string) {
    r.ExcludeJobTypes = excludeJobTypes
}
/* param marketJobsAll: (Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetMarketJobsAll(marketJobsAll string) {
    r.MarketJobsAll = &marketJobsAll
}
/* param manager: 负责人(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetManager(manager string) {
    r.Manager = &manager
}
/* param queryMode: 任务类型(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetQueryMode(queryMode string) {
    r.QueryMode = &queryMode
}
/* param enable: 作业上上线下线状态(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetEnable(enable string) {
    r.Enable = &enable
}
/* param jobName: 作业名(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetJobName(jobName string) {
    r.JobName = &jobName
}
/* param currentStatus: (Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetCurrentStatus(currentStatus string) {
    r.CurrentStatus = &currentStatus
}
/* param processType: 处理类型(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetProcessType(processType string) {
    r.ProcessType = &processType
}
/* param lastTxdate: 数据日期(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetLastTxdate(lastTxdate string) {
    r.LastTxdate = &lastTxdate
}
/* param cycle: 运行周期(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetCycle(cycle string) {
    r.Cycle = &cycle
}
/* param jobStartRunTime: 任务执行时间开始(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetJobStartRunTime(jobStartRunTime string) {
    r.JobStartRunTime = &jobStartRunTime
}
/* param jobEndRunTime: 任务执行时间- 结束(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetJobEndRunTime(jobEndRunTime string) {
    r.JobEndRunTime = &jobEndRunTime
}
/* param createTimeBefore: 任务创建日期-结束(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetCreateTimeBefore(createTimeBefore string) {
    r.CreateTimeBefore = &createTimeBefore
}
/* param createTimeAfter: 任务创建日期-开始(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetCreateTimeAfter(createTimeAfter string) {
    r.CreateTimeAfter = &createTimeAfter
}
/* param updateTimeBefore: 任务修改日期-结束(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetUpdateTimeBefore(updateTimeBefore string) {
    r.UpdateTimeBefore = &updateTimeBefore
}
/* param updateTimeAfter: 任务修改日期-开始(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetUpdateTimeAfter(updateTimeAfter string) {
    r.UpdateTimeAfter = &updateTimeAfter
}
/* param jobType: 任务类型(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetJobType(jobType string) {
    r.JobType = &jobType
}
/* param markClassifyCode: (Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetMarkClassifyCode(markClassifyCode string) {
    r.MarkClassifyCode = &markClassifyCode
}
/* param markName: (Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetMarkName(markName string) {
    r.MarkName = &markName
}
/* param jobChildType: (Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetJobChildType(jobChildType string) {
    r.JobChildType = &jobChildType
}
/* param cstJobName: 客户作业名(Optional) */
func (r *GravityParticleParticleJobListJobRequest) SetCstJobName(cstJobName string) {
    r.CstJobName = &cstJobName
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GravityParticleParticleJobListJobRequest) GetRegionId() string {
    return r.RegionId
}

type GravityParticleParticleJobListJobResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GravityParticleParticleJobListJobResult `json:"result"`
}

type GravityParticleParticleJobListJobResult struct {
    Success int `json:"success"`
    Result shenhaiplatform.GpjmPageInfoListJobResultDTO `json:"result"`
    Code string `json:"code"`
    Msg string `json:"msg"`
    _REQ_SEQ_NO_ string `json:"_REQ_SEQ_NO_"`
}