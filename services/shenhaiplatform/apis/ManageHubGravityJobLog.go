// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type ManageHubGravityJobLogRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /* 分页-页码 (Optional) */
    PageNum *int `json:"pageNum"`

    /* 分页-每页数量 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 作业名称 (Optional) */
    JobName *string `json:"jobName"`

    /* session id (Optional) */
    JobSessionId *string `json:"jobSessionId"`

    /* 数据日期 (Optional) */
    TxDate *string `json:"txDate"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewManageHubGravityJobLogRequest(
    regionId string,
    appName string,
) *ManageHubGravityJobLogRequest {

	return &ManageHubGravityJobLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityJobLog",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param pageNum: 分页-页码 (Optional)
 * param pageSize: 分页-每页数量 (Optional)
 * param jobName: 作业名称 (Optional)
 * param jobSessionId: session id (Optional)
 * param txDate: 数据日期 (Optional)
 */
func NewManageHubGravityJobLogRequestWithAllParams(
    regionId string,
    appName string,
    pageNum *int,
    pageSize *int,
    jobName *string,
    jobSessionId *string,
    txDate *string,
) *ManageHubGravityJobLogRequest {

    return &ManageHubGravityJobLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityJobLog",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        PageNum: pageNum,
        PageSize: pageSize,
        JobName: jobName,
        JobSessionId: jobSessionId,
        TxDate: txDate,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewManageHubGravityJobLogRequestWithoutParam() *ManageHubGravityJobLogRequest {

    return &ManageHubGravityJobLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/manageHubGravityJobLog",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *ManageHubGravityJobLogRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *ManageHubGravityJobLogRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param pageNum: 分页-页码(Optional) */
func (r *ManageHubGravityJobLogRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}
/* param pageSize: 分页-每页数量(Optional) */
func (r *ManageHubGravityJobLogRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param jobName: 作业名称(Optional) */
func (r *ManageHubGravityJobLogRequest) SetJobName(jobName string) {
    r.JobName = &jobName
}
/* param jobSessionId: session id(Optional) */
func (r *ManageHubGravityJobLogRequest) SetJobSessionId(jobSessionId string) {
    r.JobSessionId = &jobSessionId
}
/* param txDate: 数据日期(Optional) */
func (r *ManageHubGravityJobLogRequest) SetTxDate(txDate string) {
    r.TxDate = &txDate
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ManageHubGravityJobLogRequest) GetRegionId() string {
    return r.RegionId
}

type ManageHubGravityJobLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ManageHubGravityJobLogResult `json:"result"`
}

type ManageHubGravityJobLogResult struct {
    Code string `json:"code"`
    Message string `json:"message"`
    Result shenhaiplatform.PageVoString `json:"result"`
}