// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    shenhaiplatform "github.com/jdcloud-api/jdcloud-sdk-go/services/shenhaiplatform/models"
)

type WorkspaceSyncRechargeRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 应用名称  */
    AppName string `json:"appName"`

    /*  (Optional) */
    Region *string `json:"region"`

    /*  (Optional) */
    BillingVersion *string `json:"billingVersion"`

    /*  (Optional) */
    BillingModel *string `json:"billingModel"`

    /*  (Optional) */
    Az *string `json:"az"`

    /*  (Optional) */
    Account *string `json:"account"`

    /*  (Optional) */
    CompanyId *string `json:"companyId"`

    /*  (Optional) */
    PayPlan *string `json:"payPlan"`

    /*  (Optional) */
    AutoRenewal *bool `json:"autoRenewal"`

    /*  (Optional) */
    PurchaseDuration *int `json:"purchaseDuration"`

    /*  (Optional) */
    OrderUniqueKey *shenhaiplatform.OrderUniqueKey `json:"orderUniqueKey"`
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewWorkspaceSyncRechargeRequest(
    regionId string,
    appName string,
) *WorkspaceSyncRechargeRequest {

	return &WorkspaceSyncRechargeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apps/{appName}/workspaceSyncRecharge",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        AppName: appName,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param appName: 应用名称 (Required)
 * param region:  (Optional)
 * param billingVersion:  (Optional)
 * param billingModel:  (Optional)
 * param az:  (Optional)
 * param account:  (Optional)
 * param companyId:  (Optional)
 * param payPlan:  (Optional)
 * param autoRenewal:  (Optional)
 * param purchaseDuration:  (Optional)
 * param orderUniqueKey:  (Optional)
 */
func NewWorkspaceSyncRechargeRequestWithAllParams(
    regionId string,
    appName string,
    region *string,
    billingVersion *string,
    billingModel *string,
    az *string,
    account *string,
    companyId *string,
    payPlan *string,
    autoRenewal *bool,
    purchaseDuration *int,
    orderUniqueKey *shenhaiplatform.OrderUniqueKey,
) *WorkspaceSyncRechargeRequest {

    return &WorkspaceSyncRechargeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/workspaceSyncRecharge",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        AppName: appName,
        Region: region,
        BillingVersion: billingVersion,
        BillingModel: billingModel,
        Az: az,
        Account: account,
        CompanyId: companyId,
        PayPlan: payPlan,
        AutoRenewal: autoRenewal,
        PurchaseDuration: purchaseDuration,
        OrderUniqueKey: orderUniqueKey,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewWorkspaceSyncRechargeRequestWithoutParam() *WorkspaceSyncRechargeRequest {

    return &WorkspaceSyncRechargeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apps/{appName}/workspaceSyncRecharge",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *WorkspaceSyncRechargeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param appName: 应用名称(Required) */
func (r *WorkspaceSyncRechargeRequest) SetAppName(appName string) {
    r.AppName = appName
}
/* param region: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetRegion(region string) {
    r.Region = &region
}
/* param billingVersion: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetBillingVersion(billingVersion string) {
    r.BillingVersion = &billingVersion
}
/* param billingModel: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetBillingModel(billingModel string) {
    r.BillingModel = &billingModel
}
/* param az: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetAz(az string) {
    r.Az = &az
}
/* param account: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetAccount(account string) {
    r.Account = &account
}
/* param companyId: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetCompanyId(companyId string) {
    r.CompanyId = &companyId
}
/* param payPlan: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetPayPlan(payPlan string) {
    r.PayPlan = &payPlan
}
/* param autoRenewal: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetAutoRenewal(autoRenewal bool) {
    r.AutoRenewal = &autoRenewal
}
/* param purchaseDuration: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetPurchaseDuration(purchaseDuration int) {
    r.PurchaseDuration = &purchaseDuration
}
/* param orderUniqueKey: (Optional) */
func (r *WorkspaceSyncRechargeRequest) SetOrderUniqueKey(orderUniqueKey *shenhaiplatform.OrderUniqueKey) {
    r.OrderUniqueKey = orderUniqueKey
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r WorkspaceSyncRechargeRequest) GetRegionId() string {
    return r.RegionId
}

type WorkspaceSyncRechargeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result WorkspaceSyncRechargeResult `json:"result"`
}

type WorkspaceSyncRechargeResult struct {
}