// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    ams "github.com/jdcloud-api/jdcloud-sdk-go/services/ams/models"
)

type DescribeStreamsInputRequest struct {

    core.JDCloudRequest

    /* 流ID  */
    StreamId string `json:"streamId"`

    /* 起始时间 (Optional) */
    StartTime *string `json:"startTime"`

    /* 结束时间 (Optional) */
    EndTime *string `json:"endTime"`
}

/*
 * param streamId: 流ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeStreamsInputRequest(
    streamId string,
) *DescribeStreamsInputRequest {

	return &DescribeStreamsInputRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/streams/{streamId}/inputs",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        StreamId: streamId,
	}
}

/*
 * param streamId: 流ID (Required)
 * param startTime: 起始时间 (Optional)
 * param endTime: 结束时间 (Optional)
 */
func NewDescribeStreamsInputRequestWithAllParams(
    streamId string,
    startTime *string,
    endTime *string,
) *DescribeStreamsInputRequest {

    return &DescribeStreamsInputRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{streamId}/inputs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        StreamId: streamId,
        StartTime: startTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeStreamsInputRequestWithoutParam() *DescribeStreamsInputRequest {

    return &DescribeStreamsInputRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/streams/{streamId}/inputs",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param streamId: 流ID(Required) */
func (r *DescribeStreamsInputRequest) SetStreamId(streamId string) {
    r.StreamId = streamId
}

/* param startTime: 起始时间(Optional) */
func (r *DescribeStreamsInputRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: 结束时间(Optional) */
func (r *DescribeStreamsInputRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeStreamsInputRequest) GetRegionId() string {
    return ""
}

type DescribeStreamsInputResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeStreamsInputResult `json:"result"`
}

type DescribeStreamsInputResult struct {
    StreamInputDatas []ams.StreamInputData `json:"streamInputDatas"`
}