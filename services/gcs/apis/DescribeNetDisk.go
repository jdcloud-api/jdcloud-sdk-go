// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DescribeNetDiskRequest struct {

    core.JDCloudRequest

    /* 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域  */
    RegionId string `json:"regionId"`

    /* 可用区名称 (Optional) */
    Az *string `json:"az"`
}

/*
 * param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeNetDiskRequest(
    regionId string,
) *DescribeNetDiskRequest {

	return &DescribeNetDiskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/describeNetDisk",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域 (Required)
 * param az: 可用区名称 (Optional)
 */
func NewDescribeNetDiskRequestWithAllParams(
    regionId string,
    az *string,
) *DescribeNetDiskRequest {

    return &DescribeNetDiskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeNetDisk",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Az: az,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeNetDiskRequestWithoutParam() *DescribeNetDiskRequest {

    return &DescribeNetDiskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/describeNetDisk",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域(Required) */
func (r *DescribeNetDiskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param az: 可用区名称(Optional) */
func (r *DescribeNetDiskRequest) SetAz(az string) {
    r.Az = &az
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeNetDiskRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeNetDiskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeNetDiskResult `json:"result"`
}

type DescribeNetDiskResult struct {
    Open string `json:"open"`
    BytesUsed int64 `json:"bytesUsed"`
    BytesQuota int64 `json:"bytesQuota"`
    Namespace string `json:"namespace"`
    NetdiskId string `json:"netdiskId"`
    Az string `json:"az"`
    PvcName string `json:"pvcName"`
    NetType string `json:"netType"`
    PvPath string `json:"pvPath"`
    NetVolumeName string `json:"netVolumeName"`
    NetVolumePath string `json:"netVolumePath"`
    Storage int `json:"storage"`
}