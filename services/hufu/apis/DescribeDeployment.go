// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type DescribeDeploymentRequest struct {

    core.JDCloudRequest

    /* 场景ID  */
    SceneId int `json:"sceneId"`

    /* 部署ID  */
    DeploymentId string `json:"deploymentId"`
}

/*
 * param sceneId: 场景ID (Required)
 * param deploymentId: 部署ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeDeploymentRequest(
    sceneId int,
    deploymentId string,
) *DescribeDeploymentRequest {

	return &DescribeDeploymentRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/scenes/{sceneId}/deployments/{deploymentId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        SceneId: sceneId,
        DeploymentId: deploymentId,
	}
}

/*
 * param sceneId: 场景ID (Required)
 * param deploymentId: 部署ID (Required)
 */
func NewDescribeDeploymentRequestWithAllParams(
    sceneId int,
    deploymentId string,
) *DescribeDeploymentRequest {

    return &DescribeDeploymentRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/scenes/{sceneId}/deployments/{deploymentId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        SceneId: sceneId,
        DeploymentId: deploymentId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeDeploymentRequestWithoutParam() *DescribeDeploymentRequest {

    return &DescribeDeploymentRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/scenes/{sceneId}/deployments/{deploymentId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param sceneId: 场景ID(Required) */
func (r *DescribeDeploymentRequest) SetSceneId(sceneId int) {
    r.SceneId = sceneId
}

/* param deploymentId: 部署ID(Required) */
func (r *DescribeDeploymentRequest) SetDeploymentId(deploymentId string) {
    r.DeploymentId = deploymentId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeDeploymentRequest) GetRegionId() string {
    return ""
}

type DescribeDeploymentResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeDeploymentResult `json:"result"`
}

type DescribeDeploymentResult struct {
    DeploymentId string `json:"deploymentId"`
    Revision string `json:"revision"`
    Path string `json:"path"`
    Environment string `json:"environment"`
    BackendServiceType string `json:"backendServiceType"`
    BackendUrl string `json:"backendUrl"`
    Description string `json:"description"`
    CreateTime int64 `json:"createTime"`
    JdsfName string `json:"jdsfName"`
    JdsfRegistryName string `json:"jdsfRegistryName"`
    JdsfId string `json:"jdsfId"`
}