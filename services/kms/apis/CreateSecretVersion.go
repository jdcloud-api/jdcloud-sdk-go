// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    kms "github.com/jdcloud-api/jdcloud-sdk-go/services/kms/models"
)

type CreateSecretVersionRequest struct {

    core.JDCloudRequest

    /* 机密ID  */
    SecretId string `json:"secretId"`

    /*   */
    SecretVersionCfg *kms.SecretVersionCfg `json:"secretVersionCfg"`
}

/*
 * param secretId: 机密ID (Required)
 * param secretVersionCfg:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateSecretVersionRequest(
    secretId string,
    secretVersionCfg *kms.SecretVersionCfg,
) *CreateSecretVersionRequest {

	return &CreateSecretVersionRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/secret/{secretId}:createSecretVersion",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        SecretId: secretId,
        SecretVersionCfg: secretVersionCfg,
	}
}

/*
 * param secretId: 机密ID (Required)
 * param secretVersionCfg:  (Required)
 */
func NewCreateSecretVersionRequestWithAllParams(
    secretId string,
    secretVersionCfg *kms.SecretVersionCfg,
) *CreateSecretVersionRequest {

    return &CreateSecretVersionRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/secret/{secretId}:createSecretVersion",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        SecretId: secretId,
        SecretVersionCfg: secretVersionCfg,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateSecretVersionRequestWithoutParam() *CreateSecretVersionRequest {

    return &CreateSecretVersionRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/secret/{secretId}:createSecretVersion",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param secretId: 机密ID(Required) */
func (r *CreateSecretVersionRequest) SetSecretId(secretId string) {
    r.SecretId = secretId
}

/* param secretVersionCfg: (Required) */
func (r *CreateSecretVersionRequest) SetSecretVersionCfg(secretVersionCfg *kms.SecretVersionCfg) {
    r.SecretVersionCfg = secretVersionCfg
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateSecretVersionRequest) GetRegionId() string {
    return ""
}

type CreateSecretVersionResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateSecretVersionResult `json:"result"`
}

type CreateSecretVersionResult struct {
}