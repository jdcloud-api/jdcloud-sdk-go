// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type SetExtraCacheTimeRequest struct {

    core.JDCloudRequest

    /* 用户域名  */
    Domain string `json:"domain"`

    /* 异常状态码 ["4xx","400", "401",  "402", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417",  "5xx","500", "501", "502", "503", "504", "505"]中的其中一个 (Optional) */
    HttpCode *string `json:"httpCode"`

    /* 缓存时间(单位:秒) (Optional) */
    CacheTime *int64 `json:"cacheTime"`
}

/*
 * param domain: 用户域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetExtraCacheTimeRequest(
    domain string,
) *SetExtraCacheTimeRequest {

	return &SetExtraCacheTimeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domain/{domain}/extraCacheTime:set",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Domain: domain,
	}
}

/*
 * param domain: 用户域名 (Required)
 * param httpCode: 异常状态码 ["4xx","400", "401",  "402", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417",  "5xx","500", "501", "502", "503", "504", "505"]中的其中一个 (Optional)
 * param cacheTime: 缓存时间(单位:秒) (Optional)
 */
func NewSetExtraCacheTimeRequestWithAllParams(
    domain string,
    httpCode *string,
    cacheTime *int64,
) *SetExtraCacheTimeRequest {

    return &SetExtraCacheTimeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/extraCacheTime:set",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        HttpCode: httpCode,
        CacheTime: cacheTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetExtraCacheTimeRequestWithoutParam() *SetExtraCacheTimeRequest {

    return &SetExtraCacheTimeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/extraCacheTime:set",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 用户域名(Required) */
func (r *SetExtraCacheTimeRequest) SetDomain(domain string) {
    r.Domain = domain
}

/* param httpCode: 异常状态码 ["4xx","400", "401",  "402", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417",  "5xx","500", "501", "502", "503", "504", "505"]中的其中一个(Optional) */
func (r *SetExtraCacheTimeRequest) SetHttpCode(httpCode string) {
    r.HttpCode = &httpCode
}

/* param cacheTime: 缓存时间(单位:秒)(Optional) */
func (r *SetExtraCacheTimeRequest) SetCacheTime(cacheTime int64) {
    r.CacheTime = &cacheTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetExtraCacheTimeRequest) GetRegionId() string {
    return ""
}

type SetExtraCacheTimeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetExtraCacheTimeResult `json:"result"`
}

type SetExtraCacheTimeResult struct {
}