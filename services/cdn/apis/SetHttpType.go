// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type SetHttpTypeRequest struct {

    core.JDCloudRequest

    /* 用户域名  */
    Domain string `json:"domain"`

    /* http类型,只能为http或者https,默认为http.当设为https时,需要调用“设置通讯协议”接口上传证书和私钥 (Optional) */
    HttpType *string `json:"httpType"`

    /* 用户证书,当Type为https时必须设置 (Optional) */
    Certificate *string `json:"certificate"`

    /* 证书私钥 (Optional) */
    RsaKey *string `json:"rsaKey"`

    /* 有三种类型：default、http、https (Optional) */
    JumpType *string `json:"jumpType"`
}

/*
 * param domain: 用户域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetHttpTypeRequest(
    domain string,
) *SetHttpTypeRequest {

	return &SetHttpTypeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domain/{domain}/httpType",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Domain: domain,
	}
}

/*
 * param domain: 用户域名 (Required)
 * param httpType: http类型,只能为http或者https,默认为http.当设为https时,需要调用“设置通讯协议”接口上传证书和私钥 (Optional)
 * param certificate: 用户证书,当Type为https时必须设置 (Optional)
 * param rsaKey: 证书私钥 (Optional)
 * param jumpType: 有三种类型：default、http、https (Optional)
 */
func NewSetHttpTypeRequestWithAllParams(
    domain string,
    httpType *string,
    certificate *string,
    rsaKey *string,
    jumpType *string,
) *SetHttpTypeRequest {

    return &SetHttpTypeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/httpType",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        HttpType: httpType,
        Certificate: certificate,
        RsaKey: rsaKey,
        JumpType: jumpType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetHttpTypeRequestWithoutParam() *SetHttpTypeRequest {

    return &SetHttpTypeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/httpType",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 用户域名(Required) */
func (r *SetHttpTypeRequest) SetDomain(domain string) {
    r.Domain = domain
}

/* param httpType: http类型,只能为http或者https,默认为http.当设为https时,需要调用“设置通讯协议”接口上传证书和私钥(Optional) */
func (r *SetHttpTypeRequest) SetHttpType(httpType string) {
    r.HttpType = &httpType
}

/* param certificate: 用户证书,当Type为https时必须设置(Optional) */
func (r *SetHttpTypeRequest) SetCertificate(certificate string) {
    r.Certificate = &certificate
}

/* param rsaKey: 证书私钥(Optional) */
func (r *SetHttpTypeRequest) SetRsaKey(rsaKey string) {
    r.RsaKey = &rsaKey
}

/* param jumpType: 有三种类型：default、http、https(Optional) */
func (r *SetHttpTypeRequest) SetJumpType(jumpType string) {
    r.JumpType = &jumpType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetHttpTypeRequest) GetRegionId() string {
    return ""
}

type SetHttpTypeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetHttpTypeResult `json:"result"`
}

type SetHttpTypeResult struct {
}