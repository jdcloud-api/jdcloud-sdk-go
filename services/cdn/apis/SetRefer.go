// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type SetReferRequest struct {

    core.JDCloudRequest

    /* 用户域名  */
    Domain string `json:"domain"`

    /* refer类型，取值：block（黑名单），allow（白名单）默认为block (Optional) */
    ReferType *string `json:"referType"`

    /* 逗号隔开的域名列表，如果referList传空则为删除 (Optional) */
    ReferList []string `json:"referList"`

    /* 是否允许空refer访问，默认为“on” (Optional) */
    AllowNoReferHeader *string `json:"allowNoReferHeader"`

    /* 是否允许无ua访问，默认为“on” (Optional) */
    AllowNullReferHeader *string `json:"allowNullReferHeader"`
}

/*
 * param domain: 用户域名 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetReferRequest(
    domain string,
) *SetReferRequest {

	return &SetReferRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domain/{domain}/refer",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Domain: domain,
	}
}

/*
 * param domain: 用户域名 (Required)
 * param referType: refer类型，取值：block（黑名单），allow（白名单）默认为block (Optional)
 * param referList: 逗号隔开的域名列表，如果referList传空则为删除 (Optional)
 * param allowNoReferHeader: 是否允许空refer访问，默认为“on” (Optional)
 * param allowNullReferHeader: 是否允许无ua访问，默认为“on” (Optional)
 */
func NewSetReferRequestWithAllParams(
    domain string,
    referType *string,
    referList []string,
    allowNoReferHeader *string,
    allowNullReferHeader *string,
) *SetReferRequest {

    return &SetReferRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/refer",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domain: domain,
        ReferType: referType,
        ReferList: referList,
        AllowNoReferHeader: allowNoReferHeader,
        AllowNullReferHeader: allowNullReferHeader,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetReferRequestWithoutParam() *SetReferRequest {

    return &SetReferRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain/{domain}/refer",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domain: 用户域名(Required) */
func (r *SetReferRequest) SetDomain(domain string) {
    r.Domain = domain
}

/* param referType: refer类型，取值：block（黑名单），allow（白名单）默认为block(Optional) */
func (r *SetReferRequest) SetReferType(referType string) {
    r.ReferType = &referType
}

/* param referList: 逗号隔开的域名列表，如果referList传空则为删除(Optional) */
func (r *SetReferRequest) SetReferList(referList []string) {
    r.ReferList = referList
}

/* param allowNoReferHeader: 是否允许空refer访问，默认为“on”(Optional) */
func (r *SetReferRequest) SetAllowNoReferHeader(allowNoReferHeader string) {
    r.AllowNoReferHeader = &allowNoReferHeader
}

/* param allowNullReferHeader: 是否允许无ua访问，默认为“on”(Optional) */
func (r *SetReferRequest) SetAllowNullReferHeader(allowNullReferHeader string) {
    r.AllowNullReferHeader = &allowNullReferHeader
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetReferRequest) GetRegionId() string {
    return ""
}

type SetReferResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetReferResult `json:"result"`
}

type SetReferResult struct {
}