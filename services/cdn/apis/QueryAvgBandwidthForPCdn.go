// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    cdn "github.com/lshuining/jdcloud-sdk-go/services/cdn/models"
)

type QueryAvgBandwidthForPCdnRequest struct {

    core.JDCloudRequest

    /* 指定查询开始时间(格式:201906011000)，返回数据包含该时间点。  */
    Starttime string `json:"starttime"`

    /* 指定查询结束时间(格式:201906011100)，返回数据不包含该时间点  */
    Stoptime string `json:"stoptime"`

    /* 按照设备ID查询设备带宽。 (Optional) */
    Clientid *string `json:"clientid"`

    /* 用于支持分页查询，默认为1，表示第几页。 (Optional) */
    Page *int `json:"page"`

    /* 用于支持分页查询，表示每页返回多少条数据，默认每页返回10条数据，size必须是10的整数倍，并且最大值是100。 (Optional) */
    Size *int `json:"size"`
}

/*
 * param starttime: 指定查询开始时间(格式:201906011000)，返回数据包含该时间点。 (Required)
 * param stoptime: 指定查询结束时间(格式:201906011100)，返回数据不包含该时间点 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryAvgBandwidthForPCdnRequest(
    starttime string,
    stoptime string,
) *QueryAvgBandwidthForPCdnRequest {

	return &QueryAvgBandwidthForPCdnRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/pcdn:queryAvgBandwidth",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Starttime: starttime,
        Stoptime: stoptime,
	}
}

/*
 * param starttime: 指定查询开始时间(格式:201906011000)，返回数据包含该时间点。 (Required)
 * param stoptime: 指定查询结束时间(格式:201906011100)，返回数据不包含该时间点 (Required)
 * param clientid: 按照设备ID查询设备带宽。 (Optional)
 * param page: 用于支持分页查询，默认为1，表示第几页。 (Optional)
 * param size: 用于支持分页查询，表示每页返回多少条数据，默认每页返回10条数据，size必须是10的整数倍，并且最大值是100。 (Optional)
 */
func NewQueryAvgBandwidthForPCdnRequestWithAllParams(
    starttime string,
    stoptime string,
    clientid *string,
    page *int,
    size *int,
) *QueryAvgBandwidthForPCdnRequest {

    return &QueryAvgBandwidthForPCdnRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/pcdn:queryAvgBandwidth",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Starttime: starttime,
        Stoptime: stoptime,
        Clientid: clientid,
        Page: page,
        Size: size,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryAvgBandwidthForPCdnRequestWithoutParam() *QueryAvgBandwidthForPCdnRequest {

    return &QueryAvgBandwidthForPCdnRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/pcdn:queryAvgBandwidth",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param starttime: 指定查询开始时间(格式:201906011000)，返回数据包含该时间点。(Required) */
func (r *QueryAvgBandwidthForPCdnRequest) SetStarttime(starttime string) {
    r.Starttime = starttime
}

/* param stoptime: 指定查询结束时间(格式:201906011100)，返回数据不包含该时间点(Required) */
func (r *QueryAvgBandwidthForPCdnRequest) SetStoptime(stoptime string) {
    r.Stoptime = stoptime
}

/* param clientid: 按照设备ID查询设备带宽。(Optional) */
func (r *QueryAvgBandwidthForPCdnRequest) SetClientid(clientid string) {
    r.Clientid = &clientid
}

/* param page: 用于支持分页查询，默认为1，表示第几页。(Optional) */
func (r *QueryAvgBandwidthForPCdnRequest) SetPage(page int) {
    r.Page = &page
}

/* param size: 用于支持分页查询，表示每页返回多少条数据，默认每页返回10条数据，size必须是10的整数倍，并且最大值是100。(Optional) */
func (r *QueryAvgBandwidthForPCdnRequest) SetSize(size int) {
    r.Size = &size
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryAvgBandwidthForPCdnRequest) GetRegionId() string {
    return ""
}

type QueryAvgBandwidthForPCdnResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryAvgBandwidthForPCdnResult `json:"result"`
}

type QueryAvgBandwidthForPCdnResult struct {
    Page cdn.Page `json:"page"`
    Data []cdn.QueryAvgBandwidthGroup `json:"data"`
}