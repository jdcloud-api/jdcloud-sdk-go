// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    cdn "github.com/lshuining/jdcloud-sdk-go/services/cdn/models"
)

type QueryDomainsLogRequest struct {

    core.JDCloudRequest

    /*  (Optional) */
    Domains []string `json:"domains"`

    /* 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional) */
    StartTime *string `json:"startTime"`

    /* 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional) */
    EndTime *string `json:"endTime"`

    /* 时间间隔，取值(hour，day，fiveMin)，不传默认小时。 (Optional) */
    Interval *string `json:"interval"`

    /* 日志类型，取值(log，zip,gz)，不传默认gz。 (Optional) */
    LogType *string `json:"logType"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryDomainsLogRequest(
) *QueryDomainsLogRequest {

	return &QueryDomainsLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/logs",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param domains:  (Optional)
 * param startTime: 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional)
 * param endTime: 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z (Optional)
 * param interval: 时间间隔，取值(hour，day，fiveMin)，不传默认小时。 (Optional)
 * param logType: 日志类型，取值(log，zip,gz)，不传默认gz。 (Optional)
 */
func NewQueryDomainsLogRequestWithAllParams(
    domains []string,
    startTime *string,
    endTime *string,
    interval *string,
    logType *string,
) *QueryDomainsLogRequest {

    return &QueryDomainsLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/logs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Domains: domains,
        StartTime: startTime,
        EndTime: endTime,
        Interval: interval,
        LogType: logType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryDomainsLogRequestWithoutParam() *QueryDomainsLogRequest {

    return &QueryDomainsLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/logs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param domains: (Optional) */
func (r *QueryDomainsLogRequest) SetDomains(domains []string) {
    r.Domains = domains
}

/* param startTime: 查询起始时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z(Optional) */
func (r *QueryDomainsLogRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: 查询截止时间,UTC时间，格式为:yyyy-MM-dd'T'HH:mm:ss'Z'，示例:2018-10-21T10:00:00Z(Optional) */
func (r *QueryDomainsLogRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param interval: 时间间隔，取值(hour，day，fiveMin)，不传默认小时。(Optional) */
func (r *QueryDomainsLogRequest) SetInterval(interval string) {
    r.Interval = &interval
}

/* param logType: 日志类型，取值(log，zip,gz)，不传默认gz。(Optional) */
func (r *QueryDomainsLogRequest) SetLogType(logType string) {
    r.LogType = &logType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryDomainsLogRequest) GetRegionId() string {
    return ""
}

type QueryDomainsLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryDomainsLogResult `json:"result"`
}

type QueryDomainsLogResult struct {
    Logs []cdn.DomainsLog `json:"logs"`
}