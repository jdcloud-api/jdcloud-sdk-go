// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    cdn "github.com/jdcloud-api/jdcloud-sdk-go/services/cdn/models"
)

type GetDomainListRequest struct {

    core.JDCloudRequest

    /* 根据关键字进行模糊匹配 (Optional) */
    KeyWord *string `json:"keyWord"`

    /* pageNumber (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* pageSize (Optional) */
    PageSize *int `json:"pageSize"`

    /* 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject] (Optional) */
    Status *string `json:"status"`

    /* type (Optional) */
    Type *string `json:"type"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetDomainListRequest(
) *GetDomainListRequest {

	return &GetDomainListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/domain",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param keyWord: 根据关键字进行模糊匹配 (Optional)
 * param pageNumber: pageNumber (Optional)
 * param pageSize: pageSize (Optional)
 * param status: 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject] (Optional)
 * param type_: type (Optional)
 */
func NewGetDomainListRequestWithAllParams(
    keyWord *string,
    pageNumber *int,
    pageSize *int,
    status *string,
    type_ *string,
) *GetDomainListRequest {

    return &GetDomainListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        KeyWord: keyWord,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Status: status,
        Type: type_,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetDomainListRequestWithoutParam() *GetDomainListRequest {

    return &GetDomainListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/domain",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param keyWord: 根据关键字进行模糊匹配(Optional) */
func (r *GetDomainListRequest) SetKeyWord(keyWord string) {
    r.KeyWord = &keyWord
}

/* param pageNumber: pageNumber(Optional) */
func (r *GetDomainListRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: pageSize(Optional) */
func (r *GetDomainListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param status: 根据域名状态查询, 可选值[offline, online, configuring, auditing, audit_reject](Optional) */
func (r *GetDomainListRequest) SetStatus(status string) {
    r.Status = &status
}

/* param type_: type(Optional) */
func (r *GetDomainListRequest) SetType(type_ string) {
    r.Type = &type_
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetDomainListRequest) GetRegionId() string {
    return ""
}

type GetDomainListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetDomainListResult `json:"result"`
}

type GetDomainListResult struct {
    TotalCount int `json:"totalCount"`
    PageSize int `json:"pageSize"`
    PageNumber int `json:"pageNumber"`
    Domains []cdn.ListDomainItem `json:"domains"`
}