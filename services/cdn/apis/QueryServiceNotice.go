// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    cdn "github.com/lshuining/jdcloud-sdk-go/services/cdn/models"
)

type QueryServiceNoticeRequest struct {

    core.JDCloudRequest

    /* 通知类型,取值[reportForm],reportForm:报表. (Optional) */
    NoticeType *string `json:"noticeType"`

    /* 通知方式,取值[mail],mail:邮件. (Optional) */
    NoticeWay *string `json:"noticeWay"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryServiceNoticeRequest(
) *QueryServiceNoticeRequest {

	return &QueryServiceNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/serviceNotice",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param noticeType: 通知类型,取值[reportForm],reportForm:报表. (Optional)
 * param noticeWay: 通知方式,取值[mail],mail:邮件. (Optional)
 */
func NewQueryServiceNoticeRequestWithAllParams(
    noticeType *string,
    noticeWay *string,
) *QueryServiceNoticeRequest {

    return &QueryServiceNoticeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceNotice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        NoticeType: noticeType,
        NoticeWay: noticeWay,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryServiceNoticeRequestWithoutParam() *QueryServiceNoticeRequest {

    return &QueryServiceNoticeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/serviceNotice",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param noticeType: 通知类型,取值[reportForm],reportForm:报表.(Optional) */
func (r *QueryServiceNoticeRequest) SetNoticeType(noticeType string) {
    r.NoticeType = &noticeType
}

/* param noticeWay: 通知方式,取值[mail],mail:邮件.(Optional) */
func (r *QueryServiceNoticeRequest) SetNoticeWay(noticeWay string) {
    r.NoticeWay = &noticeWay
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryServiceNoticeRequest) GetRegionId() string {
    return ""
}

type QueryServiceNoticeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryServiceNoticeResult `json:"result"`
}

type QueryServiceNoticeResult struct {
    Notices []cdn.ServiceNoticeItem `json:"notices"`
}