// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type UpdatePrefetchTaskRequest struct {

    core.JDCloudRequest

    /* url (Optional) */
    Url *string `json:"url"`

    /* 地区[huabei huadong dongbei huazhong huanan xinan xibei gangaotai]中的一个 (Optional) */
    Region *string `json:"region"`

    /* 运营商[ct uni cm]中的一个,分别代表电信 联通 移动 (Optional) */
    Isp *string `json:"isp"`

    /* 副本数,介于1-1000之间 (Optional) */
    CopyNum *int `json:"copyNum"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdatePrefetchTaskRequest(
) *UpdatePrefetchTaskRequest {

	return &UpdatePrefetchTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/prefetchTask:update",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param url: url (Optional)
 * param region: 地区[huabei huadong dongbei huazhong huanan xinan xibei gangaotai]中的一个 (Optional)
 * param isp: 运营商[ct uni cm]中的一个,分别代表电信 联通 移动 (Optional)
 * param copyNum: 副本数,介于1-1000之间 (Optional)
 */
func NewUpdatePrefetchTaskRequestWithAllParams(
    url *string,
    region *string,
    isp *string,
    copyNum *int,
) *UpdatePrefetchTaskRequest {

    return &UpdatePrefetchTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/prefetchTask:update",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Url: url,
        Region: region,
        Isp: isp,
        CopyNum: copyNum,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdatePrefetchTaskRequestWithoutParam() *UpdatePrefetchTaskRequest {

    return &UpdatePrefetchTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/prefetchTask:update",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param url: url(Optional) */
func (r *UpdatePrefetchTaskRequest) SetUrl(url string) {
    r.Url = &url
}

/* param region: 地区[huabei huadong dongbei huazhong huanan xinan xibei gangaotai]中的一个(Optional) */
func (r *UpdatePrefetchTaskRequest) SetRegion(region string) {
    r.Region = &region
}

/* param isp: 运营商[ct uni cm]中的一个,分别代表电信 联通 移动(Optional) */
func (r *UpdatePrefetchTaskRequest) SetIsp(isp string) {
    r.Isp = &isp
}

/* param copyNum: 副本数,介于1-1000之间(Optional) */
func (r *UpdatePrefetchTaskRequest) SetCopyNum(copyNum int) {
    r.CopyNum = &copyNum
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdatePrefetchTaskRequest) GetRegionId() string {
    return ""
}

type UpdatePrefetchTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdatePrefetchTaskResult `json:"result"`
}

type UpdatePrefetchTaskResult struct {
}