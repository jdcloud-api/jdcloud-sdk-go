// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type OperatePurgeTaskRequest struct {

    core.JDCloudRequest

    /* 待刷新的url (Optional) */
    Urls []string `json:"urls"`

    /* 操作类型:add代表创建刷新任务,stop代表停止刷新任务 (Optional) */
    OptType *string `json:"optType"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewOperatePurgeTaskRequest(
) *OperatePurgeTaskRequest {

	return &OperatePurgeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/purgeTask",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param urls: 待刷新的url (Optional)
 * param optType: 操作类型:add代表创建刷新任务,stop代表停止刷新任务 (Optional)
 */
func NewOperatePurgeTaskRequestWithAllParams(
    urls []string,
    optType *string,
) *OperatePurgeTaskRequest {

    return &OperatePurgeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/purgeTask",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Urls: urls,
        OptType: optType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewOperatePurgeTaskRequestWithoutParam() *OperatePurgeTaskRequest {

    return &OperatePurgeTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/purgeTask",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param urls: 待刷新的url(Optional) */
func (r *OperatePurgeTaskRequest) SetUrls(urls []string) {
    r.Urls = urls
}

/* param optType: 操作类型:add代表创建刷新任务,stop代表停止刷新任务(Optional) */
func (r *OperatePurgeTaskRequest) SetOptType(optType string) {
    r.OptType = &optType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r OperatePurgeTaskRequest) GetRegionId() string {
    return ""
}

type OperatePurgeTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result OperatePurgeTaskResult `json:"result"`
}

type OperatePurgeTaskResult struct {
}