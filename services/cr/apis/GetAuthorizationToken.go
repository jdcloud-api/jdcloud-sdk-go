// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    cr "github.com/jdcloud-api/jdcloud-sdk-go/services/cr/models"
)

type GetAuthorizationTokenRequest struct {

    core.JDCloudRequest

    /* 地域 ID  */
    RegionId string `json:"regionId"`

    /* 注册表名称  */
    RegistryName string `json:"registryName"`

    /* issue新token的过期时间, 可选参数为新生成令牌的过期时间，最大值为24小时，最小值为1小时，为空则默认为12小时过期时间。
 (Optional) */
    ExpiredAfterHours *int `json:"expiredAfterHours"`
}

/*
 * param regionId: 地域 ID (Required)
 * param registryName: 注册表名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetAuthorizationTokenRequest(
    regionId string,
    registryName string,
) *GetAuthorizationTokenRequest {

	return &GetAuthorizationTokenRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/registries/{registryName}:getAuthorizationToken",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        RegistryName: registryName,
	}
}

/*
 * param regionId: 地域 ID (Required)
 * param registryName: 注册表名称 (Required)
 * param expiredAfterHours: issue新token的过期时间, 可选参数为新生成令牌的过期时间，最大值为24小时，最小值为1小时，为空则默认为12小时过期时间。
 (Optional)
 */
func NewGetAuthorizationTokenRequestWithAllParams(
    regionId string,
    registryName string,
    expiredAfterHours *int,
) *GetAuthorizationTokenRequest {

    return &GetAuthorizationTokenRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/registries/{registryName}:getAuthorizationToken",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        RegistryName: registryName,
        ExpiredAfterHours: expiredAfterHours,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetAuthorizationTokenRequestWithoutParam() *GetAuthorizationTokenRequest {

    return &GetAuthorizationTokenRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/registries/{registryName}:getAuthorizationToken",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 ID(Required) */
func (r *GetAuthorizationTokenRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param registryName: 注册表名称(Required) */
func (r *GetAuthorizationTokenRequest) SetRegistryName(registryName string) {
    r.RegistryName = registryName
}

/* param expiredAfterHours: issue新token的过期时间, 可选参数为新生成令牌的过期时间，最大值为24小时，最小值为1小时，为空则默认为12小时过期时间。
(Optional) */
func (r *GetAuthorizationTokenRequest) SetExpiredAfterHours(expiredAfterHours int) {
    r.ExpiredAfterHours = &expiredAfterHours
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetAuthorizationTokenRequest) GetRegionId() string {
    return r.RegionId
}

type GetAuthorizationTokenResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetAuthorizationTokenResult `json:"result"`
}

type GetAuthorizationTokenResult struct {
    AuthorizationData cr.AuthorizationData `json:"authorizationData"`
}