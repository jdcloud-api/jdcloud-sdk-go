// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    starshield "github.com/lshuining/jdcloud-sdk-go/services/starshield/models"
)

type ListOfFirewallRulesRequest struct {

    core.JDCloudRequest

    /*   */
    Zone_identifier string `json:"zone_identifier"`

    /* 防火墙规则标识符 (Optional) */
    Id *string `json:"id"`

    /* 描述中不区分大小写的搜索 (Optional) */
    Description *string `json:"description"`

    /* 规则操作上的精确匹配 (Optional) */
    Action *string `json:"action"`

    /* 此防火墙规则当前是否已暂停。 (Optional) */
    Paused *bool `json:"paused"`

    /* 分页结果的页码 (Optional) */
    Page *int `json:"page"`

    /* 每页的防火墙规则数 (Optional) */
    Per_page *int `json:"per_page"`
}

/*
 * param zone_identifier:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListOfFirewallRulesRequest(
    zone_identifier string,
) *ListOfFirewallRulesRequest {

	return &ListOfFirewallRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/zones/{zone_identifier}/firewall$$rules",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Zone_identifier: zone_identifier,
	}
}

/*
 * param zone_identifier:  (Required)
 * param id: 防火墙规则标识符 (Optional)
 * param description: 描述中不区分大小写的搜索 (Optional)
 * param action: 规则操作上的精确匹配 (Optional)
 * param paused: 此防火墙规则当前是否已暂停。 (Optional)
 * param page: 分页结果的页码 (Optional)
 * param per_page: 每页的防火墙规则数 (Optional)
 */
func NewListOfFirewallRulesRequestWithAllParams(
    zone_identifier string,
    id *string,
    description *string,
    action *string,
    paused *bool,
    page *int,
    per_page *int,
) *ListOfFirewallRulesRequest {

    return &ListOfFirewallRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_identifier}/firewall$$rules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Zone_identifier: zone_identifier,
        Id: id,
        Description: description,
        Action: action,
        Paused: paused,
        Page: page,
        Per_page: per_page,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListOfFirewallRulesRequestWithoutParam() *ListOfFirewallRulesRequest {

    return &ListOfFirewallRulesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_identifier}/firewall$$rules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param zone_identifier: (Required) */
func (r *ListOfFirewallRulesRequest) SetZone_identifier(zone_identifier string) {
    r.Zone_identifier = zone_identifier
}

/* param id: 防火墙规则标识符(Optional) */
func (r *ListOfFirewallRulesRequest) SetId(id string) {
    r.Id = &id
}

/* param description: 描述中不区分大小写的搜索(Optional) */
func (r *ListOfFirewallRulesRequest) SetDescription(description string) {
    r.Description = &description
}

/* param action: 规则操作上的精确匹配(Optional) */
func (r *ListOfFirewallRulesRequest) SetAction(action string) {
    r.Action = &action
}

/* param paused: 此防火墙规则当前是否已暂停。(Optional) */
func (r *ListOfFirewallRulesRequest) SetPaused(paused bool) {
    r.Paused = &paused
}

/* param page: 分页结果的页码(Optional) */
func (r *ListOfFirewallRulesRequest) SetPage(page int) {
    r.Page = &page
}

/* param per_page: 每页的防火墙规则数(Optional) */
func (r *ListOfFirewallRulesRequest) SetPer_page(per_page int) {
    r.Per_page = &per_page
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListOfFirewallRulesRequest) GetRegionId() string {
    return ""
}

type ListOfFirewallRulesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListOfFirewallRulesResult `json:"result"`
}

type ListOfFirewallRulesResult struct {
    DataList []starshield.FirewallRule `json:"dataList"`
}