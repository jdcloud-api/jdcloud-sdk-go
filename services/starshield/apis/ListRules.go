// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    starshield "github.com/lshuining/jdcloud-sdk-go/services/starshield/models"
)

type ListRulesRequest struct {

    core.JDCloudRequest

    /*   */
    Zone_id string `json:"zone_id"`

    /*   */
    Package_id string `json:"package_id"`

    /* 已将规则覆盖到的设置 (Optional) */
    Mode *string `json:"mode"`

    /* 在相关组中执行单个规则的顺序 (Optional) */
    Priority *string `json:"priority"`

    /* 是否匹配所有搜索要求或至少一个（任何） (Optional) */
    Match *string `json:"match"`

    /* 按指定字段排序 (Optional) */
    Order *string `json:"order"`

    /* 分页结果的页码 (Optional) */
    Page *int `json:"page"`

    /* 每页的规则数 (Optional) */
    Per_page *int `json:"per_page"`

    /* WAF组标识符标签 (Optional) */
    Group_id *string `json:"group_id"`

    /* 规则的公开说明 (Optional) */
    Description *string `json:"description"`

    /* asc-升序；desc-降序 (Optional) */
    Direction *string `json:"direction"`
}

/*
 * param zone_id:  (Required)
 * param package_id:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListRulesRequest(
    zone_id string,
    package_id string,
) *ListRulesRequest {

	return &ListRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/zones/{zone_id}/firewall$$waf$$packages/{package_id}/rules",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Zone_id: zone_id,
        Package_id: package_id,
	}
}

/*
 * param zone_id:  (Required)
 * param package_id:  (Required)
 * param mode: 已将规则覆盖到的设置 (Optional)
 * param priority: 在相关组中执行单个规则的顺序 (Optional)
 * param match: 是否匹配所有搜索要求或至少一个（任何） (Optional)
 * param order: 按指定字段排序 (Optional)
 * param page: 分页结果的页码 (Optional)
 * param per_page: 每页的规则数 (Optional)
 * param group_id: WAF组标识符标签 (Optional)
 * param description: 规则的公开说明 (Optional)
 * param direction: asc-升序；desc-降序 (Optional)
 */
func NewListRulesRequestWithAllParams(
    zone_id string,
    package_id string,
    mode *string,
    priority *string,
    match *string,
    order *string,
    page *int,
    per_page *int,
    group_id *string,
    description *string,
    direction *string,
) *ListRulesRequest {

    return &ListRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_id}/firewall$$waf$$packages/{package_id}/rules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Zone_id: zone_id,
        Package_id: package_id,
        Mode: mode,
        Priority: priority,
        Match: match,
        Order: order,
        Page: page,
        Per_page: per_page,
        Group_id: group_id,
        Description: description,
        Direction: direction,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListRulesRequestWithoutParam() *ListRulesRequest {

    return &ListRulesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_id}/firewall$$waf$$packages/{package_id}/rules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param zone_id: (Required) */
func (r *ListRulesRequest) SetZone_id(zone_id string) {
    r.Zone_id = zone_id
}

/* param package_id: (Required) */
func (r *ListRulesRequest) SetPackage_id(package_id string) {
    r.Package_id = package_id
}

/* param mode: 已将规则覆盖到的设置(Optional) */
func (r *ListRulesRequest) SetMode(mode string) {
    r.Mode = &mode
}

/* param priority: 在相关组中执行单个规则的顺序(Optional) */
func (r *ListRulesRequest) SetPriority(priority string) {
    r.Priority = &priority
}

/* param match: 是否匹配所有搜索要求或至少一个（任何）(Optional) */
func (r *ListRulesRequest) SetMatch(match string) {
    r.Match = &match
}

/* param order: 按指定字段排序(Optional) */
func (r *ListRulesRequest) SetOrder(order string) {
    r.Order = &order
}

/* param page: 分页结果的页码(Optional) */
func (r *ListRulesRequest) SetPage(page int) {
    r.Page = &page
}

/* param per_page: 每页的规则数(Optional) */
func (r *ListRulesRequest) SetPer_page(per_page int) {
    r.Per_page = &per_page
}

/* param group_id: WAF组标识符标签(Optional) */
func (r *ListRulesRequest) SetGroup_id(group_id string) {
    r.Group_id = &group_id
}

/* param description: 规则的公开说明(Optional) */
func (r *ListRulesRequest) SetDescription(description string) {
    r.Description = &description
}

/* param direction: asc-升序；desc-降序(Optional) */
func (r *ListRulesRequest) SetDirection(direction string) {
    r.Direction = &direction
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListRulesRequest) GetRegionId() string {
    return ""
}

type ListRulesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListRulesResult `json:"result"`
}

type ListRulesResult struct {
    DataList []starshield.WAFRule `json:"dataList"`
}