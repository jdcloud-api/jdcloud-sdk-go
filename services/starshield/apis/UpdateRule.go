// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    starshield "github.com/jdcloud-api/jdcloud-sdk-go/services/starshield/models"
)

type UpdateRuleRequest struct {

    core.JDCloudRequest

    /*   */
    Zone_id string `json:"zone_id"`

    /*   */
    Ruleset_id string `json:"ruleset_id"`

    /*   */
    Rule_id string `json:"rule_id"`

    /* 是否开启规则，有效值true/false。 (Optional) */
    Enabled *bool `json:"enabled"`

    /* 规则的描述。 (Optional) */
    Description *string `json:"description"`

    /* 表达式。 (Optional) */
    Expression *string `json:"expression"`

    /* 当表达式匹配时，采取的措施。有效值block（阻止）/challenge（交互式质询）/js_challenge（JS质询）/managed_challenge（托管质询）/log（记录）/rewrite/skip（跳过）。 (Optional) */
    Action *string `json:"action"`

    /*  (Optional) */
    Action_parameters *starshield.Action_parameters `json:"action_parameters"`

    /*  (Optional) */
    Ratelimit *starshield.Ratelimit `json:"ratelimit"`

    /*  (Optional) */
    Logging *starshield.Logging `json:"logging"`

    /*  (Optional) */
    Position *starshield.Position `json:"position"`

    /* 规则标识。 (Optional) */
    Id *string `json:"id"`

    /* 规则版本。 (Optional) */
    Version *string `json:"version"`

    /* 最近更新时间。 (Optional) */
    Last_updated *string `json:"last_updated"`

    /* 规则引用（默认是规则标识）。 (Optional) */
    Ref *string `json:"ref"`
}

/*
 * param zone_id:  (Required)
 * param ruleset_id:  (Required)
 * param rule_id:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateRuleRequest(
    zone_id string,
    ruleset_id string,
    rule_id string,
) *UpdateRuleRequest {

	return &UpdateRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        Zone_id: zone_id,
        Ruleset_id: ruleset_id,
        Rule_id: rule_id,
	}
}

/*
 * param zone_id:  (Required)
 * param ruleset_id:  (Required)
 * param rule_id:  (Required)
 * param enabled: 是否开启规则，有效值true/false。 (Optional)
 * param description: 规则的描述。 (Optional)
 * param expression: 表达式。 (Optional)
 * param action: 当表达式匹配时，采取的措施。有效值block（阻止）/challenge（交互式质询）/js_challenge（JS质询）/managed_challenge（托管质询）/log（记录）/rewrite/skip（跳过）。 (Optional)
 * param action_parameters:  (Optional)
 * param ratelimit:  (Optional)
 * param logging:  (Optional)
 * param position:  (Optional)
 * param id: 规则标识。 (Optional)
 * param version: 规则版本。 (Optional)
 * param last_updated: 最近更新时间。 (Optional)
 * param ref: 规则引用（默认是规则标识）。 (Optional)
 */
func NewUpdateRuleRequestWithAllParams(
    zone_id string,
    ruleset_id string,
    rule_id string,
    enabled *bool,
    description *string,
    expression *string,
    action *string,
    action_parameters *starshield.Action_parameters,
    ratelimit *starshield.Ratelimit,
    logging *starshield.Logging,
    position *starshield.Position,
    id *string,
    version *string,
    last_updated *string,
    ref *string,
) *UpdateRuleRequest {

    return &UpdateRuleRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        Zone_id: zone_id,
        Ruleset_id: ruleset_id,
        Rule_id: rule_id,
        Enabled: enabled,
        Description: description,
        Expression: expression,
        Action: action,
        Action_parameters: action_parameters,
        Ratelimit: ratelimit,
        Logging: logging,
        Position: position,
        Id: id,
        Version: version,
        Last_updated: last_updated,
        Ref: ref,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateRuleRequestWithoutParam() *UpdateRuleRequest {

    return &UpdateRuleRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param zone_id: (Required) */
func (r *UpdateRuleRequest) SetZone_id(zone_id string) {
    r.Zone_id = zone_id
}
/* param ruleset_id: (Required) */
func (r *UpdateRuleRequest) SetRuleset_id(ruleset_id string) {
    r.Ruleset_id = ruleset_id
}
/* param rule_id: (Required) */
func (r *UpdateRuleRequest) SetRule_id(rule_id string) {
    r.Rule_id = rule_id
}
/* param enabled: 是否开启规则，有效值true/false。(Optional) */
func (r *UpdateRuleRequest) SetEnabled(enabled bool) {
    r.Enabled = &enabled
}
/* param description: 规则的描述。(Optional) */
func (r *UpdateRuleRequest) SetDescription(description string) {
    r.Description = &description
}
/* param expression: 表达式。(Optional) */
func (r *UpdateRuleRequest) SetExpression(expression string) {
    r.Expression = &expression
}
/* param action: 当表达式匹配时，采取的措施。有效值block（阻止）/challenge（交互式质询）/js_challenge（JS质询）/managed_challenge（托管质询）/log（记录）/rewrite/skip（跳过）。(Optional) */
func (r *UpdateRuleRequest) SetAction(action string) {
    r.Action = &action
}
/* param action_parameters: (Optional) */
func (r *UpdateRuleRequest) SetAction_parameters(action_parameters *starshield.Action_parameters) {
    r.Action_parameters = action_parameters
}
/* param ratelimit: (Optional) */
func (r *UpdateRuleRequest) SetRatelimit(ratelimit *starshield.Ratelimit) {
    r.Ratelimit = ratelimit
}
/* param logging: (Optional) */
func (r *UpdateRuleRequest) SetLogging(logging *starshield.Logging) {
    r.Logging = logging
}
/* param position: (Optional) */
func (r *UpdateRuleRequest) SetPosition(position *starshield.Position) {
    r.Position = position
}
/* param id: 规则标识。(Optional) */
func (r *UpdateRuleRequest) SetId(id string) {
    r.Id = &id
}
/* param version: 规则版本。(Optional) */
func (r *UpdateRuleRequest) SetVersion(version string) {
    r.Version = &version
}
/* param last_updated: 最近更新时间。(Optional) */
func (r *UpdateRuleRequest) SetLast_updated(last_updated string) {
    r.Last_updated = &last_updated
}
/* param ref: 规则引用（默认是规则标识）。(Optional) */
func (r *UpdateRuleRequest) SetRef(ref string) {
    r.Ref = &ref
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateRuleRequest) GetRegionId() string {
    return ""
}

type UpdateRuleResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateRuleResult `json:"result"`
}

type UpdateRuleResult struct {
    Data starshield.RuleSet `json:"data"`
}