// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    starshield "github.com/lshuining/jdcloud-sdk-go/services/starshield/models"
)

type ListZonesRequest struct {

    core.JDCloudRequest

    /* 是否匹配所有搜索要求或至少一个（任何） (Optional) */
    Match *string `json:"match"`

    /* 域名 (Optional) */
    Name *string `json:"name"`

    /* 帐户名 (Optional) */
    __account__name *string `json:"__account__name"`

    /* 按字段对域进行排序 (Optional) */
    Order *string `json:"order"`

    /* 分页结果的页码 (Optional) */
    Page *int `json:"page"`

    /* 每页的域数 (Optional) */
    Per_page *int `json:"per_page"`

    /* 域的状态 (Optional) */
    Status *string `json:"status"`

    /* 帐户标识符标签 (Optional) */
    __account__id *string `json:"__account__id"`

    /* asc - 升序；desc - 降序 (Optional) */
    Direction *string `json:"direction"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListZonesRequest(
) *ListZonesRequest {

	return &ListZonesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/zones",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param match: 是否匹配所有搜索要求或至少一个（任何） (Optional)
 * param name: 域名 (Optional)
 * param __account__name: 帐户名 (Optional)
 * param order: 按字段对域进行排序 (Optional)
 * param page: 分页结果的页码 (Optional)
 * param per_page: 每页的域数 (Optional)
 * param status: 域的状态 (Optional)
 * param __account__id: 帐户标识符标签 (Optional)
 * param direction: asc - 升序；desc - 降序 (Optional)
 */
func NewListZonesRequestWithAllParams(
    match *string,
    name *string,
    __account__name *string,
    order *string,
    page *int,
    per_page *int,
    status *string,
    __account__id *string,
    direction *string,
) *ListZonesRequest {

    return &ListZonesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Match: match,
        Name: name,
        __account__name: __account__name,
        Order: order,
        Page: page,
        Per_page: per_page,
        Status: status,
        __account__id: __account__id,
        Direction: direction,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListZonesRequestWithoutParam() *ListZonesRequest {

    return &ListZonesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param match: 是否匹配所有搜索要求或至少一个（任何）(Optional) */
func (r *ListZonesRequest) SetMatch(match string) {
    r.Match = &match
}

/* param name: 域名(Optional) */
func (r *ListZonesRequest) SetName(name string) {
    r.Name = &name
}

/* param __account__name: 帐户名(Optional) */
func (r *ListZonesRequest) Set__account__name(__account__name string) {
    r.__account__name = &__account__name
}

/* param order: 按字段对域进行排序(Optional) */
func (r *ListZonesRequest) SetOrder(order string) {
    r.Order = &order
}

/* param page: 分页结果的页码(Optional) */
func (r *ListZonesRequest) SetPage(page int) {
    r.Page = &page
}

/* param per_page: 每页的域数(Optional) */
func (r *ListZonesRequest) SetPer_page(per_page int) {
    r.Per_page = &per_page
}

/* param status: 域的状态(Optional) */
func (r *ListZonesRequest) SetStatus(status string) {
    r.Status = &status
}

/* param __account__id: 帐户标识符标签(Optional) */
func (r *ListZonesRequest) Set__account__id(__account__id string) {
    r.__account__id = &__account__id
}

/* param direction: asc - 升序；desc - 降序(Optional) */
func (r *ListZonesRequest) SetDirection(direction string) {
    r.Direction = &direction
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListZonesRequest) GetRegionId() string {
    return ""
}

type ListZonesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListZonesResult `json:"result"`
}

type ListZonesResult struct {
    DataList []starshield.Zone `json:"dataList"`
}