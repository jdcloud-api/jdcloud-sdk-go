// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    starshield "github.com/lshuining/jdcloud-sdk-go/services/starshield/models"
)

type CreateDNSRecordRequest struct {

    core.JDCloudRequest

    /*   */
    Zone_identifier string `json:"zone_identifier"`

    /* DNS记录类型 (Optional) */
    Ty_pe *string `json:"ty_pe"`

    /* DNS记录名称  */
    Name string `json:"name"`

    /* DNS记录内容  */
    Content string `json:"content"`

    /* DNS记录的生存时间。值为1是 "自动"。  */
    Ttl int `json:"ttl"`

    /* 与一些记录如MX和SRV一起使用，以确定优先级。如果你没有为MX记录提供一个优先级，默认值为0将被设置。 (Optional) */
    Priority *int `json:"priority"`

    /* 是否利用星盾的性能和安全优势 (Optional) */
    Proxied *bool `json:"proxied"`

    /*  (Optional) */
    SrvData *starshield.SRVdata `json:"srvData"`

    /*  (Optional) */
    CaaData *starshield.CAAdata `json:"caaData"`
}

/*
 * param zone_identifier:  (Required)
 * param name: DNS记录名称 (Required)
 * param content: DNS记录内容 (Required)
 * param ttl: DNS记录的生存时间。值为1是 "自动"。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateDNSRecordRequest(
    zone_identifier string,
    name string,
    content string,
    ttl int,
) *CreateDNSRecordRequest {

	return &CreateDNSRecordRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/zones/{zone_identifier}/dns_records",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Zone_identifier: zone_identifier,
        Name: name,
        Content: content,
        Ttl: ttl,
	}
}

/*
 * param zone_identifier:  (Required)
 * param ty_pe: DNS记录类型 (Optional)
 * param name: DNS记录名称 (Required)
 * param content: DNS记录内容 (Required)
 * param ttl: DNS记录的生存时间。值为1是 "自动"。 (Required)
 * param priority: 与一些记录如MX和SRV一起使用，以确定优先级。如果你没有为MX记录提供一个优先级，默认值为0将被设置。 (Optional)
 * param proxied: 是否利用星盾的性能和安全优势 (Optional)
 * param srvData:  (Optional)
 * param caaData:  (Optional)
 */
func NewCreateDNSRecordRequestWithAllParams(
    zone_identifier string,
    ty_pe *string,
    name string,
    content string,
    ttl int,
    priority *int,
    proxied *bool,
    srvData *starshield.SRVdata,
    caaData *starshield.CAAdata,
) *CreateDNSRecordRequest {

    return &CreateDNSRecordRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_identifier}/dns_records",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Zone_identifier: zone_identifier,
        Ty_pe: ty_pe,
        Name: name,
        Content: content,
        Ttl: ttl,
        Priority: priority,
        Proxied: proxied,
        SrvData: srvData,
        CaaData: caaData,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateDNSRecordRequestWithoutParam() *CreateDNSRecordRequest {

    return &CreateDNSRecordRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/zones/{zone_identifier}/dns_records",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param zone_identifier: (Required) */
func (r *CreateDNSRecordRequest) SetZone_identifier(zone_identifier string) {
    r.Zone_identifier = zone_identifier
}

/* param ty_pe: DNS记录类型(Optional) */
func (r *CreateDNSRecordRequest) SetTy_pe(ty_pe string) {
    r.Ty_pe = &ty_pe
}

/* param name: DNS记录名称(Required) */
func (r *CreateDNSRecordRequest) SetName(name string) {
    r.Name = name
}

/* param content: DNS记录内容(Required) */
func (r *CreateDNSRecordRequest) SetContent(content string) {
    r.Content = content
}

/* param ttl: DNS记录的生存时间。值为1是 "自动"。(Required) */
func (r *CreateDNSRecordRequest) SetTtl(ttl int) {
    r.Ttl = ttl
}

/* param priority: 与一些记录如MX和SRV一起使用，以确定优先级。如果你没有为MX记录提供一个优先级，默认值为0将被设置。(Optional) */
func (r *CreateDNSRecordRequest) SetPriority(priority int) {
    r.Priority = &priority
}

/* param proxied: 是否利用星盾的性能和安全优势(Optional) */
func (r *CreateDNSRecordRequest) SetProxied(proxied bool) {
    r.Proxied = &proxied
}

/* param srvData: (Optional) */
func (r *CreateDNSRecordRequest) SetSrvData(srvData *starshield.SRVdata) {
    r.SrvData = srvData
}

/* param caaData: (Optional) */
func (r *CreateDNSRecordRequest) SetCaaData(caaData *starshield.CAAdata) {
    r.CaaData = caaData
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateDNSRecordRequest) GetRegionId() string {
    return ""
}

type CreateDNSRecordResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateDNSRecordResult `json:"result"`
}

type CreateDNSRecordResult struct {
    Data starshield.DnsRecord `json:"data"`
}