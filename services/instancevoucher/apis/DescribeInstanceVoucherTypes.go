// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    instancevoucher "github.com/lshuining/jdcloud-sdk-go/services/instancevoucher/models"
    common "github.com/lshuining/jdcloud-sdk-go/services/common/models"
)

type DescribeInstanceVoucherTypesRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 产品类型 支持[vm, nativecontainer, pod]，默认为vm (Optional) */
    ResourceType *string `json:"resourceType"`

    /* 资源分配方式，支持[nonReserved] (Optional) */
    ReservedType *string `json:"reservedType"`

    /* Filter names: (仅支持eq)
instanceType - 实例规格，精确匹配，支持多个
instanceTypeFamily - 实例规格族，精确匹配，支持多个
az - 可用区，精确匹配，支持多个
 (Optional) */
    Filters []common.Filter `json:"filters"`
}

/*
 * param regionId: 地域ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeInstanceVoucherTypesRequest(
    regionId string,
) *DescribeInstanceVoucherTypesRequest {

	return &DescribeInstanceVoucherTypesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instanceVoucherTypes",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param resourceType: 产品类型 支持[vm, nativecontainer, pod]，默认为vm (Optional)
 * param reservedType: 资源分配方式，支持[nonReserved] (Optional)
 * param filters: Filter names: (仅支持eq)
instanceType - 实例规格，精确匹配，支持多个
instanceTypeFamily - 实例规格族，精确匹配，支持多个
az - 可用区，精确匹配，支持多个
 (Optional)
 */
func NewDescribeInstanceVoucherTypesRequestWithAllParams(
    regionId string,
    resourceType *string,
    reservedType *string,
    filters []common.Filter,
) *DescribeInstanceVoucherTypesRequest {

    return &DescribeInstanceVoucherTypesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instanceVoucherTypes",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ResourceType: resourceType,
        ReservedType: reservedType,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeInstanceVoucherTypesRequestWithoutParam() *DescribeInstanceVoucherTypesRequest {

    return &DescribeInstanceVoucherTypesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instanceVoucherTypes",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeInstanceVoucherTypesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param resourceType: 产品类型 支持[vm, nativecontainer, pod]，默认为vm(Optional) */
func (r *DescribeInstanceVoucherTypesRequest) SetResourceType(resourceType string) {
    r.ResourceType = &resourceType
}

/* param reservedType: 资源分配方式，支持[nonReserved](Optional) */
func (r *DescribeInstanceVoucherTypesRequest) SetReservedType(reservedType string) {
    r.ReservedType = &reservedType
}

/* param filters: Filter names: (仅支持eq)
instanceType - 实例规格，精确匹配，支持多个
instanceTypeFamily - 实例规格族，精确匹配，支持多个
az - 可用区，精确匹配，支持多个
(Optional) */
func (r *DescribeInstanceVoucherTypesRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeInstanceVoucherTypesRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeInstanceVoucherTypesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeInstanceVoucherTypesResult `json:"result"`
}

type DescribeInstanceVoucherTypesResult struct {
    InstanceVoucherTypes []instancevoucher.InstanceVoucherType `json:"instanceVoucherTypes"`
}