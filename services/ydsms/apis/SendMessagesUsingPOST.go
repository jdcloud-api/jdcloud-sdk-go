// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    ydsms "github.com/lshuining/jdcloud-sdk-go/services/ydsms/models"
)

type SendMessagesUsingPOSTRequest struct {

    core.JDCloudRequest

    /* 应用id  */
    AppId string `json:"appId"`

    /* 短信模板变量对应的数据值 (Optional) */
    Params []string `json:"params"`

    /* 群发的国内电话号码,群发时一次最多不要超过100个手机号  */
    PhoneList []string `json:"phoneList"`

    /* 签名id  */
    SignId string `json:"signId"`

    /* 模板id  */
    TemplateId string `json:"templateId"`
}

/*
 * param appId: 应用id (Required)
 * param phoneList: 群发的国内电话号码,群发时一次最多不要超过100个手机号 (Required)
 * param signId: 签名id (Required)
 * param templateId: 模板id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSendMessagesUsingPOSTRequest(
    appId string,
    phoneList []string,
    signId string,
    templateId string,
) *SendMessagesUsingPOSTRequest {

	return &SendMessagesUsingPOSTRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/smsSendMessages",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
        PhoneList: phoneList,
        SignId: signId,
        TemplateId: templateId,
	}
}

/*
 * param appId: 应用id (Required)
 * param params: 短信模板变量对应的数据值 (Optional)
 * param phoneList: 群发的国内电话号码,群发时一次最多不要超过100个手机号 (Required)
 * param signId: 签名id (Required)
 * param templateId: 模板id (Required)
 */
func NewSendMessagesUsingPOSTRequestWithAllParams(
    appId string,
    params []string,
    phoneList []string,
    signId string,
    templateId string,
) *SendMessagesUsingPOSTRequest {

    return &SendMessagesUsingPOSTRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/smsSendMessages",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        Params: params,
        PhoneList: phoneList,
        SignId: signId,
        TemplateId: templateId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSendMessagesUsingPOSTRequestWithoutParam() *SendMessagesUsingPOSTRequest {

    return &SendMessagesUsingPOSTRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/smsSendMessages",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用id(Required) */
func (r *SendMessagesUsingPOSTRequest) SetAppId(appId string) {
    r.AppId = appId
}

/* param params: 短信模板变量对应的数据值(Optional) */
func (r *SendMessagesUsingPOSTRequest) SetParams(params []string) {
    r.Params = params
}

/* param phoneList: 群发的国内电话号码,群发时一次最多不要超过100个手机号(Required) */
func (r *SendMessagesUsingPOSTRequest) SetPhoneList(phoneList []string) {
    r.PhoneList = phoneList
}

/* param signId: 签名id(Required) */
func (r *SendMessagesUsingPOSTRequest) SetSignId(signId string) {
    r.SignId = signId
}

/* param templateId: 模板id(Required) */
func (r *SendMessagesUsingPOSTRequest) SetTemplateId(templateId string) {
    r.TemplateId = templateId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SendMessagesUsingPOSTRequest) GetRegionId() string {
    return ""
}

type SendMessagesUsingPOSTResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SendMessagesUsingPOSTResult `json:"result"`
}

type SendMessagesUsingPOSTResult struct {
    MtResVO ydsms.MtResVO `json:"mtResVO"`
}