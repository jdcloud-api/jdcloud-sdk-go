// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    ydsms "github.com/lshuining/jdcloud-sdk-go/services/ydsms/models"
)

type ListSmsSendOverviewUsingGETRequest struct {

    core.JDCloudRequest

    /* 应用id，传all查询所有应用的数据总和  */
    AppId string `json:"appId"`

    /* 套餐包类型，1普通短信 2官方短信，默认为1 (Optional) */
    PackageType *int `json:"packageType"`

    /* 模板id (Optional) */
    TemplateId *string `json:"templateId"`

    /* 结束时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8"  */
    EndTime string `json:"endTime"`

    /* 开始时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8"  */
    StartTime string `json:"startTime"`
}

/*
 * param appId: 应用id，传all查询所有应用的数据总和 (Required)
 * param endTime: 结束时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8" (Required)
 * param startTime: 开始时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8" (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListSmsSendOverviewUsingGETRequest(
    appId string,
    endTime string,
    startTime string,
) *ListSmsSendOverviewUsingGETRequest {

	return &ListSmsSendOverviewUsingGETRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/smsApps/{appId}:overview",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
        EndTime: endTime,
        StartTime: startTime,
	}
}

/*
 * param appId: 应用id，传all查询所有应用的数据总和 (Required)
 * param packageType: 套餐包类型，1普通短信 2官方短信，默认为1 (Optional)
 * param templateId: 模板id (Optional)
 * param endTime: 结束时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8" (Required)
 * param startTime: 开始时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8" (Required)
 */
func NewListSmsSendOverviewUsingGETRequestWithAllParams(
    appId string,
    packageType *int,
    templateId *string,
    endTime string,
    startTime string,
) *ListSmsSendOverviewUsingGETRequest {

    return &ListSmsSendOverviewUsingGETRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/smsApps/{appId}:overview",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        PackageType: packageType,
        TemplateId: templateId,
        EndTime: endTime,
        StartTime: startTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListSmsSendOverviewUsingGETRequestWithoutParam() *ListSmsSendOverviewUsingGETRequest {

    return &ListSmsSendOverviewUsingGETRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/smsApps/{appId}:overview",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用id，传all查询所有应用的数据总和(Required) */
func (r *ListSmsSendOverviewUsingGETRequest) SetAppId(appId string) {
    r.AppId = appId
}

/* param packageType: 套餐包类型，1普通短信 2官方短信，默认为1(Optional) */
func (r *ListSmsSendOverviewUsingGETRequest) SetPackageType(packageType int) {
    r.PackageType = &packageType
}

/* param templateId: 模板id(Optional) */
func (r *ListSmsSendOverviewUsingGETRequest) SetTemplateId(templateId string) {
    r.TemplateId = &templateId
}

/* param endTime: 结束时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8"(Required) */
func (r *ListSmsSendOverviewUsingGETRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

/* param startTime: 开始时间,pattern ="yyyy-MM-dd HH:mm:ss",timezone="GMT+8"(Required) */
func (r *ListSmsSendOverviewUsingGETRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListSmsSendOverviewUsingGETRequest) GetRegionId() string {
    return ""
}

type ListSmsSendOverviewUsingGETResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListSmsSendOverviewUsingGETResult `json:"result"`
}

type ListSmsSendOverviewUsingGETResult struct {
    Pin string `json:"pin"`
    AppId string `json:"appId"`
    SendOverviewVOList []ydsms.SendOverviewVO `json:"sendOverviewVOList"`
}