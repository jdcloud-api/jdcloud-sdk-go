// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package client

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    ydsms "github.com/lshuining/jdcloud-sdk-go/services/ydsms/apis"
    "encoding/json"
    "errors"
)

type YdsmsClient struct {
    core.JDCloudClient
}

func NewYdsmsClient(credential *core.Credential) *YdsmsClient {
    if credential == nil {
        return nil
    }

    config := core.NewConfig()
    config.SetEndpoint("ydsms.jdcloud-api.com")

    return &YdsmsClient{
        core.JDCloudClient{
            Credential:  *credential,
            Config:      *config,
            ServiceName: "ydsms",
            Revision:    "1.0.8",
            Logger:      core.NewDefaultLogger(core.LogInfo),
        }}
}

func (c *YdsmsClient) SetConfig(config *core.Config) {
    c.Config = *config
}

func (c *YdsmsClient) SetLogger(logger core.Logger) {
    c.Logger = logger
}

func (c *YdsmsClient) DisableLogger() {
    c.Logger = core.NewDummyLogger()
}

/* 查询套餐包列表 */
func (c *YdsmsClient) ListSmsPackagesUsingGET(request *ydsms.ListSmsPackagesUsingGETRequest) (*ydsms.ListSmsPackagesUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsPackagesUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 开通云鼎短信服务 */
func (c *YdsmsClient) OpenServiceUsingPOST(request *ydsms.OpenServiceUsingPOSTRequest) (*ydsms.OpenServiceUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.OpenServiceUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 修改应用启停状态 */
func (c *YdsmsClient) ModifyStatusUsingGET(request *ydsms.ModifyStatusUsingGETRequest) (*ydsms.ModifyStatusUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifyStatusUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 根据加密pin发送短信 */
func (c *YdsmsClient) SendMessagesByEncPinUsingPOST(request *ydsms.SendMessagesByEncPinUsingPOSTRequest) (*ydsms.SendMessagesByEncPinUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.SendMessagesByEncPinUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询应用secretKey */
func (c *YdsmsClient) QuerySecretKeyUsingGET(request *ydsms.QuerySecretKeyUsingGETRequest) (*ydsms.QuerySecretKeyUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QuerySecretKeyUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 根据pin发送短信 */
func (c *YdsmsClient) SendMessagesByPinUsingPOST(request *ydsms.SendMessagesByPinUsingPOSTRequest) (*ydsms.SendMessagesByPinUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.SendMessagesByPinUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询当前自然月内所有应用发送量总和 */
func (c *YdsmsClient) QueryAmountUsingGET(request *ydsms.QueryAmountUsingGETRequest) (*ydsms.QueryAmountUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QueryAmountUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信模板详情 */
func (c *YdsmsClient) GetSmsTemplateByIdUsingGET(request *ydsms.GetSmsTemplateByIdUsingGETRequest) (*ydsms.GetSmsTemplateByIdUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsTemplateByIdUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 创建短信应用 */
func (c *YdsmsClient) CreateSmsAppUsingPOST(request *ydsms.CreateSmsAppUsingPOSTRequest) (*ydsms.CreateSmsAppUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.CreateSmsAppUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 编辑短信签名 */
func (c *YdsmsClient) ModifySmsSignUsingPOST(request *ydsms.ModifySmsSignUsingPOSTRequest) (*ydsms.ModifySmsSignUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifySmsSignUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信发送任务列表 */
func (c *YdsmsClient) ListSmsTasksUsingGET(request *ydsms.ListSmsTasksUsingGETRequest) (*ydsms.ListSmsTasksUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsTasksUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询应用发送短信总体情况 */
func (c *YdsmsClient) ListSmsSendOverviewUsingGET(request *ydsms.ListSmsSendOverviewUsingGETRequest) (*ydsms.ListSmsSendOverviewUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsSendOverviewUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 创建短信模板 */
func (c *YdsmsClient) CreateSmsTemplateUsingPOST(request *ydsms.CreateSmsTemplateUsingPOSTRequest) (*ydsms.CreateSmsTemplateUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.CreateSmsTemplateUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 修改应用通用设置 */
func (c *YdsmsClient) ModifyAppGeneralSettingById(request *ydsms.ModifyAppGeneralSettingByIdRequest) (*ydsms.ModifyAppGeneralSettingByIdResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifyAppGeneralSettingByIdResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信发送记录 */
func (c *YdsmsClient) QuerySendRecordUsingGET(request *ydsms.QuerySendRecordUsingGETRequest) (*ydsms.QuerySendRecordUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QuerySendRecordUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 编辑短信模板 */
func (c *YdsmsClient) ModifySmsTemplateUsingPOST(request *ydsms.ModifySmsTemplateUsingPOSTRequest) (*ydsms.ModifySmsTemplateUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifySmsTemplateUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询套餐包详情 */
func (c *YdsmsClient) GetSmsPackageByIdUsingGET(request *ydsms.GetSmsPackageByIdUsingGETRequest) (*ydsms.GetSmsPackageByIdUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsPackageByIdUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 创建短信签名 */
func (c *YdsmsClient) CreateSmsSignUsingPOST(request *ydsms.CreateSmsSignUsingPOSTRequest) (*ydsms.CreateSmsSignUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.CreateSmsSignUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 编辑短信发送任务 */
func (c *YdsmsClient) ModifySmsTaskUsingPOST(request *ydsms.ModifySmsTaskUsingPOSTRequest) (*ydsms.ModifySmsTaskUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifySmsTaskUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信回执记录 */
func (c *YdsmsClient) QueryReceiptRecordUsingGET(request *ydsms.QueryReceiptRecordUsingGETRequest) (*ydsms.QueryReceiptRecordUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QueryReceiptRecordUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询应用列表 */
func (c *YdsmsClient) ListSmsAppsUsingGET(request *ydsms.ListSmsAppsUsingGETRequest) (*ydsms.ListSmsAppsUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsAppsUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询应用详情 */
func (c *YdsmsClient) GetSmsAppByIdUsingGET(request *ydsms.GetSmsAppByIdUsingGETRequest) (*ydsms.GetSmsAppByIdUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsAppByIdUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信回复记录 */
func (c *YdsmsClient) QueryReplyRecordUsingGET(request *ydsms.QueryReplyRecordUsingGETRequest) (*ydsms.QueryReplyRecordUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QueryReplyRecordUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 编辑短信应用 */
func (c *YdsmsClient) ModifySmsAppUsingPOST(request *ydsms.ModifySmsAppUsingPOSTRequest) (*ydsms.ModifySmsAppUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ModifySmsAppUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询套餐包规格列表 */
func (c *YdsmsClient) GetSmsPackageSpecificationsUsingGET(request *ydsms.GetSmsPackageSpecificationsUsingGETRequest) (*ydsms.GetSmsPackageSpecificationsUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsPackageSpecificationsUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信签名证明材料类型列表 */
func (c *YdsmsClient) ListSmsCertificateTypesUsingGET(request *ydsms.ListSmsCertificateTypesUsingGETRequest) (*ydsms.ListSmsCertificateTypesUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsCertificateTypesUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询应用通用设置列表 */
func (c *YdsmsClient) ListSmsAppGeneralSettingsUsingGET(request *ydsms.ListSmsAppGeneralSettingsUsingGETRequest) (*ydsms.ListSmsAppGeneralSettingsUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsAppGeneralSettingsUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 创建短信发送任务 */
func (c *YdsmsClient) CreateSmsTaskUsingPOST(request *ydsms.CreateSmsTaskUsingPOSTRequest) (*ydsms.CreateSmsTaskUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.CreateSmsTaskUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信发送任务详情 */
func (c *YdsmsClient) GetSmsTaskIdUsingGET(request *ydsms.GetSmsTaskIdUsingGETRequest) (*ydsms.GetSmsTaskIdUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsTaskIdUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取短信任务中的短信内容及计费条数 */
func (c *YdsmsClient) GetSmsTaskContentUsingGET(request *ydsms.GetSmsTaskContentUsingGETRequest) (*ydsms.GetSmsTaskContentUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsTaskContentUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 根据订单号发送短信 */
func (c *YdsmsClient) SendMessagesByOrderIdUsingPOST(request *ydsms.SendMessagesByOrderIdUsingPOSTRequest) (*ydsms.SendMessagesByOrderIdUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.SendMessagesByOrderIdUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 启动任务 */
func (c *YdsmsClient) TaskStartUsingGET(request *ydsms.TaskStartUsingGETRequest) (*ydsms.TaskStartUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.TaskStartUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信签名详情 */
func (c *YdsmsClient) GetSmsSignByIdUsingGET(request *ydsms.GetSmsSignByIdUsingGETRequest) (*ydsms.GetSmsSignByIdUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.GetSmsSignByIdUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信签名列表 */
func (c *YdsmsClient) ListSmsSignsUsingGET(request *ydsms.ListSmsSignsUsingGETRequest) (*ydsms.ListSmsSignsUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsSignsUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信模板列表 */
func (c *YdsmsClient) ListSmsTemplatesUsingGET(request *ydsms.ListSmsTemplatesUsingGETRequest) (*ydsms.ListSmsTemplatesUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsTemplatesUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 批量发送短信 */
func (c *YdsmsClient) SendMessagesUsingPOST(request *ydsms.SendMessagesUsingPOSTRequest) (*ydsms.SendMessagesUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.SendMessagesUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询短信签名类型列表 */
func (c *YdsmsClient) ListSmsSignTypesUsingGET(request *ydsms.ListSmsSignTypesUsingGETRequest) (*ydsms.ListSmsSignTypesUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.ListSmsSignTypesUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 删除任务 */
func (c *YdsmsClient) TaskDeleteUsingDelete(request *ydsms.TaskDeleteUsingDeleteRequest) (*ydsms.TaskDeleteUsingDeleteResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.TaskDeleteUsingDeleteResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 创建套餐包 */
func (c *YdsmsClient) CreateSmsPackageUsingPOST(request *ydsms.CreateSmsPackageUsingPOSTRequest) (*ydsms.CreateSmsPackageUsingPOSTResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.CreateSmsPackageUsingPOSTResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询用户短信余量 */
func (c *YdsmsClient) QueryRemainingUsingGET(request *ydsms.QueryRemainingUsingGETRequest) (*ydsms.QueryRemainingUsingGETResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &ydsms.QueryRemainingUsingGETResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

