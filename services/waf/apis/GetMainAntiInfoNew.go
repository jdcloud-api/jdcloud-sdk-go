// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    waf "github.com/lshuining/jdcloud-sdk-go/services/waf/models"
)

type GetMainAntiInfoNewRequest struct {

    core.JDCloudRequest

    /* 实例所属的地域ID  */
    RegionId string `json:"regionId"`

    /* 请求  */
    Req *waf.GetChartReq `json:"req"`
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param req: 请求 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetMainAntiInfoNewRequest(
    regionId string,
    req *waf.GetChartReq,
) *GetMainAntiInfoNewRequest {

	return &GetMainAntiInfoNewRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/chart:getMainAntiInfoNew",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Req: req,
	}
}

/*
 * param regionId: 实例所属的地域ID (Required)
 * param req: 请求 (Required)
 */
func NewGetMainAntiInfoNewRequestWithAllParams(
    regionId string,
    req *waf.GetChartReq,
) *GetMainAntiInfoNewRequest {

    return &GetMainAntiInfoNewRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/chart:getMainAntiInfoNew",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Req: req,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetMainAntiInfoNewRequestWithoutParam() *GetMainAntiInfoNewRequest {

    return &GetMainAntiInfoNewRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/chart:getMainAntiInfoNew",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 实例所属的地域ID(Required) */
func (r *GetMainAntiInfoNewRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param req: 请求(Required) */
func (r *GetMainAntiInfoNewRequest) SetReq(req *waf.GetChartReq) {
    r.Req = req
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetMainAntiInfoNewRequest) GetRegionId() string {
    return r.RegionId
}

type GetMainAntiInfoNewResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetMainAntiInfoNewResult `json:"result"`
}

type GetMainAntiInfoNewResult struct {
    Ip int `json:"ip"`
    IpPre int `json:"ipPre"`
    Pv int `json:"pv"`
    PvPre int `json:"pvPre"`
    MaxBps int `json:"maxBps"`
    MaxBpsPre int `json:"maxBpsPre"`
    WafAnti int `json:"wafAnti"`
    WafAntiPre int `json:"wafAntiPre"`
    DomainCount int `json:"domainCount"`
    AclAnti int `json:"aclAnti"`
    AclAntiPre int `json:"aclAntiPre"`
    CcAnti int `json:"ccAnti"`
    CcAntiPre int `json:"ccAntiPre"`
    BotAnti int `json:"botAnti"`
    BotAntiPre int `json:"botAntiPre"`
}