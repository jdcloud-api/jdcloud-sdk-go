// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    dms "github.com/lshuining/jdcloud-sdk-go/services/dms/models"
)

type QueryInstanceRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)  */
    RegionId string `json:"regionId"`

    /* 查询分类方式：LOGIN_STATUS，DB_TYPE。 (Optional) */
    InstanceQueryTypeEnum *string `json:"instanceQueryTypeEnum"`

    /* 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)。 (Optional) */
    InstanceStatus *string `json:"instanceStatus"`

    /* 数据库类型：MYSQL_INS，DRDS_INS (Optional) */
    DbInfoEnum *string `json:"dbInfoEnum"`

    /* 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页显示的数据条数，用于查询列表的接口。 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 实例Id。 (Optional) */
    UniqId *string `json:"uniqId"`

    /* 打开数据库名称。 (Optional) */
    DbName *string `json:"dbName"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryInstanceRequest(
    regionId string,
) *QueryInstanceRequest {

	return &QueryInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances:query",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md) (Required)
 * param instanceQueryTypeEnum: 查询分类方式：LOGIN_STATUS，DB_TYPE。 (Optional)
 * param instanceStatus: 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)。 (Optional)
 * param dbInfoEnum: 数据库类型：MYSQL_INS，DRDS_INS (Optional)
 * param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。 (Optional)
 * param pageSize: 每页显示的数据条数，用于查询列表的接口。 (Optional)
 * param uniqId: 实例Id。 (Optional)
 * param dbName: 打开数据库名称。 (Optional)
 */
func NewQueryInstanceRequestWithAllParams(
    regionId string,
    instanceQueryTypeEnum *string,
    instanceStatus *string,
    dbInfoEnum *string,
    pageNumber *int,
    pageSize *int,
    uniqId *string,
    dbName *string,
) *QueryInstanceRequest {

    return &QueryInstanceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceQueryTypeEnum: instanceQueryTypeEnum,
        InstanceStatus: instanceStatus,
        DbInfoEnum: dbInfoEnum,
        PageNumber: pageNumber,
        PageSize: pageSize,
        UniqId: uniqId,
        DbName: dbName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryInstanceRequestWithoutParam() *QueryInstanceRequest {

    return &QueryInstanceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances:query",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](../Enum-Definitions/Regions-AZ.md)(Required) */
func (r *QueryInstanceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceQueryTypeEnum: 查询分类方式：LOGIN_STATUS，DB_TYPE。(Optional) */
func (r *QueryInstanceRequest) SetInstanceQueryTypeEnum(instanceQueryTypeEnum string) {
    r.InstanceQueryTypeEnum = &instanceQueryTypeEnum
}

/* param instanceStatus: 实例状态，参见[枚举参数定义](../Enum-Definitions/Enum-Definitions.md)。(Optional) */
func (r *QueryInstanceRequest) SetInstanceStatus(instanceStatus string) {
    r.InstanceStatus = &instanceStatus
}

/* param dbInfoEnum: 数据库类型：MYSQL_INS，DRDS_INS(Optional) */
func (r *QueryInstanceRequest) SetDbInfoEnum(dbInfoEnum string) {
    r.DbInfoEnum = &dbInfoEnum
}

/* param pageNumber: 显示数据的页码，取值范围：[1,∞)。pageNumber为Null时，返回所有数据页码；超过总页数时，无数据。(Optional) */
func (r *QueryInstanceRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 每页显示的数据条数，用于查询列表的接口。(Optional) */
func (r *QueryInstanceRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param uniqId: 实例Id。(Optional) */
func (r *QueryInstanceRequest) SetUniqId(uniqId string) {
    r.UniqId = &uniqId
}

/* param dbName: 打开数据库名称。(Optional) */
func (r *QueryInstanceRequest) SetDbName(dbName string) {
    r.DbName = &dbName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryInstanceRequest) GetRegionId() string {
    return r.RegionId
}

type QueryInstanceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryInstanceResult `json:"result"`
}

type QueryInstanceResult struct {
    InstanceQueryTypeEnum string `json:"instanceQueryTypeEnum"`
    LoginedInstance []dms.DmsInstance `json:"loginedInstance"`
    UnloginedInstance []dms.DmsInstance `json:"unloginedInstance"`
    NoNeedLoginInstance []dms.DmsInstance `json:"noNeedLoginInstance"`
    RdsIntance []dms.DmsInstance `json:"rdsIntance"`
    DrdsIntance []dms.DmsInstance `json:"drdsIntance"`
}