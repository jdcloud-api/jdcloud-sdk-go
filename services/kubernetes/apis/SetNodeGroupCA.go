// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    kubernetes "github.com/lshuining/jdcloud-sdk-go/services/kubernetes/models"
)

type SetNodeGroupCARequest struct {

    core.JDCloudRequest

    /* 地域 ID  */
    RegionId string `json:"regionId"`

    /* 工作节点组 ID  */
    NodeGroupId string `json:"nodeGroupId"`

    /* 自动伸缩配置，其中 enable 必须指定  */
    CaConfig *kubernetes.CAConfigSpec `json:"caConfig"`
}

/*
 * param regionId: 地域 ID (Required)
 * param nodeGroupId: 工作节点组 ID (Required)
 * param caConfig: 自动伸缩配置，其中 enable 必须指定 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSetNodeGroupCARequest(
    regionId string,
    nodeGroupId string,
    caConfig *kubernetes.CAConfigSpec,
) *SetNodeGroupCARequest {

	return &SetNodeGroupCARequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/nodeGroups/{nodeGroupId}:setNodeGroupCA",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        NodeGroupId: nodeGroupId,
        CaConfig: caConfig,
	}
}

/*
 * param regionId: 地域 ID (Required)
 * param nodeGroupId: 工作节点组 ID (Required)
 * param caConfig: 自动伸缩配置，其中 enable 必须指定 (Required)
 */
func NewSetNodeGroupCARequestWithAllParams(
    regionId string,
    nodeGroupId string,
    caConfig *kubernetes.CAConfigSpec,
) *SetNodeGroupCARequest {

    return &SetNodeGroupCARequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/nodeGroups/{nodeGroupId}:setNodeGroupCA",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        NodeGroupId: nodeGroupId,
        CaConfig: caConfig,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSetNodeGroupCARequestWithoutParam() *SetNodeGroupCARequest {

    return &SetNodeGroupCARequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/nodeGroups/{nodeGroupId}:setNodeGroupCA",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 ID(Required) */
func (r *SetNodeGroupCARequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param nodeGroupId: 工作节点组 ID(Required) */
func (r *SetNodeGroupCARequest) SetNodeGroupId(nodeGroupId string) {
    r.NodeGroupId = nodeGroupId
}

/* param caConfig: 自动伸缩配置，其中 enable 必须指定(Required) */
func (r *SetNodeGroupCARequest) SetCaConfig(caConfig *kubernetes.CAConfigSpec) {
    r.CaConfig = caConfig
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetNodeGroupCARequest) GetRegionId() string {
    return r.RegionId
}

type SetNodeGroupCAResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetNodeGroupCAResult `json:"result"`
}

type SetNodeGroupCAResult struct {
}