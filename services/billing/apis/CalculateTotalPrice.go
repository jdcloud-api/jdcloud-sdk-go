// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    billing "github.com/jdcloud-api/jdcloud-sdk-go/services/billing/models"
)

type CalculateTotalPriceRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 操作类型 1:创建 2:续费 3:升配 4:删除  */
    Cmd int `json:"cmd"`

    /* 计算价格的订单 (Optional) */
    OrderList []billing.OrderPriceProtocol `json:"orderList"`

    /* 操作时间，遵循ISO8601标准，使用UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ (Optional) */
    OperateTime *string `json:"operateTime"`

    /* 1:折扣（不需要传） 2:免费活动3:付费活动 4:推荐码 5:会员价 [{"promotionType":1,"activityCode":123},{"promotionType":2,"activityCode":}] (Optional) */
    PromotionInfo *string `json:"promotionInfo"`

    /* 客户端：1.PC端；2.移动端； (Optional) */
    ClientType *int `json:"clientType"`

    /* 批量购买时数量  */
    PackageCount int `json:"packageCount"`
}

/*
 * param regionId:  (Required)
 * param cmd: 操作类型 1:创建 2:续费 3:升配 4:删除 (Required)
 * param packageCount: 批量购买时数量 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCalculateTotalPriceRequest(
    regionId string,
    cmd int,
    packageCount int,
) *CalculateTotalPriceRequest {

	return &CalculateTotalPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/calculateTotalPrice",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Cmd: cmd,
        PackageCount: packageCount,
	}
}

/*
 * param regionId:  (Required)
 * param cmd: 操作类型 1:创建 2:续费 3:升配 4:删除 (Required)
 * param orderList: 计算价格的订单 (Optional)
 * param operateTime: 操作时间，遵循ISO8601标准，使用UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ (Optional)
 * param promotionInfo: 1:折扣（不需要传） 2:免费活动3:付费活动 4:推荐码 5:会员价 [{"promotionType":1,"activityCode":123},{"promotionType":2,"activityCode":}] (Optional)
 * param clientType: 客户端：1.PC端；2.移动端； (Optional)
 * param packageCount: 批量购买时数量 (Required)
 */
func NewCalculateTotalPriceRequestWithAllParams(
    regionId string,
    cmd int,
    orderList []billing.OrderPriceProtocol,
    operateTime *string,
    promotionInfo *string,
    clientType *int,
    packageCount int,
) *CalculateTotalPriceRequest {

    return &CalculateTotalPriceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/calculateTotalPrice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Cmd: cmd,
        OrderList: orderList,
        OperateTime: operateTime,
        PromotionInfo: promotionInfo,
        ClientType: clientType,
        PackageCount: packageCount,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCalculateTotalPriceRequestWithoutParam() *CalculateTotalPriceRequest {

    return &CalculateTotalPriceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/calculateTotalPrice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *CalculateTotalPriceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param cmd: 操作类型 1:创建 2:续费 3:升配 4:删除(Required) */
func (r *CalculateTotalPriceRequest) SetCmd(cmd int) {
    r.Cmd = cmd
}

/* param orderList: 计算价格的订单(Optional) */
func (r *CalculateTotalPriceRequest) SetOrderList(orderList []billing.OrderPriceProtocol) {
    r.OrderList = orderList
}

/* param operateTime: 操作时间，遵循ISO8601标准，使用UTC时间，格式为：YYYY-MM-DDTHH:mm:ssZ(Optional) */
func (r *CalculateTotalPriceRequest) SetOperateTime(operateTime string) {
    r.OperateTime = &operateTime
}

/* param promotionInfo: 1:折扣（不需要传） 2:免费活动3:付费活动 4:推荐码 5:会员价 [{"promotionType":1,"activityCode":123},{"promotionType":2,"activityCode":}](Optional) */
func (r *CalculateTotalPriceRequest) SetPromotionInfo(promotionInfo string) {
    r.PromotionInfo = &promotionInfo
}

/* param clientType: 客户端：1.PC端；2.移动端；(Optional) */
func (r *CalculateTotalPriceRequest) SetClientType(clientType int) {
    r.ClientType = &clientType
}

/* param packageCount: 批量购买时数量(Required) */
func (r *CalculateTotalPriceRequest) SetPackageCount(packageCount int) {
    r.PackageCount = packageCount
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CalculateTotalPriceRequest) GetRegionId() string {
    return r.RegionId
}

type CalculateTotalPriceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CalculateTotalPriceResult `json:"result"`
}

type CalculateTotalPriceResult struct {
    TotalPrice int `json:"totalPrice"`
    TotalPriceScale4 int `json:"totalPriceScale4"`
    DiscountedTotalPrice int `json:"discountedTotalPrice"`
    TotalDiscount int `json:"totalDiscount"`
    List []billing.OrderPriceDetail `json:"list"`
    TotalOriginalPrice int `json:"totalOriginalPrice"`
    FavorableInfos string `json:"favorableInfos"`
    Remark string `json:"remark"`
    TotalUnitPrice string `json:"totalUnitPrice"`
}