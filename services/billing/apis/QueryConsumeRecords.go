// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    billing "github.com/jdcloud-api/jdcloud-sdk-go/services/billing/models"
)

type QueryConsumeRecordsRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /*   */
    ResourceId string `json:"resourceId"`

    /*  (Optional) */
    QueryType *int `json:"queryType"`

    /*  (Optional) */
    AppCode *string `json:"appCode"`

    /*  (Optional) */
    ServiceCode *string `json:"serviceCode"`

    /*  (Optional) */
    BillingType *int `json:"billingType"`

    /*  (Optional) */
    PayType *int `json:"payType"`

    /*  (Optional) */
    PayState *int `json:"payState"`

    /*  (Optional) */
    TimeType *int `json:"timeType"`

    /*  (Optional) */
    StartTime *string `json:"startTime"`

    /*  (Optional) */
    EndTime *string `json:"endTime"`

    /*  (Optional) */
    IgnoreZero *int `json:"ignoreZero"`

    /*  (Optional) */
    Site *int `json:"site"`

    /*  (Optional) */
    Role *int `json:"role"`

    /*  (Optional) */
    Region *string `json:"region"`
}

/*
 * param regionId:  (Required)
 * param resourceId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewQueryConsumeRecordsRequest(
    regionId string,
    resourceId string,
) *QueryConsumeRecordsRequest {

	return &QueryConsumeRecordsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/resourceBills/{resourceId}",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ResourceId: resourceId,
	}
}

/*
 * param regionId:  (Required)
 * param resourceId:  (Required)
 * param queryType:  (Optional)
 * param appCode:  (Optional)
 * param serviceCode:  (Optional)
 * param billingType:  (Optional)
 * param payType:  (Optional)
 * param payState:  (Optional)
 * param timeType:  (Optional)
 * param startTime:  (Optional)
 * param endTime:  (Optional)
 * param ignoreZero:  (Optional)
 * param site:  (Optional)
 * param role:  (Optional)
 * param region:  (Optional)
 */
func NewQueryConsumeRecordsRequestWithAllParams(
    regionId string,
    resourceId string,
    queryType *int,
    appCode *string,
    serviceCode *string,
    billingType *int,
    payType *int,
    payState *int,
    timeType *int,
    startTime *string,
    endTime *string,
    ignoreZero *int,
    site *int,
    role *int,
    region *string,
) *QueryConsumeRecordsRequest {

    return &QueryConsumeRecordsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/resourceBills/{resourceId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ResourceId: resourceId,
        QueryType: queryType,
        AppCode: appCode,
        ServiceCode: serviceCode,
        BillingType: billingType,
        PayType: payType,
        PayState: payState,
        TimeType: timeType,
        StartTime: startTime,
        EndTime: endTime,
        IgnoreZero: ignoreZero,
        Site: site,
        Role: role,
        Region: region,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewQueryConsumeRecordsRequestWithoutParam() *QueryConsumeRecordsRequest {

    return &QueryConsumeRecordsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/resourceBills/{resourceId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *QueryConsumeRecordsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param resourceId: (Required) */
func (r *QueryConsumeRecordsRequest) SetResourceId(resourceId string) {
    r.ResourceId = resourceId
}

/* param queryType: (Optional) */
func (r *QueryConsumeRecordsRequest) SetQueryType(queryType int) {
    r.QueryType = &queryType
}

/* param appCode: (Optional) */
func (r *QueryConsumeRecordsRequest) SetAppCode(appCode string) {
    r.AppCode = &appCode
}

/* param serviceCode: (Optional) */
func (r *QueryConsumeRecordsRequest) SetServiceCode(serviceCode string) {
    r.ServiceCode = &serviceCode
}

/* param billingType: (Optional) */
func (r *QueryConsumeRecordsRequest) SetBillingType(billingType int) {
    r.BillingType = &billingType
}

/* param payType: (Optional) */
func (r *QueryConsumeRecordsRequest) SetPayType(payType int) {
    r.PayType = &payType
}

/* param payState: (Optional) */
func (r *QueryConsumeRecordsRequest) SetPayState(payState int) {
    r.PayState = &payState
}

/* param timeType: (Optional) */
func (r *QueryConsumeRecordsRequest) SetTimeType(timeType int) {
    r.TimeType = &timeType
}

/* param startTime: (Optional) */
func (r *QueryConsumeRecordsRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: (Optional) */
func (r *QueryConsumeRecordsRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param ignoreZero: (Optional) */
func (r *QueryConsumeRecordsRequest) SetIgnoreZero(ignoreZero int) {
    r.IgnoreZero = &ignoreZero
}

/* param site: (Optional) */
func (r *QueryConsumeRecordsRequest) SetSite(site int) {
    r.Site = &site
}

/* param role: (Optional) */
func (r *QueryConsumeRecordsRequest) SetRole(role int) {
    r.Role = &role
}

/* param region: (Optional) */
func (r *QueryConsumeRecordsRequest) SetRegion(region string) {
    r.Region = &region
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r QueryConsumeRecordsRequest) GetRegionId() string {
    return r.RegionId
}

type QueryConsumeRecordsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result QueryConsumeRecordsResult `json:"result"`
}

type QueryConsumeRecordsResult struct {
    Pagination billing.Pagination `json:"pagination"`
    Result []billing.ConsumeRecord `json:"result"`
}