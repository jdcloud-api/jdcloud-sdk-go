// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    logs "github.com/jdcloud-api/jdcloud-sdk-go/services/logs/models"
)

type DescribeCollectInfoRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 采集配置 UID  */
    CollectInfoUID string `json:"collectInfoUID"`
}

/*
 * param regionId: 地域 Id (Required)
 * param collectInfoUID: 采集配置 UID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeCollectInfoRequest(
    regionId string,
    collectInfoUID string,
) *DescribeCollectInfoRequest {

	return &DescribeCollectInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/collectinfos/{collectInfoUID}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CollectInfoUID: collectInfoUID,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param collectInfoUID: 采集配置 UID (Required)
 */
func NewDescribeCollectInfoRequestWithAllParams(
    regionId string,
    collectInfoUID string,
) *DescribeCollectInfoRequest {

    return &DescribeCollectInfoRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/collectinfos/{collectInfoUID}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CollectInfoUID: collectInfoUID,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeCollectInfoRequestWithoutParam() *DescribeCollectInfoRequest {

    return &DescribeCollectInfoRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/collectinfos/{collectInfoUID}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *DescribeCollectInfoRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param collectInfoUID: 采集配置 UID(Required) */
func (r *DescribeCollectInfoRequest) SetCollectInfoUID(collectInfoUID string) {
    r.CollectInfoUID = collectInfoUID
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeCollectInfoRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeCollectInfoResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeCollectInfoResult `json:"result"`
}

type DescribeCollectInfoResult struct {
    UID string `json:"uID"`
    AgResource []logs.AgResourceEnd `json:"agResource"`
    AppCode string `json:"appCode"`
    BinlogSpec interface{} `json:"binlogSpec"`
    Detail logs.CollectTempalteEnd `json:"detail"`
    Enabled int64 `json:"enabled"`
    HasResource bool `json:"hasResource"`
    K8sSpec interface{} `json:"k8sSpec"`
    LogsetUID string `json:"logsetUID"`
    LogtopicUID string `json:"logtopicUID"`
    Name string `json:"name"`
    ResourceMode int64 `json:"resourceMode"`
    ResourceType string `json:"resourceType"`
    ServiceCode string `json:"serviceCode"`
    TagResource logs.TagResourceEnd `json:"tagResource"`
    TemplateName string `json:"templateName"`
    TemplateUID string `json:"templateUID"`
}