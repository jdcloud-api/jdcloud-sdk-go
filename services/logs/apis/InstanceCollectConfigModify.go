// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    logs "github.com/jdcloud-api/jdcloud-sdk-go/services/logs/models"
)

type InstanceCollectConfigModifyRequest struct {

    core.JDCloudRequest

    /* 租户，必填  */
    Pin string `json:"pin"`

    /* 产品名，必填  */
    Product string `json:"product"`

    /* 实例，必填  */
    Instance string `json:"instance"`

    /* 修改的采集配置信息 (Optional) */
    Configs []logs.InstanceCollectConfigInfo `json:"configs"`
}

/*
 * param pin: 租户，必填 (Required)
 * param product: 产品名，必填 (Required)
 * param instance: 实例，必填 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewInstanceCollectConfigModifyRequest(
    pin string,
    product string,
    instance string,
) *InstanceCollectConfigModifyRequest {

	return &InstanceCollectConfigModifyRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/instanceCollectConfigModify",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Pin: pin,
        Product: product,
        Instance: instance,
	}
}

/*
 * param pin: 租户，必填 (Required)
 * param product: 产品名，必填 (Required)
 * param instance: 实例，必填 (Required)
 * param configs: 修改的采集配置信息 (Optional)
 */
func NewInstanceCollectConfigModifyRequestWithAllParams(
    pin string,
    product string,
    instance string,
    configs []logs.InstanceCollectConfigInfo,
) *InstanceCollectConfigModifyRequest {

    return &InstanceCollectConfigModifyRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/instanceCollectConfigModify",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Pin: pin,
        Product: product,
        Instance: instance,
        Configs: configs,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewInstanceCollectConfigModifyRequestWithoutParam() *InstanceCollectConfigModifyRequest {

    return &InstanceCollectConfigModifyRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/instanceCollectConfigModify",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pin: 租户，必填(Required) */
func (r *InstanceCollectConfigModifyRequest) SetPin(pin string) {
    r.Pin = pin
}
/* param product: 产品名，必填(Required) */
func (r *InstanceCollectConfigModifyRequest) SetProduct(product string) {
    r.Product = product
}
/* param instance: 实例，必填(Required) */
func (r *InstanceCollectConfigModifyRequest) SetInstance(instance string) {
    r.Instance = instance
}
/* param configs: 修改的采集配置信息(Optional) */
func (r *InstanceCollectConfigModifyRequest) SetConfigs(configs []logs.InstanceCollectConfigInfo) {
    r.Configs = configs
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r InstanceCollectConfigModifyRequest) GetRegionId() string {
    return ""
}

type InstanceCollectConfigModifyResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result InstanceCollectConfigModifyResult `json:"result"`
}

type InstanceCollectConfigModifyResult struct {
    Result string `json:"result"`
}