// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    apigateway "github.com/lshuining/jdcloud-sdk-go/services/apigateway/models"
    common "github.com/lshuining/jdcloud-sdk-go/services/common/models"
)

type DescribeApiGroupsRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 页码, 默认为1, 取值范围：[1,∞) (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小，默认为20，取值范围：[10,100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* groupName - 分组名称，模糊匹配，支持单个
description - 描述信息，模糊匹配，支持单个
groupId - 分组ID，精确匹配
domain - 域名，模糊匹配
jdsfId - 微服务网关ID，精确匹配
 (Optional) */
    Filters []common.Filter `json:"filters"`

    /* 标签查询条件 (Optional) */
    TagFilters []common.TagFilter `json:"tagFilters"`
}

/*
 * param regionId: 地域ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeApiGroupsRequest(
    regionId string,
) *DescribeApiGroupsRequest {

	return &DescribeApiGroupsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/apiGroups",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param pageNumber: 页码, 默认为1, 取值范围：[1,∞) (Optional)
 * param pageSize: 分页大小，默认为20，取值范围：[10,100] (Optional)
 * param filters: groupName - 分组名称，模糊匹配，支持单个
description - 描述信息，模糊匹配，支持单个
groupId - 分组ID，精确匹配
domain - 域名，模糊匹配
jdsfId - 微服务网关ID，精确匹配
 (Optional)
 * param tagFilters: 标签查询条件 (Optional)
 */
func NewDescribeApiGroupsRequestWithAllParams(
    regionId string,
    pageNumber *int,
    pageSize *int,
    filters []common.Filter,
    tagFilters []common.TagFilter,
) *DescribeApiGroupsRequest {

    return &DescribeApiGroupsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Filters: filters,
        TagFilters: tagFilters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeApiGroupsRequestWithoutParam() *DescribeApiGroupsRequest {

    return &DescribeApiGroupsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/apiGroups",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeApiGroupsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageNumber: 页码, 默认为1, 取值范围：[1,∞)(Optional) */
func (r *DescribeApiGroupsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小，默认为20，取值范围：[10,100](Optional) */
func (r *DescribeApiGroupsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param filters: groupName - 分组名称，模糊匹配，支持单个
description - 描述信息，模糊匹配，支持单个
groupId - 分组ID，精确匹配
domain - 域名，模糊匹配
jdsfId - 微服务网关ID，精确匹配
(Optional) */
func (r *DescribeApiGroupsRequest) SetFilters(filters []common.Filter) {
    r.Filters = filters
}

/* param tagFilters: 标签查询条件(Optional) */
func (r *DescribeApiGroupsRequest) SetTagFilters(tagFilters []common.TagFilter) {
    r.TagFilters = tagFilters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeApiGroupsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeApiGroupsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeApiGroupsResult `json:"result"`
}

type DescribeApiGroupsResult struct {
    ApiGroups []apigateway.ApiGroup `json:"apiGroups"`
    TotalCount int `json:"totalCount"`
}