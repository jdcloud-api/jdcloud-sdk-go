// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type GetNotificationRequest struct {

    core.JDCloudRequest

    /* region id  */
    RegionId string `json:"regionId"`
}

/*
 * param regionId: region id 
 */
func NewGetNotificationRequest(
    regionId string,
) *GetNotificationRequest {

	return &GetNotificationRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/notification",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

func (r *GetNotificationRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetNotificationRequest) GetRegionId() string {
    return r.RegionId
}

type GetNotificationResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetNotificationResult `json:"result"`
}

type GetNotificationResult struct {
    Enabled bool `json:"enabled"`
    Endpoint string `json:"endpoint"`
    Events []string `json:"events"`
    NotifyStrategy string `json:"notifyStrategy"`
    NotifyContentFormat string `json:"notifyContentFormat"`
}