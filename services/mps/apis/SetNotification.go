// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type SetNotificationRequest struct {

    core.JDCloudRequest

    /* region id  */
    RegionId string `json:"regionId"`

    /* 是否启用通知  */
    Enabled bool `json:"enabled"`

    /* 通知endpoint, 当前支持http://和https:// (Optional) */
    Endpoint *string `json:"endpoint"`

    /* 触发通知的事件集合 (mpsTranscodeComplete, mpsThumbnailComplete) (Optional) */
    Events []string `json:"events"`

    /* 重试策略, BACKOFF_RETRY: 退避重试策略, 重试 3 次, 每次重试的间隔时间是 10秒 到 20秒 之间的随机值; EXPONENTIAL_DECAY_RETRY: 指数衰减重试, 重试 176 次, 每次重试的间隔时间指数递增至 512秒, 总计重试时间为1天; 每次重试的具体间隔为: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 512 ... 512 秒(共167个512) (Optional) */
    NotifyStrategy *string `json:"notifyStrategy"`

    /* 描述了向 Endpoint 推送的消息格式, JSON: 包含消息正文和消息属性, SIMPLIFIED: 消息体即用户发布的消息, 不包含任何属性信息 (Optional) */
    NotifyContentFormat *string `json:"notifyContentFormat"`
}

/*
 * param regionId: region id 
 * param enabled: 是否启用通知 
 * param endpoint: 通知endpoint, 当前支持http://和https:// (Optional)
 * param events: 触发通知的事件集合 (mpsTranscodeComplete, mpsThumbnailComplete) (Optional)
 * param notifyStrategy: 重试策略, BACKOFF_RETRY: 退避重试策略, 重试 3 次, 每次重试的间隔时间是 10秒 到 20秒 之间的随机值; EXPONENTIAL_DECAY_RETRY: 指数衰减重试, 重试 176 次, 每次重试的间隔时间指数递增至 512秒, 总计重试时间为1天; 每次重试的具体间隔为: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 512 ... 512 秒(共167个512) (Optional)
 * param notifyContentFormat: 描述了向 Endpoint 推送的消息格式, JSON: 包含消息正文和消息属性, SIMPLIFIED: 消息体即用户发布的消息, 不包含任何属性信息 (Optional)
 */
func NewSetNotificationRequest(
    regionId string,
    enabled bool,
) *SetNotificationRequest {

	return &SetNotificationRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/notification",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Enabled: enabled,
	}
}

func (r *SetNotificationRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

func (r *SetNotificationRequest) SetEnabled(enabled bool) {
    r.Enabled = enabled
}

func (r *SetNotificationRequest) SetEndpoint(endpoint string) {
    r.Endpoint = &endpoint
}

func (r *SetNotificationRequest) SetEvents(events []string) {
    r.Events = events
}

func (r *SetNotificationRequest) SetNotifyStrategy(notifyStrategy string) {
    r.NotifyStrategy = &notifyStrategy
}

func (r *SetNotificationRequest) SetNotifyContentFormat(notifyContentFormat string) {
    r.NotifyContentFormat = &notifyContentFormat
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SetNotificationRequest) GetRegionId() string {
    return r.RegionId
}

type SetNotificationResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SetNotificationResult `json:"result"`
}

type SetNotificationResult struct {
}