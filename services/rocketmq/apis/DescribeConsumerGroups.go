// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    rocketmq "github.com/jdcloud-api/jdcloud-sdk-go/services/rocketmq/models"
)

type DescribeConsumerGroupsRequest struct {

    core.JDCloudRequest

    /* 区域ID  */
    RegionId string `json:"regionId"`

    /* 实例id  */
    InstanceId string `json:"instanceId"`

    /* consumerGroup的过滤条件 (Optional) */
    ConsumerFilter *string `json:"consumerFilter"`

    /* 分页大小  */
    PageSize int `json:"pageSize"`

    /* 页码  */
    PageNumber int `json:"pageNumber"`
}

/*
 * param regionId: 区域ID (Required)
 * param instanceId: 实例id (Required)
 * param pageSize: 分页大小 (Required)
 * param pageNumber: 页码 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeConsumerGroupsRequest(
    regionId string,
    instanceId string,
    pageSize int,
    pageNumber int,
) *DescribeConsumerGroupsRequest {

	return &DescribeConsumerGroupsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/consumerGroups",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InstanceId: instanceId,
        PageSize: pageSize,
        PageNumber: pageNumber,
	}
}

/*
 * param regionId: 区域ID (Required)
 * param instanceId: 实例id (Required)
 * param consumerFilter: consumerGroup的过滤条件 (Optional)
 * param pageSize: 分页大小 (Required)
 * param pageNumber: 页码 (Required)
 */
func NewDescribeConsumerGroupsRequestWithAllParams(
    regionId string,
    instanceId string,
    consumerFilter *string,
    pageSize int,
    pageNumber int,
) *DescribeConsumerGroupsRequest {

    return &DescribeConsumerGroupsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/consumerGroups",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        ConsumerFilter: consumerFilter,
        PageSize: pageSize,
        PageNumber: pageNumber,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeConsumerGroupsRequestWithoutParam() *DescribeConsumerGroupsRequest {

    return &DescribeConsumerGroupsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/consumerGroups",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域ID(Required) */
func (r *DescribeConsumerGroupsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param instanceId: 实例id(Required) */
func (r *DescribeConsumerGroupsRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}
/* param consumerFilter: consumerGroup的过滤条件(Optional) */
func (r *DescribeConsumerGroupsRequest) SetConsumerFilter(consumerFilter string) {
    r.ConsumerFilter = &consumerFilter
}
/* param pageSize: 分页大小(Required) */
func (r *DescribeConsumerGroupsRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}
/* param pageNumber: 页码(Required) */
func (r *DescribeConsumerGroupsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = pageNumber
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeConsumerGroupsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeConsumerGroupsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeConsumerGroupsResult `json:"result"`
}

type DescribeConsumerGroupsResult struct {
    TotalCount int `json:"totalCount"`
    ConsumerGroupList []rocketmq.ConsumerGroupInfo `json:"consumerGroupList"`
}