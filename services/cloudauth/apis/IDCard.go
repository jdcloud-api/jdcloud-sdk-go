// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type IDCardRequest struct {

    core.JDCloudRequest

    /* 身份证图像base64(支持base64编码后小于4M，分辨率不高于4096x4096的图像)  */
    ImageData string `json:"imageData"`

    /* front：身份证含照片的一面
back：身份证带国徽的一面
自动检测身份证正反面，如果传参指定方向与图片相反，支持正常识别，返回参数image_status字段为"reversed_side"
  */
    Side string `json:"side"`
}

/*
 * param imageData: 身份证图像base64(支持base64编码后小于4M，分辨率不高于4096x4096的图像) (Required)
 * param side: front：身份证含照片的一面
back：身份证带国徽的一面
自动检测身份证正反面，如果传参指定方向与图片相反，支持正常识别，返回参数image_status字段为"reversed_side"
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewIDCardRequest(
    imageData string,
    side string,
) *IDCardRequest {

	return &IDCardRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/ocr:IDCard",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        ImageData: imageData,
        Side: side,
	}
}

/*
 * param imageData: 身份证图像base64(支持base64编码后小于4M，分辨率不高于4096x4096的图像) (Required)
 * param side: front：身份证含照片的一面
back：身份证带国徽的一面
自动检测身份证正反面，如果传参指定方向与图片相反，支持正常识别，返回参数image_status字段为"reversed_side"
 (Required)
 */
func NewIDCardRequestWithAllParams(
    imageData string,
    side string,
) *IDCardRequest {

    return &IDCardRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:IDCard",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        ImageData: imageData,
        Side: side,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewIDCardRequestWithoutParam() *IDCardRequest {

    return &IDCardRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:IDCard",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param imageData: 身份证图像base64(支持base64编码后小于4M，分辨率不高于4096x4096的图像)(Required) */
func (r *IDCardRequest) SetImageData(imageData string) {
    r.ImageData = imageData
}
/* param side: front：身份证含照片的一面
back：身份证带国徽的一面
自动检测身份证正反面，如果传参指定方向与图片相反，支持正常识别，返回参数image_status字段为"reversed_side"
(Required) */
func (r *IDCardRequest) SetSide(side string) {
    r.Side = side
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r IDCardRequest) GetRegionId() string {
    return ""
}

type IDCardResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result IDCardResult `json:"result"`
}

type IDCardResult struct {
    Status string `json:"status"`
    Name string `json:"name"`
    Nation string `json:"nation"`
    Address string `json:"address"`
    IdNumber string `json:"idNumber"`
    Birthday string `json:"birthday"`
    Gender string `json:"gender"`
    Authority string `json:"authority"`
    IssueTime string `json:"issueTime"`
    DueTime string `json:"dueTime"`
    ChargeFlag string `json:"chargeFlag"`
}