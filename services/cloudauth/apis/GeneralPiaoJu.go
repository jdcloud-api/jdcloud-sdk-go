// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    cloudauth "github.com/jdcloud-api/jdcloud-sdk-go/services/cloudauth/models"
)

type GeneralPiaoJuRequest struct {

    core.JDCloudRequest

    /* base64格式图片数据  */
    Image_base64 string `json:"image_base64"`

    /* 是否对增值税发票进行验证，0或不传:不验证，1:验证） (Optional) */
    Do_query *string `json:"do_query"`

    /* 是否切小图0:不切小图(默认)1:切小图 (Optional) */
    Crop_image *string `json:"crop_image"`

    /* 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成 (Optional) */
    Want_image *string `json:"want_image"`
}

/*
 * param image_base64: base64格式图片数据 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGeneralPiaoJuRequest(
    image_base64 string,
) *GeneralPiaoJuRequest {

	return &GeneralPiaoJuRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/ocr:GeneralPiaoJu",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Image_base64: image_base64,
	}
}

/*
 * param image_base64: base64格式图片数据 (Required)
 * param do_query: 是否对增值税发票进行验证，0或不传:不验证，1:验证） (Optional)
 * param crop_image: 是否切小图0:不切小图(默认)1:切小图 (Optional)
 * param want_image: 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成 (Optional)
 */
func NewGeneralPiaoJuRequestWithAllParams(
    image_base64 string,
    do_query *string,
    crop_image *string,
    want_image *string,
) *GeneralPiaoJuRequest {

    return &GeneralPiaoJuRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:GeneralPiaoJu",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Image_base64: image_base64,
        Do_query: do_query,
        Crop_image: crop_image,
        Want_image: want_image,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGeneralPiaoJuRequestWithoutParam() *GeneralPiaoJuRequest {

    return &GeneralPiaoJuRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:GeneralPiaoJu",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param image_base64: base64格式图片数据(Required) */
func (r *GeneralPiaoJuRequest) SetImage_base64(image_base64 string) {
    r.Image_base64 = image_base64
}
/* param do_query: 是否对增值税发票进行验证，0或不传:不验证，1:验证）(Optional) */
func (r *GeneralPiaoJuRequest) SetDo_query(do_query string) {
    r.Do_query = &do_query
}
/* param crop_image: 是否切小图0:不切小图(默认)1:切小图(Optional) */
func (r *GeneralPiaoJuRequest) SetCrop_image(crop_image string) {
    r.Crop_image = &crop_image
}
/* param want_image: 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成(Optional) */
func (r *GeneralPiaoJuRequest) SetWant_image(want_image string) {
    r.Want_image = &want_image
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GeneralPiaoJuRequest) GetRegionId() string {
    return ""
}

type GeneralPiaoJuResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GeneralPiaoJuResult `json:"result"`
}

type GeneralPiaoJuResult struct {
    Error_code int `json:"error_code"`
    Description string `json:"description"`
    Request_id string `json:"request_id"`
    Recognize_time int `json:"recognize_time"`
    Available_count int `json:"available_count"`
    Version string `json:"version"`
    Rotation string `json:"rotation"`
    Result []cloudauth.InvoiceResult `json:"result"`
}