// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type VerifyInvoiceRequest struct {

    core.JDCloudRequest

    /* 发票类型  */
    Invoice_type string `json:"invoice_type"`

    /* 发票号码  */
    Invoice_no string `json:"invoice_no"`

    /* 开票日期  */
    Create_date string `json:"create_date"`

    /* 开具金额（不含税） (Optional) */
    Total *string `json:"total"`

    /* 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成 (Optional) */
    Want_image *string `json:"want_image"`
}

/*
 * param invoice_type: 发票类型 (Required)
 * param invoice_no: 发票号码 (Required)
 * param create_date: 开票日期 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewVerifyInvoiceRequest(
    invoice_type string,
    invoice_no string,
    create_date string,
) *VerifyInvoiceRequest {

	return &VerifyInvoiceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/ocr:VerifyInvoice",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Invoice_type: invoice_type,
        Invoice_no: invoice_no,
        Create_date: create_date,
	}
}

/*
 * param invoice_type: 发票类型 (Required)
 * param invoice_no: 发票号码 (Required)
 * param create_date: 开票日期 (Required)
 * param total: 开具金额（不含税） (Optional)
 * param want_image: 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成 (Optional)
 */
func NewVerifyInvoiceRequestWithAllParams(
    invoice_type string,
    invoice_no string,
    create_date string,
    total *string,
    want_image *string,
) *VerifyInvoiceRequest {

    return &VerifyInvoiceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:VerifyInvoice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        Invoice_type: invoice_type,
        Invoice_no: invoice_no,
        Create_date: create_date,
        Total: total,
        Want_image: want_image,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewVerifyInvoiceRequestWithoutParam() *VerifyInvoiceRequest {

    return &VerifyInvoiceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/ocr:VerifyInvoice",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param invoice_type: 发票类型(Required) */
func (r *VerifyInvoiceRequest) SetInvoice_type(invoice_type string) {
    r.Invoice_type = invoice_type
}
/* param invoice_no: 发票号码(Required) */
func (r *VerifyInvoiceRequest) SetInvoice_no(invoice_no string) {
    r.Invoice_no = invoice_no
}
/* param create_date: 开票日期(Required) */
func (r *VerifyInvoiceRequest) SetCreate_date(create_date string) {
    r.Create_date = create_date
}
/* param total: 开具金额（不含税）(Optional) */
func (r *VerifyInvoiceRequest) SetTotal(total string) {
    r.Total = &total
}
/* param want_image: 是否需要合成验证成功后的发票图片，值为1则返回图片的base64编码，0或不传则不进行图片合成(Optional) */
func (r *VerifyInvoiceRequest) SetWant_image(want_image string) {
    r.Want_image = &want_image
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r VerifyInvoiceRequest) GetRegionId() string {
    return ""
}

type VerifyInvoiceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result VerifyInvoiceResult `json:"result"`
}

type VerifyInvoiceResult struct {
    Error_code int `json:"error_code"`
    Description string `json:"description"`
    Request_id string `json:"request_id"`
    Recognize_time int `json:"recognize_time"`
    Available_count int `json:"available_count"`
    Version string `json:"version"`
    Rotation string `json:"rotation"`
    Result string `json:"result"`
}