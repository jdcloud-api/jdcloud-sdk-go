// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    audittrail "github.com/jdcloud-api/jdcloud-sdk-go/services/audittrail/models"
)

type DescribeRuleEventsRequest struct {

    core.JDCloudRequest

    /*   */
    RegionId string `json:"regionId"`

    /* 0 开启 1 禁用 2删除 (Optional) */
    Status *int `json:"status"`

    /* pageNum 默认1 (Optional) */
    PageNum *int `json:"pageNum"`

    /* pageSize 默认10 (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 * param regionId:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeRuleEventsRequest(
    regionId string,
) *DescribeRuleEventsRequest {

	return &DescribeRuleEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/rule:event",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId:  (Required)
 * param status: 0 开启 1 禁用 2删除 (Optional)
 * param pageNum: pageNum 默认1 (Optional)
 * param pageSize: pageSize 默认10 (Optional)
 */
func NewDescribeRuleEventsRequestWithAllParams(
    regionId string,
    status *int,
    pageNum *int,
    pageSize *int,
) *DescribeRuleEventsRequest {

    return &DescribeRuleEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/rule:event",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Status: status,
        PageNum: pageNum,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeRuleEventsRequestWithoutParam() *DescribeRuleEventsRequest {

    return &DescribeRuleEventsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/rule:event",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: (Required) */
func (r *DescribeRuleEventsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param status: 0 开启 1 禁用 2删除(Optional) */
func (r *DescribeRuleEventsRequest) SetStatus(status int) {
    r.Status = &status
}
/* param pageNum: pageNum 默认1(Optional) */
func (r *DescribeRuleEventsRequest) SetPageNum(pageNum int) {
    r.PageNum = &pageNum
}
/* param pageSize: pageSize 默认10(Optional) */
func (r *DescribeRuleEventsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeRuleEventsRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeRuleEventsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeRuleEventsResult `json:"result"`
}

type DescribeRuleEventsResult struct {
    PageSize int `json:"pageSize"`
    PageNum int `json:"pageNum"`
    TotalNumber int64 `json:"totalNumber"`
    List []audittrail.RuleEvent `json:"list"`
}