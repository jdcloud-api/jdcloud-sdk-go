// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    redis "github.com/lshuining/jdcloud-sdk-go/services/redis/models"
)

type FilteredClientPerfDataRequest struct {

    core.JDCloudRequest

    /* 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2  */
    RegionId string `json:"regionId"`

    /* 缓存Redis实例ID，是访问实例的唯一标识  */
    CacheInstanceId string `json:"cacheInstanceId"`

    /* 客户端ip  */
    Ip string `json:"ip"`

    /* 客户端uuid  */
    Uuid string `json:"uuid"`

    /* tp999  */
    Tp999 int `json:"tp999"`

    /* tp99  */
    Tp99 int `json:"tp99"`

    /* tp90  */
    Tp90 int `json:"tp90"`

    /* tp50  */
    Tp50 int `json:"tp50"`
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识 (Required)
 * param ip: 客户端ip (Required)
 * param uuid: 客户端uuid (Required)
 * param tp999: tp999 (Required)
 * param tp99: tp99 (Required)
 * param tp90: tp90 (Required)
 * param tp50: tp50 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewFilteredClientPerfDataRequest(
    regionId string,
    cacheInstanceId string,
    ip string,
    uuid string,
    tp999 int,
    tp99 int,
    tp90 int,
    tp50 int,
) *FilteredClientPerfDataRequest {

	return &FilteredClientPerfDataRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/filteredClientPerfData",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CacheInstanceId: cacheInstanceId,
        Ip: ip,
        Uuid: uuid,
        Tp999: tp999,
        Tp99: tp99,
        Tp90: tp90,
        Tp50: tp50,
	}
}

/*
 * param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2 (Required)
 * param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识 (Required)
 * param ip: 客户端ip (Required)
 * param uuid: 客户端uuid (Required)
 * param tp999: tp999 (Required)
 * param tp99: tp99 (Required)
 * param tp90: tp90 (Required)
 * param tp50: tp50 (Required)
 */
func NewFilteredClientPerfDataRequestWithAllParams(
    regionId string,
    cacheInstanceId string,
    ip string,
    uuid string,
    tp999 int,
    tp99 int,
    tp90 int,
    tp50 int,
) *FilteredClientPerfDataRequest {

    return &FilteredClientPerfDataRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/filteredClientPerfData",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CacheInstanceId: cacheInstanceId,
        Ip: ip,
        Uuid: uuid,
        Tp999: tp999,
        Tp99: tp99,
        Tp90: tp90,
        Tp50: tp50,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewFilteredClientPerfDataRequestWithoutParam() *FilteredClientPerfDataRequest {

    return &FilteredClientPerfDataRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cacheInstance/{cacheInstanceId}/filteredClientPerfData",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 缓存Redis实例所在区域的Region ID。目前有华北-北京、华南-广州、华东-上海三个区域，Region ID分别为cn-north-1、cn-south-1、cn-east-2(Required) */
func (r *FilteredClientPerfDataRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param cacheInstanceId: 缓存Redis实例ID，是访问实例的唯一标识(Required) */
func (r *FilteredClientPerfDataRequest) SetCacheInstanceId(cacheInstanceId string) {
    r.CacheInstanceId = cacheInstanceId
}

/* param ip: 客户端ip(Required) */
func (r *FilteredClientPerfDataRequest) SetIp(ip string) {
    r.Ip = ip
}

/* param uuid: 客户端uuid(Required) */
func (r *FilteredClientPerfDataRequest) SetUuid(uuid string) {
    r.Uuid = uuid
}

/* param tp999: tp999(Required) */
func (r *FilteredClientPerfDataRequest) SetTp999(tp999 int) {
    r.Tp999 = tp999
}

/* param tp99: tp99(Required) */
func (r *FilteredClientPerfDataRequest) SetTp99(tp99 int) {
    r.Tp99 = tp99
}

/* param tp90: tp90(Required) */
func (r *FilteredClientPerfDataRequest) SetTp90(tp90 int) {
    r.Tp90 = tp90
}

/* param tp50: tp50(Required) */
func (r *FilteredClientPerfDataRequest) SetTp50(tp50 int) {
    r.Tp50 = tp50
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r FilteredClientPerfDataRequest) GetRegionId() string {
    return r.RegionId
}

type FilteredClientPerfDataResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result FilteredClientPerfDataResult `json:"result"`
}

type FilteredClientPerfDataResult struct {
    PerformanceData []redis.PerformanceDataMsg `json:"performanceData"`
}