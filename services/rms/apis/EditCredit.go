// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    rms "github.com/lshuining/jdcloud-sdk-go/services/rms/models"
)

type EditCreditRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 资质ID  */
    SignId string `json:"signId"`

    /* 应用ID  */
    AppId string `json:"appId"`

    /* 资质名称  */
    Name string `json:"name"`

    /* 资质描述  */
    Description string `json:"description"`

    /* 营业执照图片,必须是jpg图片的base64编码，只支持jpg图片  */
    BusinessLicense string `json:"businessLicense"`

    /* 营业执照名称  */
    BusinessLicenseName string `json:"businessLicenseName"`

    /* 签名授权书图片,必须是jpg图片的base64编码，只支持jpg图片  */
    SignedAuthorization string `json:"signedAuthorization"`

    /* 签名授权书名称  */
    SignedAuthorizationName string `json:"signedAuthorizationName"`

    /* 信息安全保障责任书图片,必须是jpg图片的base64编码，只支持jpg图片  */
    InformationSecurity string `json:"informationSecurity"`

    /* 信息安全保障责任书名称  */
    InformationSecurityName string `json:"informationSecurityName"`

    /* 会员证明图片,必须是jpg图片的base64编码，只支持jpg图片  */
    MembershipCertificate string `json:"membershipCertificate"`

    /* 会员证明名称  */
    MembershipCertificateName string `json:"membershipCertificateName"`

    /* 其他证明图片,必须是jpg图片的base64编码，只支持jpg图片  */
    OtherCertificate string `json:"otherCertificate"`

    /* 其他证明名称  */
    OtherCertificateName string `json:"otherCertificateName"`
}

/*
 * param regionId: Region ID (Required)
 * param signId: 资质ID (Required)
 * param appId: 应用ID (Required)
 * param name: 资质名称 (Required)
 * param description: 资质描述 (Required)
 * param businessLicense: 营业执照图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param businessLicenseName: 营业执照名称 (Required)
 * param signedAuthorization: 签名授权书图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param signedAuthorizationName: 签名授权书名称 (Required)
 * param informationSecurity: 信息安全保障责任书图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param informationSecurityName: 信息安全保障责任书名称 (Required)
 * param membershipCertificate: 会员证明图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param membershipCertificateName: 会员证明名称 (Required)
 * param otherCertificate: 其他证明图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param otherCertificateName: 其他证明名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewEditCreditRequest(
    regionId string,
    signId string,
    appId string,
    name string,
    description string,
    businessLicense string,
    businessLicenseName string,
    signedAuthorization string,
    signedAuthorizationName string,
    informationSecurity string,
    informationSecurityName string,
    membershipCertificate string,
    membershipCertificateName string,
    otherCertificate string,
    otherCertificateName string,
) *EditCreditRequest {

	return &EditCreditRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/editCredit",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        SignId: signId,
        AppId: appId,
        Name: name,
        Description: description,
        BusinessLicense: businessLicense,
        BusinessLicenseName: businessLicenseName,
        SignedAuthorization: signedAuthorization,
        SignedAuthorizationName: signedAuthorizationName,
        InformationSecurity: informationSecurity,
        InformationSecurityName: informationSecurityName,
        MembershipCertificate: membershipCertificate,
        MembershipCertificateName: membershipCertificateName,
        OtherCertificate: otherCertificate,
        OtherCertificateName: otherCertificateName,
	}
}

/*
 * param regionId: Region ID (Required)
 * param signId: 资质ID (Required)
 * param appId: 应用ID (Required)
 * param name: 资质名称 (Required)
 * param description: 资质描述 (Required)
 * param businessLicense: 营业执照图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param businessLicenseName: 营业执照名称 (Required)
 * param signedAuthorization: 签名授权书图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param signedAuthorizationName: 签名授权书名称 (Required)
 * param informationSecurity: 信息安全保障责任书图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param informationSecurityName: 信息安全保障责任书名称 (Required)
 * param membershipCertificate: 会员证明图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param membershipCertificateName: 会员证明名称 (Required)
 * param otherCertificate: 其他证明图片,必须是jpg图片的base64编码，只支持jpg图片 (Required)
 * param otherCertificateName: 其他证明名称 (Required)
 */
func NewEditCreditRequestWithAllParams(
    regionId string,
    signId string,
    appId string,
    name string,
    description string,
    businessLicense string,
    businessLicenseName string,
    signedAuthorization string,
    signedAuthorizationName string,
    informationSecurity string,
    informationSecurityName string,
    membershipCertificate string,
    membershipCertificateName string,
    otherCertificate string,
    otherCertificateName string,
) *EditCreditRequest {

    return &EditCreditRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/editCredit",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        SignId: signId,
        AppId: appId,
        Name: name,
        Description: description,
        BusinessLicense: businessLicense,
        BusinessLicenseName: businessLicenseName,
        SignedAuthorization: signedAuthorization,
        SignedAuthorizationName: signedAuthorizationName,
        InformationSecurity: informationSecurity,
        InformationSecurityName: informationSecurityName,
        MembershipCertificate: membershipCertificate,
        MembershipCertificateName: membershipCertificateName,
        OtherCertificate: otherCertificate,
        OtherCertificateName: otherCertificateName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewEditCreditRequestWithoutParam() *EditCreditRequest {

    return &EditCreditRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/editCredit",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *EditCreditRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param signId: 资质ID(Required) */
func (r *EditCreditRequest) SetSignId(signId string) {
    r.SignId = signId
}

/* param appId: 应用ID(Required) */
func (r *EditCreditRequest) SetAppId(appId string) {
    r.AppId = appId
}

/* param name: 资质名称(Required) */
func (r *EditCreditRequest) SetName(name string) {
    r.Name = name
}

/* param description: 资质描述(Required) */
func (r *EditCreditRequest) SetDescription(description string) {
    r.Description = description
}

/* param businessLicense: 营业执照图片,必须是jpg图片的base64编码，只支持jpg图片(Required) */
func (r *EditCreditRequest) SetBusinessLicense(businessLicense string) {
    r.BusinessLicense = businessLicense
}

/* param businessLicenseName: 营业执照名称(Required) */
func (r *EditCreditRequest) SetBusinessLicenseName(businessLicenseName string) {
    r.BusinessLicenseName = businessLicenseName
}

/* param signedAuthorization: 签名授权书图片,必须是jpg图片的base64编码，只支持jpg图片(Required) */
func (r *EditCreditRequest) SetSignedAuthorization(signedAuthorization string) {
    r.SignedAuthorization = signedAuthorization
}

/* param signedAuthorizationName: 签名授权书名称(Required) */
func (r *EditCreditRequest) SetSignedAuthorizationName(signedAuthorizationName string) {
    r.SignedAuthorizationName = signedAuthorizationName
}

/* param informationSecurity: 信息安全保障责任书图片,必须是jpg图片的base64编码，只支持jpg图片(Required) */
func (r *EditCreditRequest) SetInformationSecurity(informationSecurity string) {
    r.InformationSecurity = informationSecurity
}

/* param informationSecurityName: 信息安全保障责任书名称(Required) */
func (r *EditCreditRequest) SetInformationSecurityName(informationSecurityName string) {
    r.InformationSecurityName = informationSecurityName
}

/* param membershipCertificate: 会员证明图片,必须是jpg图片的base64编码，只支持jpg图片(Required) */
func (r *EditCreditRequest) SetMembershipCertificate(membershipCertificate string) {
    r.MembershipCertificate = membershipCertificate
}

/* param membershipCertificateName: 会员证明名称(Required) */
func (r *EditCreditRequest) SetMembershipCertificateName(membershipCertificateName string) {
    r.MembershipCertificateName = membershipCertificateName
}

/* param otherCertificate: 其他证明图片,必须是jpg图片的base64编码，只支持jpg图片(Required) */
func (r *EditCreditRequest) SetOtherCertificate(otherCertificate string) {
    r.OtherCertificate = otherCertificate
}

/* param otherCertificateName: 其他证明名称(Required) */
func (r *EditCreditRequest) SetOtherCertificateName(otherCertificateName string) {
    r.OtherCertificateName = otherCertificateName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r EditCreditRequest) GetRegionId() string {
    return r.RegionId
}

type EditCreditResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result EditCreditResult `json:"result"`
}

type EditCreditResult struct {
    Data rms.RespCreditData `json:"data"`
    Status bool `json:"status"`
    Code string `json:"code"`
    Message string `json:"message"`
}