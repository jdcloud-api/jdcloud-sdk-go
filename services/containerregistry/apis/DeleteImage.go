// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DeleteImageRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* 注册表名称  */
    RegistryName string `json:"registryName"`

    /* 镜像仓库表名称  */
    RepositoryName string `json:"repositoryName"`

    /* sha256哈希，image manifest的digest. (Optional) */
    ImageDigest *string `json:"imageDigest"`

    /* image使用的tag (Optional) */
    ImageTag *string `json:"imageTag"`

    /* 枚举中的一个值，如 tagged 和 untagged. (Optional) */
    ImageTagStatus *string `json:"imageTagStatus"`
}

/*
 * param regionId: Region ID (Required)
 * param registryName: 注册表名称 (Required)
 * param repositoryName: 镜像仓库表名称 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDeleteImageRequest(
    regionId string,
    registryName string,
    repositoryName string,
) *DeleteImageRequest {

	return &DeleteImageRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/registries/{registryName}/repositories/{repositoryName}:deleteImage",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        RegistryName: registryName,
        RepositoryName: repositoryName,
	}
}

/*
 * param regionId: Region ID (Required)
 * param registryName: 注册表名称 (Required)
 * param repositoryName: 镜像仓库表名称 (Required)
 * param imageDigest: sha256哈希，image manifest的digest. (Optional)
 * param imageTag: image使用的tag (Optional)
 * param imageTagStatus: 枚举中的一个值，如 tagged 和 untagged. (Optional)
 */
func NewDeleteImageRequestWithAllParams(
    regionId string,
    registryName string,
    repositoryName string,
    imageDigest *string,
    imageTag *string,
    imageTagStatus *string,
) *DeleteImageRequest {

    return &DeleteImageRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/registries/{registryName}/repositories/{repositoryName}:deleteImage",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        RegistryName: registryName,
        RepositoryName: repositoryName,
        ImageDigest: imageDigest,
        ImageTag: imageTag,
        ImageTagStatus: imageTagStatus,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDeleteImageRequestWithoutParam() *DeleteImageRequest {

    return &DeleteImageRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/registries/{registryName}/repositories/{repositoryName}:deleteImage",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *DeleteImageRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param registryName: 注册表名称(Required) */
func (r *DeleteImageRequest) SetRegistryName(registryName string) {
    r.RegistryName = registryName
}

/* param repositoryName: 镜像仓库表名称(Required) */
func (r *DeleteImageRequest) SetRepositoryName(repositoryName string) {
    r.RepositoryName = repositoryName
}

/* param imageDigest: sha256哈希，image manifest的digest.(Optional) */
func (r *DeleteImageRequest) SetImageDigest(imageDigest string) {
    r.ImageDigest = &imageDigest
}

/* param imageTag: image使用的tag(Optional) */
func (r *DeleteImageRequest) SetImageTag(imageTag string) {
    r.ImageTag = &imageTag
}

/* param imageTagStatus: 枚举中的一个值，如 tagged 和 untagged.(Optional) */
func (r *DeleteImageRequest) SetImageTagStatus(imageTagStatus string) {
    r.ImageTagStatus = &imageTagStatus
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DeleteImageRequest) GetRegionId() string {
    return r.RegionId
}

type DeleteImageResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DeleteImageResult `json:"result"`
}

type DeleteImageResult struct {
}