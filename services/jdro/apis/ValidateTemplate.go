// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    jdro "github.com/jdcloud-api/jdcloud-sdk-go/services/jdro/models"
)

type ValidateTemplateRequest struct {

    core.JDCloudRequest

    /* 地域 ID  */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    Environment *jdro.Environment `json:"environment"`

    /* 模板  */
    Template interface{} `json:"template"`

    /* 可取值:(validateTemplate (检测模板), validateStack (检测模板和environment)) 默认validateTemplate (Optional) */
    ValidateMode *string `json:"validateMode"`
}

/*
 * param regionId: 地域 ID (Required)
 * param template: 模板 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewValidateTemplateRequest(
    regionId string,
    template interface{},
) *ValidateTemplateRequest {

	return &ValidateTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/templateValidate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Template: template,
	}
}

/*
 * param regionId: 地域 ID (Required)
 * param environment:  (Optional)
 * param template: 模板 (Required)
 * param validateMode: 可取值:(validateTemplate (检测模板), validateStack (检测模板和environment)) 默认validateTemplate (Optional)
 */
func NewValidateTemplateRequestWithAllParams(
    regionId string,
    environment *jdro.Environment,
    template interface{},
    validateMode *string,
) *ValidateTemplateRequest {

    return &ValidateTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/templateValidate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Environment: environment,
        Template: template,
        ValidateMode: validateMode,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewValidateTemplateRequestWithoutParam() *ValidateTemplateRequest {

    return &ValidateTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/templateValidate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 ID(Required) */
func (r *ValidateTemplateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param environment: (Optional) */
func (r *ValidateTemplateRequest) SetEnvironment(environment *jdro.Environment) {
    r.Environment = environment
}

/* param template: 模板(Required) */
func (r *ValidateTemplateRequest) SetTemplate(template interface{}) {
    r.Template = template
}

/* param validateMode: 可取值:(validateTemplate (检测模板), validateStack (检测模板和environment)) 默认validateTemplate(Optional) */
func (r *ValidateTemplateRequest) SetValidateMode(validateMode string) {
    r.ValidateMode = &validateMode
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ValidateTemplateRequest) GetRegionId() string {
    return r.RegionId
}

type ValidateTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ValidateTemplateResult `json:"result"`
}

type ValidateTemplateResult struct {
    Describe string `json:"describe"`
    Result interface{} `json:"result"`
}