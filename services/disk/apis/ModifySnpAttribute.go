// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    "reflect"
)

type ModifySnpAttributeRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 快照ID  */
    SnapshotId string `json:"snapshotId"`

    /* 快照名称 (Optional) */
    Name *string `json:"name"`

    /* 快照描述，name和description必须要指定一个 (Optional) */
    Description *string `json:"description"`
}

/*
 * param regionId: 地域ID 
 * param snapshotId: 快照ID 
 * param name: 快照名称 (Optional)
 * param description: 快照描述，name和description必须要指定一个 (Optional)
 */
func NewModifySnpAttributeRequest(
    regionId string,
    snapshotId string,
) *ModifySnpAttributeRequest {

	return &ModifySnpAttributeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/snapshots/{snapshotId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        SnapshotId: snapshotId,
	}
}

func (r *ModifySnpAttributeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

func (r *ModifySnpAttributeRequest) SetSnapshotId(snapshotId string) {
    r.SnapshotId = snapshotId
}

func (r *ModifySnpAttributeRequest) SetName(name string) {
    r.Name = &name
}

func (r *ModifySnpAttributeRequest) SetDescription(description string) {
    r.Description = &description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifySnpAttributeRequest) GetRegionId() string {
    fieldName := "RegionId"
    reqType := reflect.TypeOf(r)
    value := reflect.ValueOf(r)
    _, ok := reqType.FieldByName(fieldName)
    if ok {
        return value.FieldByName(fieldName).String()
    }

    return ""
}

type ModifySnpAttributeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifySnpAttributeResult `json:"result"`
}

type ModifySnpAttributeResult struct {
}