// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    ssl "github.com/lshuining/jdcloud-sdk-go/services/ssl/models"
)

type DescribeCertsRequest struct {

    core.JDCloudRequest

    /* 第几页，从1开始计数 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 每页显示的数目 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 域名，支持按照域名检索证书 (Optional) */
    DomainName *string `json:"domainName"`

    /* 证书id/别名 (Optional) */
    CertIds *string `json:"certIds"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeCertsRequest(
) *DescribeCertsRequest {

	return &DescribeCertsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/sslCert",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param pageNumber: 第几页，从1开始计数 (Optional)
 * param pageSize: 每页显示的数目 (Optional)
 * param domainName: 域名，支持按照域名检索证书 (Optional)
 * param certIds: 证书id/别名 (Optional)
 */
func NewDescribeCertsRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    domainName *string,
    certIds *string,
) *DescribeCertsRequest {

    return &DescribeCertsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/sslCert",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        DomainName: domainName,
        CertIds: certIds,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeCertsRequestWithoutParam() *DescribeCertsRequest {

    return &DescribeCertsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/sslCert",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param pageNumber: 第几页，从1开始计数(Optional) */
func (r *DescribeCertsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 每页显示的数目(Optional) */
func (r *DescribeCertsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param domainName: 域名，支持按照域名检索证书(Optional) */
func (r *DescribeCertsRequest) SetDomainName(domainName string) {
    r.DomainName = &domainName
}

/* param certIds: 证书id/别名(Optional) */
func (r *DescribeCertsRequest) SetCertIds(certIds string) {
    r.CertIds = &certIds
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeCertsRequest) GetRegionId() string {
    return ""
}

type DescribeCertsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeCertsResult `json:"result"`
}

type DescribeCertsResult struct {
    CertListDetails []ssl.CertListDetail `json:"certListDetails"`
    TotalCount int `json:"totalCount"`
}