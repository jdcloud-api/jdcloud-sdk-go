// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    dcap "github.com/lshuining/jdcloud-sdk-go/services/dcap/models"
)

type ModifyLevelRequest struct {

    core.JDCloudRequest

    /* 分级 ID  */
    LevelId int `json:"levelId"`

    /* 敏感数据分级描述  */
    LevelSpec *dcap.LevelSpec `json:"levelSpec"`
}

/*
 * param levelId: 分级 ID (Required)
 * param levelSpec: 敏感数据分级描述 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyLevelRequest(
    levelId int,
    levelSpec *dcap.LevelSpec,
) *ModifyLevelRequest {

	return &ModifyLevelRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/level/{levelId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        LevelId: levelId,
        LevelSpec: levelSpec,
	}
}

/*
 * param levelId: 分级 ID (Required)
 * param levelSpec: 敏感数据分级描述 (Required)
 */
func NewModifyLevelRequestWithAllParams(
    levelId int,
    levelSpec *dcap.LevelSpec,
) *ModifyLevelRequest {

    return &ModifyLevelRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/level/{levelId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        LevelId: levelId,
        LevelSpec: levelSpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyLevelRequestWithoutParam() *ModifyLevelRequest {

    return &ModifyLevelRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/level/{levelId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param levelId: 分级 ID(Required) */
func (r *ModifyLevelRequest) SetLevelId(levelId int) {
    r.LevelId = levelId
}

/* param levelSpec: 敏感数据分级描述(Required) */
func (r *ModifyLevelRequest) SetLevelSpec(levelSpec *dcap.LevelSpec) {
    r.LevelSpec = levelSpec
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyLevelRequest) GetRegionId() string {
    return ""
}

type ModifyLevelResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyLevelResult `json:"result"`
}

type ModifyLevelResult struct {
}