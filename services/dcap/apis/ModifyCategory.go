// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    dcap "github.com/lshuining/jdcloud-sdk-go/services/dcap/models"
)

type ModifyCategoryRequest struct {

    core.JDCloudRequest

    /* 分类 ID  */
    CategoryId int `json:"categoryId"`

    /* 敏感数据分类描述  */
    CategorySpec *dcap.CategorySpec `json:"categorySpec"`
}

/*
 * param categoryId: 分类 ID (Required)
 * param categorySpec: 敏感数据分类描述 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyCategoryRequest(
    categoryId int,
    categorySpec *dcap.CategorySpec,
) *ModifyCategoryRequest {

	return &ModifyCategoryRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/category/{categoryId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        CategoryId: categoryId,
        CategorySpec: categorySpec,
	}
}

/*
 * param categoryId: 分类 ID (Required)
 * param categorySpec: 敏感数据分类描述 (Required)
 */
func NewModifyCategoryRequestWithAllParams(
    categoryId int,
    categorySpec *dcap.CategorySpec,
) *ModifyCategoryRequest {

    return &ModifyCategoryRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/category/{categoryId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        CategoryId: categoryId,
        CategorySpec: categorySpec,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyCategoryRequestWithoutParam() *ModifyCategoryRequest {

    return &ModifyCategoryRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/category/{categoryId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param categoryId: 分类 ID(Required) */
func (r *ModifyCategoryRequest) SetCategoryId(categoryId int) {
    r.CategoryId = categoryId
}

/* param categorySpec: 敏感数据分类描述(Required) */
func (r *ModifyCategoryRequest) SetCategorySpec(categorySpec *dcap.CategorySpec) {
    r.CategorySpec = categorySpec
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyCategoryRequest) GetRegionId() string {
    return ""
}

type ModifyCategoryResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyCategoryResult `json:"result"`
}

type ModifyCategoryResult struct {
}