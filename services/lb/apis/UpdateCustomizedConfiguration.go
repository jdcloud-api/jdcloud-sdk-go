// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    lb "github.com/jdcloud-api/jdcloud-sdk-go/services/lb/models"
)

type UpdateCustomizedConfigurationRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* Customized Configuration Id  */
    CustomizedConfigurationId string `json:"customizedConfigurationId"`

    /* 个性化配置名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符 (Optional) */
    CustomizedConfigurationName *string `json:"customizedConfigurationName"`

    /* 描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional) */
    Description *string `json:"description"`

    /* 个性化配置内容 (Optional) */
    CustomizedConfigurationContent *lb.CustomizedConfigurationContentSpec `json:"customizedConfigurationContent"`
}

/*
 * param regionId: Region ID (Required)
 * param customizedConfigurationId: Customized Configuration Id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateCustomizedConfigurationRequest(
    regionId string,
    customizedConfigurationId string,
) *UpdateCustomizedConfigurationRequest {

	return &UpdateCustomizedConfigurationRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/customizedConfigurations/{customizedConfigurationId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CustomizedConfigurationId: customizedConfigurationId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param customizedConfigurationId: Customized Configuration Id (Required)
 * param customizedConfigurationName: 个性化配置名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符 (Optional)
 * param description: 描述,允许输入UTF-8编码下的全部字符，不超过256字符 (Optional)
 * param customizedConfigurationContent: 个性化配置内容 (Optional)
 */
func NewUpdateCustomizedConfigurationRequestWithAllParams(
    regionId string,
    customizedConfigurationId string,
    customizedConfigurationName *string,
    description *string,
    customizedConfigurationContent *lb.CustomizedConfigurationContentSpec,
) *UpdateCustomizedConfigurationRequest {

    return &UpdateCustomizedConfigurationRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/customizedConfigurations/{customizedConfigurationId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CustomizedConfigurationId: customizedConfigurationId,
        CustomizedConfigurationName: customizedConfigurationName,
        Description: description,
        CustomizedConfigurationContent: customizedConfigurationContent,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateCustomizedConfigurationRequestWithoutParam() *UpdateCustomizedConfigurationRequest {

    return &UpdateCustomizedConfigurationRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/customizedConfigurations/{customizedConfigurationId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *UpdateCustomizedConfigurationRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param customizedConfigurationId: Customized Configuration Id(Required) */
func (r *UpdateCustomizedConfigurationRequest) SetCustomizedConfigurationId(customizedConfigurationId string) {
    r.CustomizedConfigurationId = customizedConfigurationId
}
/* param customizedConfigurationName: 个性化配置名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”，不允许为空且不超过32字符(Optional) */
func (r *UpdateCustomizedConfigurationRequest) SetCustomizedConfigurationName(customizedConfigurationName string) {
    r.CustomizedConfigurationName = &customizedConfigurationName
}
/* param description: 描述,允许输入UTF-8编码下的全部字符，不超过256字符(Optional) */
func (r *UpdateCustomizedConfigurationRequest) SetDescription(description string) {
    r.Description = &description
}
/* param customizedConfigurationContent: 个性化配置内容(Optional) */
func (r *UpdateCustomizedConfigurationRequest) SetCustomizedConfigurationContent(customizedConfigurationContent *lb.CustomizedConfigurationContentSpec) {
    r.CustomizedConfigurationContent = customizedConfigurationContent
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateCustomizedConfigurationRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateCustomizedConfigurationResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateCustomizedConfigurationResult `json:"result"`
}

type UpdateCustomizedConfigurationResult struct {
}