// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DisassociateElasticIpRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* LB ID  */
    LoadBalancerId string `json:"loadBalancerId"`

    /* 弹性公网IP ID  */
    ElasticIpId string `json:"elasticIpId"`

    /* 解绑时是否同时删除弹性公网IP，取值范围：true、false，默认false。true表示解绑弹性公网IP时删除该弹性公网IP；false表示解绑弹性公网IP时不删除该弹性公网IP。包年包月和无计费信息的弹性公网IP不支持解绑时删除 (Optional) */
    DeleteElasticIp *bool `json:"deleteElasticIp"`
}

/*
 * param regionId: Region ID (Required)
 * param loadBalancerId: LB ID (Required)
 * param elasticIpId: 弹性公网IP ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDisassociateElasticIpRequest(
    regionId string,
    loadBalancerId string,
    elasticIpId string,
) *DisassociateElasticIpRequest {

	return &DisassociateElasticIpRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/loadBalancers/{loadBalancerId}:disassociateElasticIp",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        LoadBalancerId: loadBalancerId,
        ElasticIpId: elasticIpId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param loadBalancerId: LB ID (Required)
 * param elasticIpId: 弹性公网IP ID (Required)
 * param deleteElasticIp: 解绑时是否同时删除弹性公网IP，取值范围：true、false，默认false。true表示解绑弹性公网IP时删除该弹性公网IP；false表示解绑弹性公网IP时不删除该弹性公网IP。包年包月和无计费信息的弹性公网IP不支持解绑时删除 (Optional)
 */
func NewDisassociateElasticIpRequestWithAllParams(
    regionId string,
    loadBalancerId string,
    elasticIpId string,
    deleteElasticIp *bool,
) *DisassociateElasticIpRequest {

    return &DisassociateElasticIpRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loadBalancers/{loadBalancerId}:disassociateElasticIp",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        LoadBalancerId: loadBalancerId,
        ElasticIpId: elasticIpId,
        DeleteElasticIp: deleteElasticIp,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDisassociateElasticIpRequestWithoutParam() *DisassociateElasticIpRequest {

    return &DisassociateElasticIpRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loadBalancers/{loadBalancerId}:disassociateElasticIp",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *DisassociateElasticIpRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param loadBalancerId: LB ID(Required) */
func (r *DisassociateElasticIpRequest) SetLoadBalancerId(loadBalancerId string) {
    r.LoadBalancerId = loadBalancerId
}
/* param elasticIpId: 弹性公网IP ID(Required) */
func (r *DisassociateElasticIpRequest) SetElasticIpId(elasticIpId string) {
    r.ElasticIpId = elasticIpId
}
/* param deleteElasticIp: 解绑时是否同时删除弹性公网IP，取值范围：true、false，默认false。true表示解绑弹性公网IP时删除该弹性公网IP；false表示解绑弹性公网IP时不删除该弹性公网IP。包年包月和无计费信息的弹性公网IP不支持解绑时删除(Optional) */
func (r *DisassociateElasticIpRequest) SetDeleteElasticIp(deleteElasticIp bool) {
    r.DeleteElasticIp = &deleteElasticIp
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DisassociateElasticIpRequest) GetRegionId() string {
    return r.RegionId
}

type DisassociateElasticIpResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DisassociateElasticIpResult `json:"result"`
}

type DisassociateElasticIpResult struct {
}