// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    lb "github.com/jdcloud-api/jdcloud-sdk-go/services/lb/models"
)

type UpdateAgTargetsRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* Backend Id  */
    BackendId string `json:"backendId"`

    /* 修改ag target信息  */
    TargetUpdateSpecs []lb.AgTargetUpdateSpec `json:"targetUpdateSpecs"`
}

/*
 * param regionId: Region ID (Required)
 * param backendId: Backend Id (Required)
 * param targetUpdateSpecs: 修改ag target信息 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateAgTargetsRequest(
    regionId string,
    backendId string,
    targetUpdateSpecs []lb.AgTargetUpdateSpec,
) *UpdateAgTargetsRequest {

	return &UpdateAgTargetsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/backends/{backendId}:updateAgTargets",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        BackendId: backendId,
        TargetUpdateSpecs: targetUpdateSpecs,
	}
}

/*
 * param regionId: Region ID (Required)
 * param backendId: Backend Id (Required)
 * param targetUpdateSpecs: 修改ag target信息 (Required)
 */
func NewUpdateAgTargetsRequestWithAllParams(
    regionId string,
    backendId string,
    targetUpdateSpecs []lb.AgTargetUpdateSpec,
) *UpdateAgTargetsRequest {

    return &UpdateAgTargetsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/backends/{backendId}:updateAgTargets",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        BackendId: backendId,
        TargetUpdateSpecs: targetUpdateSpecs,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateAgTargetsRequestWithoutParam() *UpdateAgTargetsRequest {

    return &UpdateAgTargetsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/backends/{backendId}:updateAgTargets",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *UpdateAgTargetsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param backendId: Backend Id(Required) */
func (r *UpdateAgTargetsRequest) SetBackendId(backendId string) {
    r.BackendId = backendId
}
/* param targetUpdateSpecs: 修改ag target信息(Required) */
func (r *UpdateAgTargetsRequest) SetTargetUpdateSpecs(targetUpdateSpecs []lb.AgTargetUpdateSpec) {
    r.TargetUpdateSpecs = targetUpdateSpecs
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateAgTargetsRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateAgTargetsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateAgTargetsResult `json:"result"`
}

type UpdateAgTargetsResult struct {
}