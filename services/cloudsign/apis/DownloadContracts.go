// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    cloudsign "github.com/lshuining/jdcloud-sdk-go/services/cloudsign/models"
)

type DownloadContractsRequest struct {

    core.JDCloudRequest

    /* 合同ID  */
    ContractId string `json:"contractId"`
}

/*
 * param contractId: 合同ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDownloadContractsRequest(
    contractId string,
) *DownloadContractsRequest {

	return &DownloadContractsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/contract/{contractId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        ContractId: contractId,
	}
}

/*
 * param contractId: 合同ID (Required)
 */
func NewDownloadContractsRequestWithAllParams(
    contractId string,
) *DownloadContractsRequest {

    return &DownloadContractsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/contract/{contractId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        ContractId: contractId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDownloadContractsRequestWithoutParam() *DownloadContractsRequest {

    return &DownloadContractsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/contract/{contractId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param contractId: 合同ID(Required) */
func (r *DownloadContractsRequest) SetContractId(contractId string) {
    r.ContractId = contractId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DownloadContractsRequest) GetRegionId() string {
    return ""
}

type DownloadContractsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DownloadContractsResult `json:"result"`
}

type DownloadContractsResult struct {
    ContractList []cloudsign.ContractInfo `json:"contractList"`
    TotalCount int `json:"totalCount"`
}