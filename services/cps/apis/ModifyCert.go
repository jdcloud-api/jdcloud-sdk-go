// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ModifyCertRequest struct {

    core.JDCloudRequest

    /* 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域  */
    RegionId string `json:"regionId"`

    /* 证书ID  */
    CertId string `json:"certId"`

    /* 证书名称 (Optional) */
    Name *string `json:"name"`
}

/*
 * param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域 (Required)
 * param certId: 证书ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyCertRequest(
    regionId string,
    certId string,
) *ModifyCertRequest {

	return &ModifyCertRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/certs/{certId}:modifyCert",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        CertId: certId,
	}
}

/*
 * param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域 (Required)
 * param certId: 证书ID (Required)
 * param name: 证书名称 (Optional)
 */
func NewModifyCertRequestWithAllParams(
    regionId string,
    certId string,
    name *string,
) *ModifyCertRequest {

    return &ModifyCertRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/certs/{certId}:modifyCert",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        CertId: certId,
        Name: name,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyCertRequestWithoutParam() *ModifyCertRequest {

    return &ModifyCertRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/certs/{certId}:modifyCert",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID，可调用接口（describeRegiones）获取云物理服务器支持的地域(Required) */
func (r *ModifyCertRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param certId: 证书ID(Required) */
func (r *ModifyCertRequest) SetCertId(certId string) {
    r.CertId = certId
}

/* param name: 证书名称(Optional) */
func (r *ModifyCertRequest) SetName(name string) {
    r.Name = &name
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyCertRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyCertResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyCertResult `json:"result"`
}

type ModifyCertResult struct {
    CertId string `json:"certId"`
    Name string `json:"name"`
    Certificate string `json:"certificate"`
    CreateTime string `json:"createTime"`
    ListenerCount int `json:"listenerCount"`
}