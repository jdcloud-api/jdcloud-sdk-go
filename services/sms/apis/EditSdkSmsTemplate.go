// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type EditSdkSmsTemplateRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* templateId参数 (Optional) */
    TemplateId *string `json:"templateId"`

    /* name参数 (Optional) */
    Name *string `json:"name"`

    /* type参数 (Optional) */
    Type *string `json:"type"`

    /* template参数 (Optional) */
    Template *string `json:"template"`

    /* description参数 (Optional) */
    Description *string `json:"description"`
}

/*
 * param regionId: Region ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewEditSdkSmsTemplateRequest(
    regionId string,
) *EditSdkSmsTemplateRequest {

	return &EditSdkSmsTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/editSdkSmsTemplate",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: Region ID (Required)
 * param templateId: templateId参数 (Optional)
 * param name: name参数 (Optional)
 * param type_: type参数 (Optional)
 * param template: template参数 (Optional)
 * param description: description参数 (Optional)
 */
func NewEditSdkSmsTemplateRequestWithAllParams(
    regionId string,
    templateId *string,
    name *string,
    type_ *string,
    template *string,
    description *string,
) *EditSdkSmsTemplateRequest {

    return &EditSdkSmsTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/editSdkSmsTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        TemplateId: templateId,
        Name: name,
        Type: type_,
        Template: template,
        Description: description,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewEditSdkSmsTemplateRequestWithoutParam() *EditSdkSmsTemplateRequest {

    return &EditSdkSmsTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/editSdkSmsTemplate",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *EditSdkSmsTemplateRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param templateId: templateId参数(Optional) */
func (r *EditSdkSmsTemplateRequest) SetTemplateId(templateId string) {
    r.TemplateId = &templateId
}

/* param name: name参数(Optional) */
func (r *EditSdkSmsTemplateRequest) SetName(name string) {
    r.Name = &name
}

/* param type_: type参数(Optional) */
func (r *EditSdkSmsTemplateRequest) SetType(type_ string) {
    r.Type = &type_
}

/* param template: template参数(Optional) */
func (r *EditSdkSmsTemplateRequest) SetTemplate(template string) {
    r.Template = &template
}

/* param description: description参数(Optional) */
func (r *EditSdkSmsTemplateRequest) SetDescription(description string) {
    r.Description = &description
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r EditSdkSmsTemplateRequest) GetRegionId() string {
    return r.RegionId
}

type EditSdkSmsTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result EditSdkSmsTemplateResult `json:"result"`
}

type EditSdkSmsTemplateResult struct {
    Message string `json:"message"`
    Status string `json:"status"`
}