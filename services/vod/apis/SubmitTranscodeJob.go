// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    vod "github.com/lshuining/jdcloud-sdk-go/services/vod/models"
)

type SubmitTranscodeJobRequest struct {

    core.JDCloudRequest

    /* 视频ID (Optional) */
    VideoId *string `json:"videoId"`

    /* 转码模板组ID。若此字段不为空，则以模板组方式提交作业，templateIds字段将被忽略。 (Optional) */
    TemplateGroupId *string `json:"templateGroupId"`

    /* 转码模板ID列表 (Optional) */
    TemplateIds []int64 `json:"templateIds"`

    /* 水印ID列表 (Optional) */
    WatermarkIds []int64 `json:"watermarkIds"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewSubmitTranscodeJobRequest(
) *SubmitTranscodeJobRequest {

	return &SubmitTranscodeJobRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/transcodeTasks:submitJob",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param videoId: 视频ID (Optional)
 * param templateGroupId: 转码模板组ID。若此字段不为空，则以模板组方式提交作业，templateIds字段将被忽略。 (Optional)
 * param templateIds: 转码模板ID列表 (Optional)
 * param watermarkIds: 水印ID列表 (Optional)
 */
func NewSubmitTranscodeJobRequestWithAllParams(
    videoId *string,
    templateGroupId *string,
    templateIds []int64,
    watermarkIds []int64,
) *SubmitTranscodeJobRequest {

    return &SubmitTranscodeJobRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeTasks:submitJob",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        VideoId: videoId,
        TemplateGroupId: templateGroupId,
        TemplateIds: templateIds,
        WatermarkIds: watermarkIds,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewSubmitTranscodeJobRequestWithoutParam() *SubmitTranscodeJobRequest {

    return &SubmitTranscodeJobRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/transcodeTasks:submitJob",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param videoId: 视频ID(Optional) */
func (r *SubmitTranscodeJobRequest) SetVideoId(videoId string) {
    r.VideoId = &videoId
}

/* param templateGroupId: 转码模板组ID。若此字段不为空，则以模板组方式提交作业，templateIds字段将被忽略。(Optional) */
func (r *SubmitTranscodeJobRequest) SetTemplateGroupId(templateGroupId string) {
    r.TemplateGroupId = &templateGroupId
}

/* param templateIds: 转码模板ID列表(Optional) */
func (r *SubmitTranscodeJobRequest) SetTemplateIds(templateIds []int64) {
    r.TemplateIds = templateIds
}

/* param watermarkIds: 水印ID列表(Optional) */
func (r *SubmitTranscodeJobRequest) SetWatermarkIds(watermarkIds []int64) {
    r.WatermarkIds = watermarkIds
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r SubmitTranscodeJobRequest) GetRegionId() string {
    return ""
}

type SubmitTranscodeJobResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result SubmitTranscodeJobResult `json:"result"`
}

type SubmitTranscodeJobResult struct {
    Tasks []vod.SubmittedTranscodeTask `json:"tasks"`
}