// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type GetWatermarkRequest struct {

    core.JDCloudRequest

    /* 水印ID  */
    WatermarkId int `json:"watermarkId"`
}

/*
 * param watermarkId: 水印ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetWatermarkRequest(
    watermarkId int,
) *GetWatermarkRequest {

	return &GetWatermarkRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/watermarks/{watermarkId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        WatermarkId: watermarkId,
	}
}

/*
 * param watermarkId: 水印ID (Required)
 */
func NewGetWatermarkRequestWithAllParams(
    watermarkId int,
) *GetWatermarkRequest {

    return &GetWatermarkRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/watermarks/{watermarkId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        WatermarkId: watermarkId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetWatermarkRequestWithoutParam() *GetWatermarkRequest {

    return &GetWatermarkRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/watermarks/{watermarkId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param watermarkId: 水印ID(Required) */
func (r *GetWatermarkRequest) SetWatermarkId(watermarkId int) {
    r.WatermarkId = watermarkId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetWatermarkRequest) GetRegionId() string {
    return ""
}

type GetWatermarkResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetWatermarkResult `json:"result"`
}

type GetWatermarkResult struct {
    Id int64 `json:"id"`
    Name string `json:"name"`
    ImgUrl string `json:"imgUrl"`
    Width string `json:"width"`
    Height string `json:"height"`
    SizeUnit string `json:"sizeUnit"`
    WidthRef string `json:"widthRef"`
    HeightRef string `json:"heightRef"`
    Position string `json:"position"`
    OffsetX string `json:"offsetX"`
    OffsetY string `json:"offsetY"`
    OffsetUnit string `json:"offsetUnit"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}