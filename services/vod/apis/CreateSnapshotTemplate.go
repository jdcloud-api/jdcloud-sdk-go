// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    vod "github.com/lshuining/jdcloud-sdk-go/services/vod/models"
)

type CreateSnapshotTemplateRequest struct {

    core.JDCloudRequest

    /* 模板标题。长度不超过 128 个字节。UTF-8 编码。  */
    TemplateName string `json:"templateName"`

    /* 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
 (Optional) */
    SnapshotType *string `json:"snapshotType"`

    /* 采样截图模板配置 (Optional) */
    ImageSampleConfig *vod.ImageSampleConfig `json:"imageSampleConfig"`

    /* 雪碧图模板配置 (Optional) */
    ImageSpriteConfig *vod.ImageSpriteConfig `json:"imageSpriteConfig"`
}

/*
 * param templateName: 模板标题。长度不超过 128 个字节。UTF-8 编码。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateSnapshotTemplateRequest(
    templateName string,
) *CreateSnapshotTemplateRequest {

	return &CreateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/snapshotTemplates",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        TemplateName: templateName,
	}
}

/*
 * param templateName: 模板标题。长度不超过 128 个字节。UTF-8 编码。 (Required)
 * param snapshotType: 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
 (Optional)
 * param imageSampleConfig: 采样截图模板配置 (Optional)
 * param imageSpriteConfig: 雪碧图模板配置 (Optional)
 */
func NewCreateSnapshotTemplateRequestWithAllParams(
    templateName string,
    snapshotType *string,
    imageSampleConfig *vod.ImageSampleConfig,
    imageSpriteConfig *vod.ImageSpriteConfig,
) *CreateSnapshotTemplateRequest {

    return &CreateSnapshotTemplateRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        TemplateName: templateName,
        SnapshotType: snapshotType,
        ImageSampleConfig: imageSampleConfig,
        ImageSpriteConfig: imageSpriteConfig,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateSnapshotTemplateRequestWithoutParam() *CreateSnapshotTemplateRequest {

    return &CreateSnapshotTemplateRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/snapshotTemplates",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param templateName: 模板标题。长度不超过 128 个字节。UTF-8 编码。(Required) */
func (r *CreateSnapshotTemplateRequest) SetTemplateName(templateName string) {
    r.TemplateName = templateName
}

/* param snapshotType: 模板类型。取值范围：
  sample - 采样截图模板
  sprite - 雪碧图模板
(Optional) */
func (r *CreateSnapshotTemplateRequest) SetSnapshotType(snapshotType string) {
    r.SnapshotType = &snapshotType
}

/* param imageSampleConfig: 采样截图模板配置(Optional) */
func (r *CreateSnapshotTemplateRequest) SetImageSampleConfig(imageSampleConfig *vod.ImageSampleConfig) {
    r.ImageSampleConfig = imageSampleConfig
}

/* param imageSpriteConfig: 雪碧图模板配置(Optional) */
func (r *CreateSnapshotTemplateRequest) SetImageSpriteConfig(imageSpriteConfig *vod.ImageSpriteConfig) {
    r.ImageSpriteConfig = imageSpriteConfig
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateSnapshotTemplateRequest) GetRegionId() string {
    return ""
}

type CreateSnapshotTemplateResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateSnapshotTemplateResult `json:"result"`
}

type CreateSnapshotTemplateResult struct {
    TemplateId string `json:"templateId"`
    TemplateName string `json:"templateName"`
    SnapshotType string `json:"snapshotType"`
    ImageSampleConfig vod.ImageSampleConfig `json:"imageSampleConfig"`
    ImageSpriteConfig vod.ImageSpriteConfig `json:"imageSpriteConfig"`
    CreateTime string `json:"createTime"`
    UpdateTime string `json:"updateTime"`
}