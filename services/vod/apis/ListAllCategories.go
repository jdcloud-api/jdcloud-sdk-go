// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    vod "github.com/lshuining/jdcloud-sdk-go/services/vod/models"
)

type ListAllCategoriesRequest struct {

    core.JDCloudRequest

    /* 是否返回平坦结构结果,默认为false（flatMode和treeMode不能同时为false） (Optional) */
    FlatMode *bool `json:"flatMode"`

    /* 是否返回树结构结果,默认为false（flatMode和treeMode不能同时为false） (Optional) */
    TreeMode *bool `json:"treeMode"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListAllCategoriesRequest(
) *ListAllCategoriesRequest {

	return &ListAllCategoriesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/categories:listAll",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param flatMode: 是否返回平坦结构结果,默认为false（flatMode和treeMode不能同时为false） (Optional)
 * param treeMode: 是否返回树结构结果,默认为false（flatMode和treeMode不能同时为false） (Optional)
 */
func NewListAllCategoriesRequestWithAllParams(
    flatMode *bool,
    treeMode *bool,
) *ListAllCategoriesRequest {

    return &ListAllCategoriesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/categories:listAll",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        FlatMode: flatMode,
        TreeMode: treeMode,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListAllCategoriesRequestWithoutParam() *ListAllCategoriesRequest {

    return &ListAllCategoriesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/categories:listAll",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param flatMode: 是否返回平坦结构结果,默认为false（flatMode和treeMode不能同时为false）(Optional) */
func (r *ListAllCategoriesRequest) SetFlatMode(flatMode bool) {
    r.FlatMode = &flatMode
}

/* param treeMode: 是否返回树结构结果,默认为false（flatMode和treeMode不能同时为false）(Optional) */
func (r *ListAllCategoriesRequest) SetTreeMode(treeMode bool) {
    r.TreeMode = &treeMode
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListAllCategoriesRequest) GetRegionId() string {
    return ""
}

type ListAllCategoriesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListAllCategoriesResult `json:"result"`
}

type ListAllCategoriesResult struct {
    FlatResult []vod.CategoryObject `json:"flatResult"`
    TreeResult vod.CategoryTreeNode `json:"treeResult"`
}