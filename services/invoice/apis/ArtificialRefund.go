// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type ArtificialRefundRequest struct {

    core.JDCloudRequest

    /* 地域编码，参考OpenAPI公共说明  */
    RegionId string `json:"regionId"`

    /* 退款订单号 (Optional) */
    OrderId *string `json:"orderId"`

    /* 退款金额 (Optional) */
    RefundAmount *string `json:"refundAmount"`
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewArtificialRefundRequest(
    regionId string,
) *ArtificialRefundRequest {

	return &ArtificialRefundRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/invoiceorder:artificialRefund",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param orderId: 退款订单号 (Optional)
 * param refundAmount: 退款金额 (Optional)
 */
func NewArtificialRefundRequestWithAllParams(
    regionId string,
    orderId *string,
    refundAmount *string,
) *ArtificialRefundRequest {

    return &ArtificialRefundRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoiceorder:artificialRefund",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        OrderId: orderId,
        RefundAmount: refundAmount,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewArtificialRefundRequestWithoutParam() *ArtificialRefundRequest {

    return &ArtificialRefundRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoiceorder:artificialRefund",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域编码，参考OpenAPI公共说明(Required) */
func (r *ArtificialRefundRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param orderId: 退款订单号(Optional) */
func (r *ArtificialRefundRequest) SetOrderId(orderId string) {
    r.OrderId = &orderId
}
/* param refundAmount: 退款金额(Optional) */
func (r *ArtificialRefundRequest) SetRefundAmount(refundAmount string) {
    r.RefundAmount = &refundAmount
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ArtificialRefundRequest) GetRegionId() string {
    return r.RegionId
}

type ArtificialRefundResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ArtificialRefundResult `json:"result"`
}

type ArtificialRefundResult struct {
    Code int `json:"code"`
    Msg string `json:"msg"`
}