// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type RefundInvoiceRequest struct {

    core.JDCloudRequest

    /* 地域编码，参考OpenAPI公共说明  */
    RegionId string `json:"regionId"`

    /* 发票申请单号  */
    InvoiceNumber string `json:"invoiceNumber"`

    /* 退票原因 (Optional) */
    RefundReason *string `json:"refundReason"`

    /* 备注信息 (Optional) */
    Remark *string `json:"remark"`

    /* 物流公司 (Optional) */
    LogisticsCompany *string `json:"logisticsCompany"`

    /* 物流单号 (Optional) */
    LogisticsOrderNumber *string `json:"logisticsOrderNumber"`

    /* [纸质-paper，电子-electronic] (Optional) */
    MediumType *string `json:"mediumType"`
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param invoiceNumber: 发票申请单号 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewRefundInvoiceRequest(
    regionId string,
    invoiceNumber string,
) *RefundInvoiceRequest {

	return &RefundInvoiceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/invoice/{invoiceNumber}:refund",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InvoiceNumber: invoiceNumber,
	}
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param invoiceNumber: 发票申请单号 (Required)
 * param refundReason: 退票原因 (Optional)
 * param remark: 备注信息 (Optional)
 * param logisticsCompany: 物流公司 (Optional)
 * param logisticsOrderNumber: 物流单号 (Optional)
 * param mediumType: [纸质-paper，电子-electronic] (Optional)
 */
func NewRefundInvoiceRequestWithAllParams(
    regionId string,
    invoiceNumber string,
    refundReason *string,
    remark *string,
    logisticsCompany *string,
    logisticsOrderNumber *string,
    mediumType *string,
) *RefundInvoiceRequest {

    return &RefundInvoiceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoice/{invoiceNumber}:refund",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InvoiceNumber: invoiceNumber,
        RefundReason: refundReason,
        Remark: remark,
        LogisticsCompany: logisticsCompany,
        LogisticsOrderNumber: logisticsOrderNumber,
        MediumType: mediumType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewRefundInvoiceRequestWithoutParam() *RefundInvoiceRequest {

    return &RefundInvoiceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/invoice/{invoiceNumber}:refund",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域编码，参考OpenAPI公共说明(Required) */
func (r *RefundInvoiceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param invoiceNumber: 发票申请单号(Required) */
func (r *RefundInvoiceRequest) SetInvoiceNumber(invoiceNumber string) {
    r.InvoiceNumber = invoiceNumber
}
/* param refundReason: 退票原因(Optional) */
func (r *RefundInvoiceRequest) SetRefundReason(refundReason string) {
    r.RefundReason = &refundReason
}
/* param remark: 备注信息(Optional) */
func (r *RefundInvoiceRequest) SetRemark(remark string) {
    r.Remark = &remark
}
/* param logisticsCompany: 物流公司(Optional) */
func (r *RefundInvoiceRequest) SetLogisticsCompany(logisticsCompany string) {
    r.LogisticsCompany = &logisticsCompany
}
/* param logisticsOrderNumber: 物流单号(Optional) */
func (r *RefundInvoiceRequest) SetLogisticsOrderNumber(logisticsOrderNumber string) {
    r.LogisticsOrderNumber = &logisticsOrderNumber
}
/* param mediumType: [纸质-paper，电子-electronic](Optional) */
func (r *RefundInvoiceRequest) SetMediumType(mediumType string) {
    r.MediumType = &mediumType
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r RefundInvoiceRequest) GetRegionId() string {
    return r.RegionId
}

type RefundInvoiceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result RefundInvoiceResult `json:"result"`
}

type RefundInvoiceResult struct {
    Code int `json:"code"`
    Msg string `json:"msg"`
}