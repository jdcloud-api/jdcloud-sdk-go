// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    invoice "github.com/jdcloud-api/jdcloud-sdk-go/services/invoice/models"
)

type GetInvoicePreviewRequest struct {

    core.JDCloudRequest

    /* 地域编码，参考OpenAPI公共说明  */
    RegionId string `json:"regionId"`

    /* 用户pin (Optional) */
    Pin *string `json:"pin"`

    /* 订单号 多个用逗号,分开 (Optional) */
    OrderIds *string `json:"orderIds"`

    /* 欠票抵扣的订单信息 (Optional) */
    DeductInfoList []invoice.DeductInfo `json:"deductInfoList"`

    /* 指定开票金额 (Optional) */
    Amount *int `json:"amount"`

    /* 开票月份 仅按月开票生效 (Optional) */
    MonthGroups *string `json:"monthGroups"`

    /* 发票类型[电子-electronic, 数电-digital] (Optional) */
    MediumType *string `json:"mediumType"`

    /* 全部开票标识 1-全部开票 全部开票, 不需要传orderIds 需要传 开始、结束时间 (Optional) */
    InvoiceAll *int `json:"invoiceAll"`

    /* 开票订单的开始时间(yyyy-MM-dd HH:mm:ss) (Optional) */
    OrderStartTime *string `json:"orderStartTime"`

    /* 开票订单的结束时间(yyyy-MM-dd HH:mm:ss) (Optional) */
    OrderEndTime *string `json:"orderEndTime"`
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetInvoicePreviewRequest(
    regionId string,
) *GetInvoicePreviewRequest {

	return &GetInvoicePreviewRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/getInvoicePreview",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param pin: 用户pin (Optional)
 * param orderIds: 订单号 多个用逗号,分开 (Optional)
 * param deductInfoList: 欠票抵扣的订单信息 (Optional)
 * param amount: 指定开票金额 (Optional)
 * param monthGroups: 开票月份 仅按月开票生效 (Optional)
 * param mediumType: 发票类型[电子-electronic, 数电-digital] (Optional)
 * param invoiceAll: 全部开票标识 1-全部开票 全部开票, 不需要传orderIds 需要传 开始、结束时间 (Optional)
 * param orderStartTime: 开票订单的开始时间(yyyy-MM-dd HH:mm:ss) (Optional)
 * param orderEndTime: 开票订单的结束时间(yyyy-MM-dd HH:mm:ss) (Optional)
 */
func NewGetInvoicePreviewRequestWithAllParams(
    regionId string,
    pin *string,
    orderIds *string,
    deductInfoList []invoice.DeductInfo,
    amount *int,
    monthGroups *string,
    mediumType *string,
    invoiceAll *int,
    orderStartTime *string,
    orderEndTime *string,
) *GetInvoicePreviewRequest {

    return &GetInvoicePreviewRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/getInvoicePreview",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        Pin: pin,
        OrderIds: orderIds,
        DeductInfoList: deductInfoList,
        Amount: amount,
        MonthGroups: monthGroups,
        MediumType: mediumType,
        InvoiceAll: invoiceAll,
        OrderStartTime: orderStartTime,
        OrderEndTime: orderEndTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetInvoicePreviewRequestWithoutParam() *GetInvoicePreviewRequest {

    return &GetInvoicePreviewRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/getInvoicePreview",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域编码，参考OpenAPI公共说明(Required) */
func (r *GetInvoicePreviewRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param pin: 用户pin(Optional) */
func (r *GetInvoicePreviewRequest) SetPin(pin string) {
    r.Pin = &pin
}
/* param orderIds: 订单号 多个用逗号,分开(Optional) */
func (r *GetInvoicePreviewRequest) SetOrderIds(orderIds string) {
    r.OrderIds = &orderIds
}
/* param deductInfoList: 欠票抵扣的订单信息(Optional) */
func (r *GetInvoicePreviewRequest) SetDeductInfoList(deductInfoList []invoice.DeductInfo) {
    r.DeductInfoList = deductInfoList
}
/* param amount: 指定开票金额(Optional) */
func (r *GetInvoicePreviewRequest) SetAmount(amount int) {
    r.Amount = &amount
}
/* param monthGroups: 开票月份 仅按月开票生效(Optional) */
func (r *GetInvoicePreviewRequest) SetMonthGroups(monthGroups string) {
    r.MonthGroups = &monthGroups
}
/* param mediumType: 发票类型[电子-electronic, 数电-digital](Optional) */
func (r *GetInvoicePreviewRequest) SetMediumType(mediumType string) {
    r.MediumType = &mediumType
}
/* param invoiceAll: 全部开票标识 1-全部开票 全部开票, 不需要传orderIds 需要传 开始、结束时间(Optional) */
func (r *GetInvoicePreviewRequest) SetInvoiceAll(invoiceAll int) {
    r.InvoiceAll = &invoiceAll
}
/* param orderStartTime: 开票订单的开始时间(yyyy-MM-dd HH:mm:ss)(Optional) */
func (r *GetInvoicePreviewRequest) SetOrderStartTime(orderStartTime string) {
    r.OrderStartTime = &orderStartTime
}
/* param orderEndTime: 开票订单的结束时间(yyyy-MM-dd HH:mm:ss)(Optional) */
func (r *GetInvoicePreviewRequest) SetOrderEndTime(orderEndTime string) {
    r.OrderEndTime = &orderEndTime
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetInvoicePreviewRequest) GetRegionId() string {
    return r.RegionId
}

type GetInvoicePreviewResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetInvoicePreviewResult `json:"result"`
}

type GetInvoicePreviewResult struct {
    Result []invoice.InvoicePreviewRespVo `json:"result"`
}