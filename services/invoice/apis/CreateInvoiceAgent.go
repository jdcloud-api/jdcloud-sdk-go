// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    invoice "github.com/jdcloud-api/jdcloud-sdk-go/services/invoice/models"
)

type CreateInvoiceAgentRequest struct {

    core.JDCloudRequest

    /* 地域编码，参考OpenAPI公共说明  */
    RegionId string `json:"regionId"`

    /* 需要开票的订单号列表，以逗号分隔 (Optional) */
    OrderIds *string `json:"orderIds"`

    /* 抵扣单据单号列表，以逗号分隔 (Optional) */
    DeductOrderIds *string `json:"deductOrderIds"`

    /* 发票类型[电子-electronic] (Optional) */
    MediumType *string `json:"mediumType"`

    /* 开票类型[按明细开票-consume，按月账单开票-month，指定金额开票-money(mediumType=paper生效)] (Optional) */
    CreateInvoiceType *string `json:"createInvoiceType"`

    /* 是否全部开票[全部开票-1 不需要传orderIds 需要传 开始、结束时间] (Optional) */
    InvoiceAll *int `json:"invoiceAll"`

    /* 开票订单的开始时间(开票标识为 全部开票 时不需要传) (Optional) */
    OrderStartTime *string `json:"orderStartTime"`

    /* 开票订单的结束时间(开票标识为 全部开票 时不需要传) (Optional) */
    OrderEndTime *string `json:"orderEndTime"`

    /* 开票月份 仅按月账单开票生效 例（202407,202406）多个月份用逗号分隔 (Optional) */
    MonthGroups *string `json:"monthGroups"`

    /* 指定金额开票时 传入金额 开票类型=money时必传 (Optional) */
    Amount *int `json:"amount"`
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateInvoiceAgentRequest(
    regionId string,
) *CreateInvoiceAgentRequest {

	return &CreateInvoiceAgentRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/createInvoiceAgent",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域编码，参考OpenAPI公共说明 (Required)
 * param orderIds: 需要开票的订单号列表，以逗号分隔 (Optional)
 * param deductOrderIds: 抵扣单据单号列表，以逗号分隔 (Optional)
 * param mediumType: 发票类型[电子-electronic] (Optional)
 * param createInvoiceType: 开票类型[按明细开票-consume，按月账单开票-month，指定金额开票-money(mediumType=paper生效)] (Optional)
 * param invoiceAll: 是否全部开票[全部开票-1 不需要传orderIds 需要传 开始、结束时间] (Optional)
 * param orderStartTime: 开票订单的开始时间(开票标识为 全部开票 时不需要传) (Optional)
 * param orderEndTime: 开票订单的结束时间(开票标识为 全部开票 时不需要传) (Optional)
 * param monthGroups: 开票月份 仅按月账单开票生效 例（202407,202406）多个月份用逗号分隔 (Optional)
 * param amount: 指定金额开票时 传入金额 开票类型=money时必传 (Optional)
 */
func NewCreateInvoiceAgentRequestWithAllParams(
    regionId string,
    orderIds *string,
    deductOrderIds *string,
    mediumType *string,
    createInvoiceType *string,
    invoiceAll *int,
    orderStartTime *string,
    orderEndTime *string,
    monthGroups *string,
    amount *int,
) *CreateInvoiceAgentRequest {

    return &CreateInvoiceAgentRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/createInvoiceAgent",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        OrderIds: orderIds,
        DeductOrderIds: deductOrderIds,
        MediumType: mediumType,
        CreateInvoiceType: createInvoiceType,
        InvoiceAll: invoiceAll,
        OrderStartTime: orderStartTime,
        OrderEndTime: orderEndTime,
        MonthGroups: monthGroups,
        Amount: amount,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateInvoiceAgentRequestWithoutParam() *CreateInvoiceAgentRequest {

    return &CreateInvoiceAgentRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/createInvoiceAgent",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域编码，参考OpenAPI公共说明(Required) */
func (r *CreateInvoiceAgentRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param orderIds: 需要开票的订单号列表，以逗号分隔(Optional) */
func (r *CreateInvoiceAgentRequest) SetOrderIds(orderIds string) {
    r.OrderIds = &orderIds
}
/* param deductOrderIds: 抵扣单据单号列表，以逗号分隔(Optional) */
func (r *CreateInvoiceAgentRequest) SetDeductOrderIds(deductOrderIds string) {
    r.DeductOrderIds = &deductOrderIds
}
/* param mediumType: 发票类型[电子-electronic](Optional) */
func (r *CreateInvoiceAgentRequest) SetMediumType(mediumType string) {
    r.MediumType = &mediumType
}
/* param createInvoiceType: 开票类型[按明细开票-consume，按月账单开票-month，指定金额开票-money(mediumType=paper生效)](Optional) */
func (r *CreateInvoiceAgentRequest) SetCreateInvoiceType(createInvoiceType string) {
    r.CreateInvoiceType = &createInvoiceType
}
/* param invoiceAll: 是否全部开票[全部开票-1 不需要传orderIds 需要传 开始、结束时间](Optional) */
func (r *CreateInvoiceAgentRequest) SetInvoiceAll(invoiceAll int) {
    r.InvoiceAll = &invoiceAll
}
/* param orderStartTime: 开票订单的开始时间(开票标识为 全部开票 时不需要传)(Optional) */
func (r *CreateInvoiceAgentRequest) SetOrderStartTime(orderStartTime string) {
    r.OrderStartTime = &orderStartTime
}
/* param orderEndTime: 开票订单的结束时间(开票标识为 全部开票 时不需要传)(Optional) */
func (r *CreateInvoiceAgentRequest) SetOrderEndTime(orderEndTime string) {
    r.OrderEndTime = &orderEndTime
}
/* param monthGroups: 开票月份 仅按月账单开票生效 例（202407,202406）多个月份用逗号分隔(Optional) */
func (r *CreateInvoiceAgentRequest) SetMonthGroups(monthGroups string) {
    r.MonthGroups = &monthGroups
}
/* param amount: 指定金额开票时 传入金额 开票类型=money时必传(Optional) */
func (r *CreateInvoiceAgentRequest) SetAmount(amount int) {
    r.Amount = &amount
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateInvoiceAgentRequest) GetRegionId() string {
    return r.RegionId
}

type CreateInvoiceAgentResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateInvoiceAgentResult `json:"result"`
}

type CreateInvoiceAgentResult struct {
    Code int `json:"code"`
    Msg string `json:"msg"`
}