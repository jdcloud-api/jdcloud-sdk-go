// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type PushDataRequest struct {

    core.JDCloudRequest

    /* 爬虫id (Optional) */
    CrawlerId *string `json:"crawlerId"`

    /* 任务id (Optional) */
    TaskId *string `json:"taskId"`

    /* 标题  */
    Title string `json:"title"`

    /* 链接  */
    Url string `json:"url"`

    /* 提取内容 (Optional) */
    Content *string `json:"content"`

    /* 发布时间 (Optional) */
    Publish_time *string `json:"publish_time"`

    /* 分类 (分类长度不能超过64个字符) (Optional) */
    Category *string `json:"category"`

    /* 语言 (语言长度不能超过16个字符) (Optional) */
    Language *string `json:"language"`

    /* 作者 (Optional) */
    Author *string `json:"author"`

    /* 位置 (Optional) */
    Location *string `json:"location"`
}

/*
 * param title: 标题 (Required)
 * param url: 链接 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewPushDataRequest(
    title string,
    url string,
) *PushDataRequest {

	return &PushDataRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/pushData",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        Title: title,
        Url: url,
	}
}

/*
 * param crawlerId: 爬虫id (Optional)
 * param taskId: 任务id (Optional)
 * param title: 标题 (Required)
 * param url: 链接 (Required)
 * param content: 提取内容 (Optional)
 * param publish_time: 发布时间 (Optional)
 * param category: 分类 (分类长度不能超过64个字符) (Optional)
 * param language: 语言 (语言长度不能超过16个字符) (Optional)
 * param author: 作者 (Optional)
 * param location: 位置 (Optional)
 */
func NewPushDataRequestWithAllParams(
    crawlerId *string,
    taskId *string,
    title string,
    url string,
    content *string,
    publish_time *string,
    category *string,
    language *string,
    author *string,
    location *string,
) *PushDataRequest {

    return &PushDataRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/pushData",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        CrawlerId: crawlerId,
        TaskId: taskId,
        Title: title,
        Url: url,
        Content: content,
        Publish_time: publish_time,
        Category: category,
        Language: language,
        Author: author,
        Location: location,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewPushDataRequestWithoutParam() *PushDataRequest {

    return &PushDataRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/pushData",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param crawlerId: 爬虫id(Optional) */
func (r *PushDataRequest) SetCrawlerId(crawlerId string) {
    r.CrawlerId = &crawlerId
}
/* param taskId: 任务id(Optional) */
func (r *PushDataRequest) SetTaskId(taskId string) {
    r.TaskId = &taskId
}
/* param title: 标题(Required) */
func (r *PushDataRequest) SetTitle(title string) {
    r.Title = title
}
/* param url: 链接(Required) */
func (r *PushDataRequest) SetUrl(url string) {
    r.Url = url
}
/* param content: 提取内容(Optional) */
func (r *PushDataRequest) SetContent(content string) {
    r.Content = &content
}
/* param publish_time: 发布时间(Optional) */
func (r *PushDataRequest) SetPublish_time(publish_time string) {
    r.Publish_time = &publish_time
}
/* param category: 分类 (分类长度不能超过64个字符)(Optional) */
func (r *PushDataRequest) SetCategory(category string) {
    r.Category = &category
}
/* param language: 语言 (语言长度不能超过16个字符)(Optional) */
func (r *PushDataRequest) SetLanguage(language string) {
    r.Language = &language
}
/* param author: 作者(Optional) */
func (r *PushDataRequest) SetAuthor(author string) {
    r.Author = &author
}
/* param location: 位置(Optional) */
func (r *PushDataRequest) SetLocation(location string) {
    r.Location = &location
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r PushDataRequest) GetRegionId() string {
    return ""
}

type PushDataResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result PushDataResult `json:"result"`
}

type PushDataResult struct {
    Data int `json:"data"`
}