// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type FetchDataRequest struct {

    core.JDCloudRequest

    /* 自定义客户端名称 (Optional) */
    CrawlerId *string `json:"crawlerId"`

    /* 获取链接数量， 默认为10 (Optional) */
    Count *int `json:"count"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewFetchDataRequest(
) *FetchDataRequest {

	return &FetchDataRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/fetchData",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
	}
}

/*
 * param crawlerId: 自定义客户端名称 (Optional)
 * param count: 获取链接数量， 默认为10 (Optional)
 */
func NewFetchDataRequestWithAllParams(
    crawlerId *string,
    count *int,
) *FetchDataRequest {

    return &FetchDataRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/fetchData",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        CrawlerId: crawlerId,
        Count: count,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewFetchDataRequestWithoutParam() *FetchDataRequest {

    return &FetchDataRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/fetchData",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param crawlerId: 自定义客户端名称(Optional) */
func (r *FetchDataRequest) SetCrawlerId(crawlerId string) {
    r.CrawlerId = &crawlerId
}
/* param count: 获取链接数量， 默认为10(Optional) */
func (r *FetchDataRequest) SetCount(count int) {
    r.Count = &count
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r FetchDataRequest) GetRegionId() string {
    return ""
}

type FetchDataResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result FetchDataResult `json:"result"`
}

type FetchDataResult struct {
    Data []string `json:"data"`
}