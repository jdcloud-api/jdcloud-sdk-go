// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    openjrtc "github.com/jdcloud-api/jdcloud-sdk-go/services/openjrtc/models"
)

type DescribeUserRoomsRequest struct {

    core.JDCloudRequest

    /* 应用ID  */
    AppId string `json:"appId"`

    /* 页码；默认值为 1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认值为 10；取值范围 [10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 传参字段描述:
  - startTime[eq] 按房间注册时间段查询-UTC时间 startTime,endTime同时有值时生效
  - endTime[eq] 按房间注册时间段查询-UTC时间   startTime,endTime同时有值时生效
 (Optional) */
    Filters []openjrtc.Filter `json:"filters"`
}

/*
 * param appId: 应用ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeUserRoomsRequest(
    appId string,
) *DescribeUserRoomsRequest {

	return &DescribeUserRoomsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/describeUserRooms/{appId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
	}
}

/*
 * param appId: 应用ID (Required)
 * param pageNumber: 页码；默认值为 1 (Optional)
 * param pageSize: 分页大小；默认值为 10；取值范围 [10, 100] (Optional)
 * param filters: 传参字段描述:
  - startTime[eq] 按房间注册时间段查询-UTC时间 startTime,endTime同时有值时生效
  - endTime[eq] 按房间注册时间段查询-UTC时间   startTime,endTime同时有值时生效
 (Optional)
 */
func NewDescribeUserRoomsRequestWithAllParams(
    appId string,
    pageNumber *int,
    pageSize *int,
    filters []openjrtc.Filter,
) *DescribeUserRoomsRequest {

    return &DescribeUserRoomsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/describeUserRooms/{appId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeUserRoomsRequestWithoutParam() *DescribeUserRoomsRequest {

    return &DescribeUserRoomsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/describeUserRooms/{appId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用ID(Required) */
func (r *DescribeUserRoomsRequest) SetAppId(appId string) {
    r.AppId = appId
}
/* param pageNumber: 页码；默认值为 1(Optional) */
func (r *DescribeUserRoomsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 分页大小；默认值为 10；取值范围 [10, 100](Optional) */
func (r *DescribeUserRoomsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param filters: 传参字段描述:
  - startTime[eq] 按房间注册时间段查询-UTC时间 startTime,endTime同时有值时生效
  - endTime[eq] 按房间注册时间段查询-UTC时间   startTime,endTime同时有值时生效
(Optional) */
func (r *DescribeUserRoomsRequest) SetFilters(filters []openjrtc.Filter) {
    r.Filters = filters
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeUserRoomsRequest) GetRegionId() string {
    return ""
}

type DescribeUserRoomsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeUserRoomsResult `json:"result"`
}

type DescribeUserRoomsResult struct {
    PageNumber int `json:"pageNumber"`
    PageSize int `json:"pageSize"`
    TotalElements int `json:"totalElements"`
    TotalPages int `json:"totalPages"`
    Content []openjrtc.UserRoomInfoObj `json:"content"`
}