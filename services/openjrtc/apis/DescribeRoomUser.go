// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DescribeRoomUserRequest struct {

    core.JDCloudRequest

    /* 应用ID  */
    AppId string `json:"appId"`

    /* 业务接入方定义的且在JRTC系统内注册过的房间号  */
    UserRoomId string `json:"userRoomId"`

    /* 业务接入方用户体系定义的且在JRTC系统内注册过的userId  */
    UserId string `json:"userId"`
}

/*
 * param appId: 应用ID (Required)
 * param userRoomId: 业务接入方定义的且在JRTC系统内注册过的房间号 (Required)
 * param userId: 业务接入方用户体系定义的且在JRTC系统内注册过的userId (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeRoomUserRequest(
    appId string,
    userRoomId string,
    userId string,
) *DescribeRoomUserRequest {

	return &DescribeRoomUserRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/describeRoomUser/{appId}",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
        UserRoomId: userRoomId,
        UserId: userId,
	}
}

/*
 * param appId: 应用ID (Required)
 * param userRoomId: 业务接入方定义的且在JRTC系统内注册过的房间号 (Required)
 * param userId: 业务接入方用户体系定义的且在JRTC系统内注册过的userId (Required)
 */
func NewDescribeRoomUserRequestWithAllParams(
    appId string,
    userRoomId string,
    userId string,
) *DescribeRoomUserRequest {

    return &DescribeRoomUserRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/describeRoomUser/{appId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        UserRoomId: userRoomId,
        UserId: userId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeRoomUserRequestWithoutParam() *DescribeRoomUserRequest {

    return &DescribeRoomUserRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/describeRoomUser/{appId}",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用ID(Required) */
func (r *DescribeRoomUserRequest) SetAppId(appId string) {
    r.AppId = appId
}
/* param userRoomId: 业务接入方定义的且在JRTC系统内注册过的房间号(Required) */
func (r *DescribeRoomUserRequest) SetUserRoomId(userRoomId string) {
    r.UserRoomId = userRoomId
}
/* param userId: 业务接入方用户体系定义的且在JRTC系统内注册过的userId(Required) */
func (r *DescribeRoomUserRequest) SetUserId(userId string) {
    r.UserId = userId
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeRoomUserRequest) GetRegionId() string {
    return ""
}

type DescribeRoomUserResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeRoomUserResult `json:"result"`
}

type DescribeRoomUserResult struct {
    AppId string `json:"appId"`
    UserRoomId string `json:"userRoomId"`
    UserId string `json:"userId"`
    NickName string `json:"nickName"`
    ConnectId string `json:"connectId"`
    Status int `json:"status"`
    JoinTime string `json:"joinTime"`
    UpdateTime string `json:"updateTime"`
}