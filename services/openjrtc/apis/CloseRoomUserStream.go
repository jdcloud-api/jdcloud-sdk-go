// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type CloseRoomUserStreamRequest struct {

    core.JDCloudRequest

    /* 应用ID  */
    AppId string `json:"appId"`

    /* 业务接入方定义的且在JRTC系统内注册过的房间号 (Optional) */
    UserRoomId *string `json:"userRoomId"`

    /* 业务接入方用户体系定义的且在JRTC系统内注册过的userId (Optional) */
    UserId *string `json:"userId"`

    /* 要关闭的流ID (Optional) */
    StreamId *string `json:"streamId"`
}

/*
 * param appId: 应用ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCloseRoomUserStreamRequest(
    appId string,
) *CloseRoomUserStreamRequest {

	return &CloseRoomUserStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/closeRoomUserStream/{appId}",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
	}
}

/*
 * param appId: 应用ID (Required)
 * param userRoomId: 业务接入方定义的且在JRTC系统内注册过的房间号 (Optional)
 * param userId: 业务接入方用户体系定义的且在JRTC系统内注册过的userId (Optional)
 * param streamId: 要关闭的流ID (Optional)
 */
func NewCloseRoomUserStreamRequestWithAllParams(
    appId string,
    userRoomId *string,
    userId *string,
    streamId *string,
) *CloseRoomUserStreamRequest {

    return &CloseRoomUserStreamRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/closeRoomUserStream/{appId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        UserRoomId: userRoomId,
        UserId: userId,
        StreamId: streamId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCloseRoomUserStreamRequestWithoutParam() *CloseRoomUserStreamRequest {

    return &CloseRoomUserStreamRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/closeRoomUserStream/{appId}",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用ID(Required) */
func (r *CloseRoomUserStreamRequest) SetAppId(appId string) {
    r.AppId = appId
}
/* param userRoomId: 业务接入方定义的且在JRTC系统内注册过的房间号(Optional) */
func (r *CloseRoomUserStreamRequest) SetUserRoomId(userRoomId string) {
    r.UserRoomId = &userRoomId
}
/* param userId: 业务接入方用户体系定义的且在JRTC系统内注册过的userId(Optional) */
func (r *CloseRoomUserStreamRequest) SetUserId(userId string) {
    r.UserId = &userId
}
/* param streamId: 要关闭的流ID(Optional) */
func (r *CloseRoomUserStreamRequest) SetStreamId(streamId string) {
    r.StreamId = &streamId
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CloseRoomUserStreamRequest) GetRegionId() string {
    return ""
}

type CloseRoomUserStreamResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CloseRoomUserStreamResult `json:"result"`
}

type CloseRoomUserStreamResult struct {
}