// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    vm "github.com/jdcloud-api/jdcloud-sdk-go/services/vm/models"
)

type CreateImageFromSnapshotsRequest struct {

    core.JDCloudRequest

    /* 地域ID。  */
    RegionId string `json:"regionId"`

    /* 镜像名称，长度为2\~32个字符，只允许中文、数字、大小写字母、英文下划线（\_）、连字符（-）及点（.）。
  */
    Name string `json:"name"`

    /* 镜像描述，256字符以内。
 (Optional) */
    Description *string `json:"description"`

    /* 镜像的操作系统类型, 可选值：CentOS、Ubuntu、Windows Server、OpenEuler、Rocky Linux、Others Linux。
  */
    Platform string `json:"platform"`

    /* 操作系统版本。如：7.9
 (Optional) */
    OsVersion *string `json:"osVersion"`

    /* 操作系统架构, 可选值：x86_64、arm64。
  */
    Architecture string `json:"architecture"`

    /* 云盘快照信息。
 (Optional) */
    CloudDisks []vm.CloudDiskSpec `json:"cloudDisks"`

    /* 用于保证请求的幂等性。由客户端生成，并确保不同请求中该参数唯一，长度不能超过64个字符。
 (Optional) */
    ClientToken *string `json:"clientToken"`

    /* 启动模式，支持uefi、bios。   
  */
    BootMode string `json:"bootMode"`
}

/*
 * param regionId: 地域ID。 (Required)
 * param name: 镜像名称，长度为2\~32个字符，只允许中文、数字、大小写字母、英文下划线（\_）、连字符（-）及点（.）。
 (Required)
 * param platform: 镜像的操作系统类型, 可选值：CentOS、Ubuntu、Windows Server、OpenEuler、Rocky Linux、Others Linux。
 (Required)
 * param architecture: 操作系统架构, 可选值：x86_64、arm64。
 (Required)
 * param bootMode: 启动模式，支持uefi、bios。   
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateImageFromSnapshotsRequest(
    regionId string,
    name string,
    platform string,
    architecture string,
    bootMode string,
) *CreateImageFromSnapshotsRequest {

	return &CreateImageFromSnapshotsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/images:createImageFromSnapshots",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Name: name,
        Platform: platform,
        Architecture: architecture,
        BootMode: bootMode,
	}
}

/*
 * param regionId: 地域ID。 (Required)
 * param name: 镜像名称，长度为2\~32个字符，只允许中文、数字、大小写字母、英文下划线（\_）、连字符（-）及点（.）。
 (Required)
 * param description: 镜像描述，256字符以内。
 (Optional)
 * param platform: 镜像的操作系统类型, 可选值：CentOS、Ubuntu、Windows Server、OpenEuler、Rocky Linux、Others Linux。
 (Required)
 * param osVersion: 操作系统版本。如：7.9
 (Optional)
 * param architecture: 操作系统架构, 可选值：x86_64、arm64。
 (Required)
 * param cloudDisks: 云盘快照信息。
 (Optional)
 * param clientToken: 用于保证请求的幂等性。由客户端生成，并确保不同请求中该参数唯一，长度不能超过64个字符。
 (Optional)
 * param bootMode: 启动模式，支持uefi、bios。   
 (Required)
 */
func NewCreateImageFromSnapshotsRequestWithAllParams(
    regionId string,
    name string,
    description *string,
    platform string,
    osVersion *string,
    architecture string,
    cloudDisks []vm.CloudDiskSpec,
    clientToken *string,
    bootMode string,
) *CreateImageFromSnapshotsRequest {

    return &CreateImageFromSnapshotsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/images:createImageFromSnapshots",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Name: name,
        Description: description,
        Platform: platform,
        OsVersion: osVersion,
        Architecture: architecture,
        CloudDisks: cloudDisks,
        ClientToken: clientToken,
        BootMode: bootMode,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateImageFromSnapshotsRequestWithoutParam() *CreateImageFromSnapshotsRequest {

    return &CreateImageFromSnapshotsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/images:createImageFromSnapshots",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID。(Required) */
func (r *CreateImageFromSnapshotsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param name: 镜像名称，长度为2\~32个字符，只允许中文、数字、大小写字母、英文下划线（\_）、连字符（-）及点（.）。
(Required) */
func (r *CreateImageFromSnapshotsRequest) SetName(name string) {
    r.Name = name
}
/* param description: 镜像描述，256字符以内。
(Optional) */
func (r *CreateImageFromSnapshotsRequest) SetDescription(description string) {
    r.Description = &description
}
/* param platform: 镜像的操作系统类型, 可选值：CentOS、Ubuntu、Windows Server、OpenEuler、Rocky Linux、Others Linux。
(Required) */
func (r *CreateImageFromSnapshotsRequest) SetPlatform(platform string) {
    r.Platform = platform
}
/* param osVersion: 操作系统版本。如：7.9
(Optional) */
func (r *CreateImageFromSnapshotsRequest) SetOsVersion(osVersion string) {
    r.OsVersion = &osVersion
}
/* param architecture: 操作系统架构, 可选值：x86_64、arm64。
(Required) */
func (r *CreateImageFromSnapshotsRequest) SetArchitecture(architecture string) {
    r.Architecture = architecture
}
/* param cloudDisks: 云盘快照信息。
(Optional) */
func (r *CreateImageFromSnapshotsRequest) SetCloudDisks(cloudDisks []vm.CloudDiskSpec) {
    r.CloudDisks = cloudDisks
}
/* param clientToken: 用于保证请求的幂等性。由客户端生成，并确保不同请求中该参数唯一，长度不能超过64个字符。
(Optional) */
func (r *CreateImageFromSnapshotsRequest) SetClientToken(clientToken string) {
    r.ClientToken = &clientToken
}
/* param bootMode: 启动模式，支持uefi、bios。   
(Required) */
func (r *CreateImageFromSnapshotsRequest) SetBootMode(bootMode string) {
    r.BootMode = bootMode
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateImageFromSnapshotsRequest) GetRegionId() string {
    return r.RegionId
}

type CreateImageFromSnapshotsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateImageFromSnapshotsResult `json:"result"`
}

type CreateImageFromSnapshotsResult struct {
    ImageId string `json:"imageId"`
}