// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type CreateMountTargetRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 创建挂载目标的文件系统  */
    FileSystemId string `json:"fileSystemId"`

    /* 子网id  */
    SubnetId string `json:"subnetId"`

    /* vpcId  */
    VpcId string `json:"vpcId"`

    /* 安全组id (Optional) */
    SecurityGroupId *string `json:"securityGroupId"`

    /* 幂等性参数(只支持数字、大小写字母，且不能超过64字符)  */
    ClientToken string `json:"clientToken"`
}

/*
 * param regionId: 地域ID (Required)
 * param fileSystemId: 创建挂载目标的文件系统 (Required)
 * param subnetId: 子网id (Required)
 * param vpcId: vpcId (Required)
 * param clientToken: 幂等性参数(只支持数字、大小写字母，且不能超过64字符) (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateMountTargetRequest(
    regionId string,
    fileSystemId string,
    subnetId string,
    vpcId string,
    clientToken string,
) *CreateMountTargetRequest {

	return &CreateMountTargetRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/mountTargets",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        FileSystemId: fileSystemId,
        SubnetId: subnetId,
        VpcId: vpcId,
        ClientToken: clientToken,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param fileSystemId: 创建挂载目标的文件系统 (Required)
 * param subnetId: 子网id (Required)
 * param vpcId: vpcId (Required)
 * param securityGroupId: 安全组id (Optional)
 * param clientToken: 幂等性参数(只支持数字、大小写字母，且不能超过64字符) (Required)
 */
func NewCreateMountTargetRequestWithAllParams(
    regionId string,
    fileSystemId string,
    subnetId string,
    vpcId string,
    securityGroupId *string,
    clientToken string,
) *CreateMountTargetRequest {

    return &CreateMountTargetRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/mountTargets",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        FileSystemId: fileSystemId,
        SubnetId: subnetId,
        VpcId: vpcId,
        SecurityGroupId: securityGroupId,
        ClientToken: clientToken,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateMountTargetRequestWithoutParam() *CreateMountTargetRequest {

    return &CreateMountTargetRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/mountTargets",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateMountTargetRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param fileSystemId: 创建挂载目标的文件系统(Required) */
func (r *CreateMountTargetRequest) SetFileSystemId(fileSystemId string) {
    r.FileSystemId = fileSystemId
}

/* param subnetId: 子网id(Required) */
func (r *CreateMountTargetRequest) SetSubnetId(subnetId string) {
    r.SubnetId = subnetId
}

/* param vpcId: vpcId(Required) */
func (r *CreateMountTargetRequest) SetVpcId(vpcId string) {
    r.VpcId = vpcId
}

/* param securityGroupId: 安全组id(Optional) */
func (r *CreateMountTargetRequest) SetSecurityGroupId(securityGroupId string) {
    r.SecurityGroupId = &securityGroupId
}

/* param clientToken: 幂等性参数(只支持数字、大小写字母，且不能超过64字符)(Required) */
func (r *CreateMountTargetRequest) SetClientToken(clientToken string) {
    r.ClientToken = clientToken
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateMountTargetRequest) GetRegionId() string {
    return r.RegionId
}

type CreateMountTargetResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateMountTargetResult `json:"result"`
}

type CreateMountTargetResult struct {
    MountTargetId string `json:"mountTargetId"`
}