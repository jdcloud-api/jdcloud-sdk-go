// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    ipanti "github.com/jdcloud-api/jdcloud-sdk-go/services/ipanti/models"
)

type DescribeWebRulesRequest struct {

    core.JDCloudRequest

    /* 区域 Id  */
    RegionId string `json:"regionId"`

    /* 高防实例 Id  */
    InstanceId int `json:"instanceId"`

    /* 页码, 默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小, 默认为10, 取值范围[10, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 查询类型名称, domain:源站域名, ip:源站 IP, rawDomain: 域名 (Optional) */
    SearchType *string `json:"searchType"`

    /* 查询类型值 (Optional) */
    SearchValue *string `json:"searchValue"`
}

/*
 * param regionId: 区域 Id (Required)
 * param instanceId: 高防实例 Id (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeWebRulesRequest(
    regionId string,
    instanceId int,
) *DescribeWebRulesRequest {

	return &DescribeWebRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/webRules",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        InstanceId: instanceId,
	}
}

/*
 * param regionId: 区域 Id (Required)
 * param instanceId: 高防实例 Id (Required)
 * param pageNumber: 页码, 默认为1 (Optional)
 * param pageSize: 分页大小, 默认为10, 取值范围[10, 100] (Optional)
 * param searchType: 查询类型名称, domain:源站域名, ip:源站 IP, rawDomain: 域名 (Optional)
 * param searchValue: 查询类型值 (Optional)
 */
func NewDescribeWebRulesRequestWithAllParams(
    regionId string,
    instanceId int,
    pageNumber *int,
    pageSize *int,
    searchType *string,
    searchValue *string,
) *DescribeWebRulesRequest {

    return &DescribeWebRulesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/webRules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        SearchType: searchType,
        SearchValue: searchValue,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeWebRulesRequestWithoutParam() *DescribeWebRulesRequest {

    return &DescribeWebRulesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/webRules",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 区域 Id(Required) */
func (r *DescribeWebRulesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: 高防实例 Id(Required) */
func (r *DescribeWebRulesRequest) SetInstanceId(instanceId int) {
    r.InstanceId = instanceId
}

/* param pageNumber: 页码, 默认为1(Optional) */
func (r *DescribeWebRulesRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 分页大小, 默认为10, 取值范围[10, 100](Optional) */
func (r *DescribeWebRulesRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param searchType: 查询类型名称, domain:源站域名, ip:源站 IP, rawDomain: 域名(Optional) */
func (r *DescribeWebRulesRequest) SetSearchType(searchType string) {
    r.SearchType = &searchType
}

/* param searchValue: 查询类型值(Optional) */
func (r *DescribeWebRulesRequest) SetSearchValue(searchValue string) {
    r.SearchValue = &searchValue
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeWebRulesRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeWebRulesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeWebRulesResult `json:"result"`
}

type DescribeWebRulesResult struct {
    DataList []ipanti.WebRule `json:"dataList"`
    CurrentCount int `json:"currentCount"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}