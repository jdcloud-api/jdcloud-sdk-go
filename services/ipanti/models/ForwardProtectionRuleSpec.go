// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package models


type ForwardProtectionRuleSpec struct {

    /* 虚假源与空连接, 0: 关闭, 1: 开启  */
    SpoofIpEnable int `json:"spoofIpEnable"`

    /* 源新建连接限速, 0: 关闭, 1: 开启  */
    SrcNewConnLimitEnable int `json:"srcNewConnLimitEnable"`

    /* 源新建连接速率  */
    SrcNewConnLimitValue int64 `json:"srcNewConnLimitValue"`

    /* 源并发连接限速, 0: 关闭, 1: 开启  */
    SrcConcurrentConnLimitEnable int `json:"srcConcurrentConnLimitEnable"`

    /* 源并发连接速率  */
    SrcConcurrentConnLimitValue int64 `json:"srcConcurrentConnLimitValue"`

    /* 目的新建连接, 0: 关闭, 1: 开启  */
    DstNewConnLimitEnable int `json:"dstNewConnLimitEnable"`

    /* 目的新建连接速率  */
    DstNewConnLimitValue int64 `json:"dstNewConnLimitValue"`

    /* 目的并发连接, 0: 关闭, 1: 开启  */
    DstConcurrentConnLimitEnable int `json:"dstConcurrentConnLimitEnable"`

    /* 目的并发连接速率  */
    DstConcurrentConnLimitValue int64 `json:"dstConcurrentConnLimitValue"`

    /* 报文最小长度, 取值范围[0, datagramRangeMax)  */
    DatagramRangeMin int64 `json:"datagramRangeMin"`

    /* 报文最大长度, 取值范围(datagramRangeMin, 1518]  */
    DatagramRangeMax int64 `json:"datagramRangeMax"`

    /* geo 拦截地域编码列表, 可设置编码列表由 describeGeoAreas 接口查询可得 (Optional) */
    GeoBlackList []string `json:"geoBlackList"`
}
