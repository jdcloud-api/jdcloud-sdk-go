// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    elite "github.com/jdcloud-api/jdcloud-sdk-go/services/elite/models"
)

type ListSaleServiceRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 页码（最小1）  */
    PageNo int `json:"pageNo"`

    /* 每页记录数（最小10，最大100）  */
    PageSize int `json:"pageSize"`

    /* 交付单号 (Optional) */
    DeliverNumber *string `json:"deliverNumber"`

    /* 交付状态 (Optional) */
    DeliverStatus *int `json:"deliverStatus"`

    /* 交付单创建起始时间，格式：yyyy-MM-dd HH:mm:ss (Optional) */
    CreateDtStart *string `json:"createDtStart"`

    /* 交付单创建结束时间，格式：yyyy-MM-dd HH:mm:ss (Optional) */
    CreateDtEnd *string `json:"createDtEnd"`
}

/*
 * param regionId: 地域ID (Required)
 * param pageNo: 页码（最小1） (Required)
 * param pageSize: 每页记录数（最小10，最大100） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewListSaleServiceRequest(
    regionId string,
    pageNo int,
    pageSize int,
) *ListSaleServiceRequest {

	return &ListSaleServiceRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/listSaleService",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        PageNo: pageNo,
        PageSize: pageSize,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param pageNo: 页码（最小1） (Required)
 * param pageSize: 每页记录数（最小10，最大100） (Required)
 * param deliverNumber: 交付单号 (Optional)
 * param deliverStatus: 交付状态 (Optional)
 * param createDtStart: 交付单创建起始时间，格式：yyyy-MM-dd HH:mm:ss (Optional)
 * param createDtEnd: 交付单创建结束时间，格式：yyyy-MM-dd HH:mm:ss (Optional)
 */
func NewListSaleServiceRequestWithAllParams(
    regionId string,
    pageNo int,
    pageSize int,
    deliverNumber *string,
    deliverStatus *int,
    createDtStart *string,
    createDtEnd *string,
) *ListSaleServiceRequest {

    return &ListSaleServiceRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/listSaleService",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNo: pageNo,
        PageSize: pageSize,
        DeliverNumber: deliverNumber,
        DeliverStatus: deliverStatus,
        CreateDtStart: createDtStart,
        CreateDtEnd: createDtEnd,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewListSaleServiceRequestWithoutParam() *ListSaleServiceRequest {

    return &ListSaleServiceRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/listSaleService",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *ListSaleServiceRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageNo: 页码（最小1）(Required) */
func (r *ListSaleServiceRequest) SetPageNo(pageNo int) {
    r.PageNo = pageNo
}

/* param pageSize: 每页记录数（最小10，最大100）(Required) */
func (r *ListSaleServiceRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}

/* param deliverNumber: 交付单号(Optional) */
func (r *ListSaleServiceRequest) SetDeliverNumber(deliverNumber string) {
    r.DeliverNumber = &deliverNumber
}

/* param deliverStatus: 交付状态(Optional) */
func (r *ListSaleServiceRequest) SetDeliverStatus(deliverStatus int) {
    r.DeliverStatus = &deliverStatus
}

/* param createDtStart: 交付单创建起始时间，格式：yyyy-MM-dd HH:mm:ss(Optional) */
func (r *ListSaleServiceRequest) SetCreateDtStart(createDtStart string) {
    r.CreateDtStart = &createDtStart
}

/* param createDtEnd: 交付单创建结束时间，格式：yyyy-MM-dd HH:mm:ss(Optional) */
func (r *ListSaleServiceRequest) SetCreateDtEnd(createDtEnd string) {
    r.CreateDtEnd = &createDtEnd
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ListSaleServiceRequest) GetRegionId() string {
    return r.RegionId
}

type ListSaleServiceResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ListSaleServiceResult `json:"result"`
}

type ListSaleServiceResult struct {
    Status bool `json:"status"`
    Message string `json:"message"`
    Data elite.ProductServiceVoListData `json:"data"`
}