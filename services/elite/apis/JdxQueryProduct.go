// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    elite "github.com/lshuining/jdcloud-sdk-go/services/elite/models"
)

type JdxQueryProductRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 页码（最小1）  */
    PageNo int `json:"pageNo"`

    /* 每页记录数（最小10，最大100）  */
    PageSize int `json:"pageSize"`
}

/*
 * param regionId: 地域ID (Required)
 * param pageNo: 页码（最小1） (Required)
 * param pageSize: 每页记录数（最小10，最大100） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewJdxQueryProductRequest(
    regionId string,
    pageNo int,
    pageSize int,
) *JdxQueryProductRequest {

	return &JdxQueryProductRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/jdxQueryProduct",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        PageNo: pageNo,
        PageSize: pageSize,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param pageNo: 页码（最小1） (Required)
 * param pageSize: 每页记录数（最小10，最大100） (Required)
 */
func NewJdxQueryProductRequestWithAllParams(
    regionId string,
    pageNo int,
    pageSize int,
) *JdxQueryProductRequest {

    return &JdxQueryProductRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/jdxQueryProduct",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PageNo: pageNo,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewJdxQueryProductRequestWithoutParam() *JdxQueryProductRequest {

    return &JdxQueryProductRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/jdxQueryProduct",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *JdxQueryProductRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param pageNo: 页码（最小1）(Required) */
func (r *JdxQueryProductRequest) SetPageNo(pageNo int) {
    r.PageNo = pageNo
}

/* param pageSize: 每页记录数（最小10，最大100）(Required) */
func (r *JdxQueryProductRequest) SetPageSize(pageSize int) {
    r.PageSize = pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r JdxQueryProductRequest) GetRegionId() string {
    return r.RegionId
}

type JdxQueryProductResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result JdxQueryProductResult `json:"result"`
}

type JdxQueryProductResult struct {
    Status bool `json:"status"`
    Message string `json:"message"`
    Data elite.JdxProductVoListData `json:"data"`
}