// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    jdaip "github.com/jdcloud-api/jdcloud-sdk-go/services/jdaip/models"
)

type GetJobEventsRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 工作空间ID  */
    WorkspaceId string `json:"workspaceId"`

    /* 训练任务ID  */
    JobId string `json:"jobId"`

    /* 页码；默认为1。 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 分页大小；默认为20；取值范围[1, 500]。 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 事件开始时间。 (Optional) */
    StartTime *string `json:"startTime"`

    /* 事件结束时间。 (Optional) */
    EndTime *string `json:"endTime"`
}

/*
 * param regionId: 地域ID (Required)
 * param workspaceId: 工作空间ID (Required)
 * param jobId: 训练任务ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetJobEventsRequest(
    regionId string,
    workspaceId string,
    jobId string,
) *GetJobEventsRequest {

	return &GetJobEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/train/{regionId}/workspaces/{workspaceId}/jobs/{jobId}:events",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        WorkspaceId: workspaceId,
        JobId: jobId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param workspaceId: 工作空间ID (Required)
 * param jobId: 训练任务ID (Required)
 * param pageNumber: 页码；默认为1。 (Optional)
 * param pageSize: 分页大小；默认为20；取值范围[1, 500]。 (Optional)
 * param startTime: 事件开始时间。 (Optional)
 * param endTime: 事件结束时间。 (Optional)
 */
func NewGetJobEventsRequestWithAllParams(
    regionId string,
    workspaceId string,
    jobId string,
    pageNumber *int,
    pageSize *int,
    startTime *string,
    endTime *string,
) *GetJobEventsRequest {

    return &GetJobEventsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/train/{regionId}/workspaces/{workspaceId}/jobs/{jobId}:events",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        WorkspaceId: workspaceId,
        JobId: jobId,
        PageNumber: pageNumber,
        PageSize: pageSize,
        StartTime: startTime,
        EndTime: endTime,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetJobEventsRequestWithoutParam() *GetJobEventsRequest {

    return &GetJobEventsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/train/{regionId}/workspaces/{workspaceId}/jobs/{jobId}:events",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *GetJobEventsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param workspaceId: 工作空间ID(Required) */
func (r *GetJobEventsRequest) SetWorkspaceId(workspaceId string) {
    r.WorkspaceId = workspaceId
}
/* param jobId: 训练任务ID(Required) */
func (r *GetJobEventsRequest) SetJobId(jobId string) {
    r.JobId = jobId
}
/* param pageNumber: 页码；默认为1。(Optional) */
func (r *GetJobEventsRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}
/* param pageSize: 分页大小；默认为20；取值范围[1, 500]。(Optional) */
func (r *GetJobEventsRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}
/* param startTime: 事件开始时间。(Optional) */
func (r *GetJobEventsRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}
/* param endTime: 事件结束时间。(Optional) */
func (r *GetJobEventsRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetJobEventsRequest) GetRegionId() string {
    return r.RegionId
}

type GetJobEventsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetJobEventsResult `json:"result"`
}

type GetJobEventsResult struct {
    EventInfoList []jdaip.EventInfoList `json:"eventInfoList"`
    TotalCount int `json:"totalCount"`
}