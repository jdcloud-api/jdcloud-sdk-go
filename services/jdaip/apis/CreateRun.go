// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    jdaip "github.com/jdcloud-api/jdcloud-sdk-go/services/jdaip/models"
)

type CreateRunRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* 工作空间ID  */
    WorkspaceId string `json:"workspaceId"`

    /* 微调实验ID  */
    ExperimentId string `json:"experimentId"`

    /* 基本参数。  */
    RunParam *jdaip.RunParam `json:"runParam"`
}

/*
 * param regionId: 地域ID (Required)
 * param workspaceId: 工作空间ID (Required)
 * param experimentId: 微调实验ID (Required)
 * param runParam: 基本参数。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateRunRequest(
    regionId string,
    workspaceId string,
    experimentId string,
    runParam *jdaip.RunParam,
) *CreateRunRequest {

	return &CreateRunRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/train/{regionId}/workspaces/{workspaceId}/experiments/{experimentId}/runs",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        WorkspaceId: workspaceId,
        ExperimentId: experimentId,
        RunParam: runParam,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param workspaceId: 工作空间ID (Required)
 * param experimentId: 微调实验ID (Required)
 * param runParam: 基本参数。 (Required)
 */
func NewCreateRunRequestWithAllParams(
    regionId string,
    workspaceId string,
    experimentId string,
    runParam *jdaip.RunParam,
) *CreateRunRequest {

    return &CreateRunRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/train/{regionId}/workspaces/{workspaceId}/experiments/{experimentId}/runs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        WorkspaceId: workspaceId,
        ExperimentId: experimentId,
        RunParam: runParam,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateRunRequestWithoutParam() *CreateRunRequest {

    return &CreateRunRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/train/{regionId}/workspaces/{workspaceId}/experiments/{experimentId}/runs",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateRunRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param workspaceId: 工作空间ID(Required) */
func (r *CreateRunRequest) SetWorkspaceId(workspaceId string) {
    r.WorkspaceId = workspaceId
}
/* param experimentId: 微调实验ID(Required) */
func (r *CreateRunRequest) SetExperimentId(experimentId string) {
    r.ExperimentId = experimentId
}
/* param runParam: 基本参数。(Required) */
func (r *CreateRunRequest) SetRunParam(runParam *jdaip.RunParam) {
    r.RunParam = runParam
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateRunRequest) GetRegionId() string {
    return r.RegionId
}

type CreateRunResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateRunResult `json:"result"`
}

type CreateRunResult struct {
    RunId string `json:"runId"`
}