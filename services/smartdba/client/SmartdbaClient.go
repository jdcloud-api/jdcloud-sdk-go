// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package client

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    smartdba "github.com/lshuining/jdcloud-sdk-go/services/smartdba/apis"
    "encoding/json"
    "errors"
)

type SmartdbaClient struct {
    core.JDCloudClient
}

func NewSmartdbaClient(credential *core.Credential) *SmartdbaClient {
    if credential == nil {
        return nil
    }

    config := core.NewConfig()
    config.SetEndpoint("smartdba.jdcloud-api.com")

    return &SmartdbaClient{
        core.JDCloudClient{
            Credential:  *credential,
            Config:      *config,
            ServiceName: "smartdba",
            Revision:    "2.0.1",
            Logger:      core.NewDefaultLogger(core.LogInfo),
        }}
}

func (c *SmartdbaClient) SetConfig(config *core.Config) {
    c.Config = *config
}

func (c *SmartdbaClient) SetLogger(logger core.Logger) {
    c.Logger = logger
}

func (c *SmartdbaClient) DisableLogger() {
    c.Logger = core.NewDummyLogger()
}

/* 获取当前实例的所有诊断记录 */
func (c *SmartdbaClient) DescribeDiagnoseList(request *smartdba.DescribeDiagnoseListRequest) (*smartdba.DescribeDiagnoseListResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeDiagnoseListResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取巡检记录 */
func (c *SmartdbaClient) DescribeInspect(request *smartdba.DescribeInspectRequest) (*smartdba.DescribeInspectResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeInspectResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取当前实例的会话信息 */
func (c *SmartdbaClient) DescribeSessions(request *smartdba.DescribeSessionsRequest) (*smartdba.DescribeSessionsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSessionsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 空间明细 */
func (c *SmartdbaClient) DescribeTableSpaceDetail(request *smartdba.DescribeTableSpaceDetailRequest) (*smartdba.DescribeTableSpaceDetailResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeTableSpaceDetailResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取指定库下的所有表名 */
func (c *SmartdbaClient) DescribeAllTableInfoForDb(request *smartdba.DescribeAllTableInfoForDbRequest) (*smartdba.DescribeAllTableInfoForDbResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAllTableInfoForDbResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取待接入的mysql实例 */
func (c *SmartdbaClient) ToBeConnectClusters(request *smartdba.ToBeConnectClustersRequest) (*smartdba.ToBeConnectClustersResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.ToBeConnectClustersResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取一键诊断分数最低的top5 */
func (c *SmartdbaClient) DescribeDiagnoseTopResource(request *smartdba.DescribeDiagnoseTopResourceRequest) (*smartdba.DescribeDiagnoseTopResourceResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeDiagnoseTopResourceResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取锁诊断详情 */
func (c *SmartdbaClient) DescribeLockAnalyse(request *smartdba.DescribeLockAnalyseRequest) (*smartdba.DescribeLockAnalyseResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeLockAnalyseResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 修改关联实例，每次都是全量下发 */
func (c *SmartdbaClient) UpdatePanelClusters(request *smartdba.UpdatePanelClustersRequest) (*smartdba.UpdatePanelClustersResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.UpdatePanelClustersResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取已接入mysql实例列表 */
func (c *SmartdbaClient) DescribeClusterList(request *smartdba.DescribeClusterListRequest) (*smartdba.DescribeClusterListResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeClusterListResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取当前实例的所有诊断记录 */
func (c *SmartdbaClient) DescribeAnalyseList(request *smartdba.DescribeAnalyseListRequest) (*smartdba.DescribeAnalyseListResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAnalyseListResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取未提交事务信息 */
func (c *SmartdbaClient) DescribeUnCommitTrxs(request *smartdba.DescribeUnCommitTrxsRequest) (*smartdba.DescribeUnCommitTrxsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeUnCommitTrxsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询慢sql次数及分布 */
func (c *SmartdbaClient) DescribeSlowSqlMetric(request *smartdba.DescribeSlowSqlMetricRequest) (*smartdba.DescribeSlowSqlMetricResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSlowSqlMetricResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取冗余索引和未使用索引的信息 */
func (c *SmartdbaClient) DescribeIndexs(request *smartdba.DescribeIndexsRequest) (*smartdba.DescribeIndexsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeIndexsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取事务锁信息 */
func (c *SmartdbaClient) DescribeTrxLocks(request *smartdba.DescribeTrxLocksRequest) (*smartdba.DescribeTrxLocksResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeTrxLocksResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 添加监控大盘 */
func (c *SmartdbaClient) CreatePanel(request *smartdba.CreatePanelRequest) (*smartdba.CreatePanelResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CreatePanelResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取诊断记录 */
func (c *SmartdbaClient) DescribeDiagnose(request *smartdba.DescribeDiagnoseRequest) (*smartdba.DescribeDiagnoseResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeDiagnoseResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 最近3小时，24小时，3天慢sql情况 */
func (c *SmartdbaClient) DescribeslowLogStatistic(request *smartdba.DescribeslowLogStatisticRequest) (*smartdba.DescribeslowLogStatisticResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeslowLogStatisticResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询监控值 */
func (c *SmartdbaClient) DescribeMetricValueByGid(request *smartdba.DescribeMetricValueByGidRequest) (*smartdba.DescribeMetricValueByGidResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeMetricValueByGidResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取空间信息 */
func (c *SmartdbaClient) DescribeStorages(request *smartdba.DescribeStoragesRequest) (*smartdba.DescribeStoragesResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeStoragesResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 近一小时告警列表，按级别倒序 */
func (c *SmartdbaClient) DescribeAlarmResource(request *smartdba.DescribeAlarmResourceRequest) (*smartdba.DescribeAlarmResourceResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAlarmResourceResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* kill当前实例指定的会话 */
func (c *SmartdbaClient) KillSession(request *smartdba.KillSessionRequest) (*smartdba.KillSessionResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.KillSessionResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询支持自定义的监控指标 */
func (c *SmartdbaClient) DescribeSupportMetrics(request *smartdba.DescribeSupportMetricsRequest) (*smartdba.DescribeSupportMetricsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSupportMetricsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 最近5分钟(或历史某点5分钟)，top5的资源 */
func (c *SmartdbaClient) GetTopResourceByMetric(request *smartdba.GetTopResourceByMetricRequest) (*smartdba.GetTopResourceByMetricResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.GetTopResourceByMetricResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 取消实例接入 */
func (c *SmartdbaClient) CancleConnect(request *smartdba.CancleConnectRequest) (*smartdba.CancleConnectResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CancleConnectResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取实例详情 */
func (c *SmartdbaClient) DescribeClusterDetail(request *smartdba.DescribeClusterDetailRequest) (*smartdba.DescribeClusterDetailResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeClusterDetailResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询监控大盘监控值 */
func (c *SmartdbaClient) DescribePanelMetricValueByGid(request *smartdba.DescribePanelMetricValueByGidRequest) (*smartdba.DescribePanelMetricValueByGidResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribePanelMetricValueByGidResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 关联实例自定义监控项，每次都要求全量提交 */
func (c *SmartdbaClient) BindMetrics(request *smartdba.BindMetricsRequest) (*smartdba.BindMetricsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.BindMetricsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* SQL优化 */
func (c *SmartdbaClient) TurningSql(request *smartdba.TurningSqlRequest) (*smartdba.TurningSqlResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.TurningSqlResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 新接入mysql实例 */
func (c *SmartdbaClient) CreateCluster(request *smartdba.CreateClusterRequest) (*smartdba.CreateClusterResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CreateClusterResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 根据诊断id进行表诊断 */
func (c *SmartdbaClient) CheckTableByType(request *smartdba.CheckTableByTypeRequest) (*smartdba.CheckTableByTypeResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CheckTableByTypeResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取当前实例系统信息 */
func (c *SmartdbaClient) DescribeSystemInfo(request *smartdba.DescribeSystemInfoRequest) (*smartdba.DescribeSystemInfoResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSystemInfoResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取非事务锁信息 */
func (c *SmartdbaClient) DescribeUntrxLocks(request *smartdba.DescribeUntrxLocksRequest) (*smartdba.DescribeUntrxLocksResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeUntrxLocksResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* SQL explain执行计划 */
func (c *SmartdbaClient) ExplainSql(request *smartdba.ExplainSqlRequest) (*smartdba.ExplainSqlResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.ExplainSqlResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取实时会话信息 */
func (c *SmartdbaClient) DescribeNowSessions(request *smartdba.DescribeNowSessionsRequest) (*smartdba.DescribeNowSessionsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeNowSessionsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 删除监控大盘 */
func (c *SmartdbaClient) DeletePanel(request *smartdba.DeletePanelRequest) (*smartdba.DeletePanelResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DeletePanelResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 死锁诊断 */
func (c *SmartdbaClient) CreateLockAnalyse(request *smartdba.CreateLockAnalyseRequest) (*smartdba.CreateLockAnalyseResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CreateLockAnalyseResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取当前实例指定时间的慢SQL统计 */
func (c *SmartdbaClient) DescribeSlowDigestLog(request *smartdba.DescribeSlowDigestLogRequest) (*smartdba.DescribeSlowDigestLogResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSlowDigestLogResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询告警历史 */
func (c *SmartdbaClient) DescribeAlarmHistory(request *smartdba.DescribeAlarmHistoryRequest) (*smartdba.DescribeAlarmHistoryResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAlarmHistoryResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 库空间Top 10 */
func (c *SmartdbaClient) DescribeSchemaSpaceTop(request *smartdba.DescribeSchemaSpaceTopRequest) (*smartdba.DescribeSchemaSpaceTopResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSchemaSpaceTopResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询支持诊断的类型 */
func (c *SmartdbaClient) CheckTableTypes(request *smartdba.CheckTableTypesRequest) (*smartdba.CheckTableTypesResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CheckTableTypesResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取告警数量，用于趋势展示 */
func (c *SmartdbaClient) DescribeAlarmTrend(request *smartdba.DescribeAlarmTrendRequest) (*smartdba.DescribeAlarmTrendResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAlarmTrendResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取关联实例 */
func (c *SmartdbaClient) GetPanelRelateClusters(request *smartdba.GetPanelRelateClustersRequest) (*smartdba.GetPanelRelateClustersResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.GetPanelRelateClustersResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 一键诊断 */
func (c *SmartdbaClient) CreateDiagnose(request *smartdba.CreateDiagnoseRequest) (*smartdba.CreateDiagnoseResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.CreateDiagnoseResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取实例时间范围内按 dbName、userName、clientIP 分组统计的慢sql条数信息 */
func (c *SmartdbaClient) DescribeSlowLogDimensionsStatistic(request *smartdba.DescribeSlowLogDimensionsStatisticRequest) (*smartdba.DescribeSlowLogDimensionsStatisticResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSlowLogDimensionsStatisticResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取空间趋势 */
func (c *SmartdbaClient) DescribeStorageTrend(request *smartdba.DescribeStorageTrendRequest) (*smartdba.DescribeStorageTrendResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeStorageTrendResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 一键诊断趋势 */
func (c *SmartdbaClient) DescribeDiagnoseTrend(request *smartdba.DescribeDiagnoseTrendRequest) (*smartdba.DescribeDiagnoseTrendResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeDiagnoseTrendResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 最近3小时，24小时，3天报警数量 */
func (c *SmartdbaClient) DescribeAlarmStatistic(request *smartdba.DescribeAlarmStatisticRequest) (*smartdba.DescribeAlarmStatisticResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAlarmStatisticResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取实例的巡检记录列表 */
func (c *SmartdbaClient) DescribeInspectList(request *smartdba.DescribeInspectListRequest) (*smartdba.DescribeInspectListResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeInspectListResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 实例所有的库名 */
func (c *SmartdbaClient) DescribeAllDbInfo(request *smartdba.DescribeAllDbInfoRequest) (*smartdba.DescribeAllDbInfoResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeAllDbInfoResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取当前实例指定时间的慢SQL明细 */
func (c *SmartdbaClient) DescribeSlowLog(request *smartdba.DescribeSlowLogRequest) (*smartdba.DescribeSlowLogResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeSlowLogResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 获取监控大盘列表 */
func (c *SmartdbaClient) DescribePanelList(request *smartdba.DescribePanelListRequest) (*smartdba.DescribePanelListResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribePanelListResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 表空间Top 10 */
func (c *SmartdbaClient) DescribeTableSpaceTop(request *smartdba.DescribeTableSpaceTopRequest) (*smartdba.DescribeTableSpaceTopResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.DescribeTableSpaceTopResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

/* 查询实例已经绑定的监控项 */
func (c *SmartdbaClient) GetBindMetrics(request *smartdba.GetBindMetricsRequest) (*smartdba.GetBindMetricsResponse, error) {
    if request == nil {
        return nil, errors.New("Request object is nil. ")
    }
    resp, err := c.Send(request, c.ServiceName)
    if err != nil {
        return nil, err
    }

    jdResp := &smartdba.GetBindMetricsResponse{}
    err = json.Unmarshal(resp, jdResp)
    if err != nil {
        c.Logger.Log(core.LogError, "Unmarshal json failed, resp: %s", string(resp))
        return nil, err
    }

    return jdResp, err
}

