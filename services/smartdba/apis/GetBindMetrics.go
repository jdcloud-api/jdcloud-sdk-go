// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    smartdba "github.com/lshuining/jdcloud-sdk-go/services/smartdba/models"
)

type GetBindMetricsRequest struct {

    core.JDCloudRequest

    /* 地域代码  */
    RegionId string `json:"regionId"`

    /* panelType为real_time/monitor时,代表实例Id, panelType为market时，代表大盘 panelGid  */
    Gid string `json:"gid"`

    /* 展示类型，取值为： real_time 表示实时监控页面支持的自定义类型, monitor 表示性能趋势页面支持的类型  */
    PanelType string `json:"panelType"`

    /* 数据库库类型，目前只支持MySQL  */
    DbType string `json:"dbType"`
}

/*
 * param regionId: 地域代码 (Required)
 * param gid: panelType为real_time/monitor时,代表实例Id, panelType为market时，代表大盘 panelGid (Required)
 * param panelType: 展示类型，取值为： real_time 表示实时监控页面支持的自定义类型, monitor 表示性能趋势页面支持的类型 (Required)
 * param dbType: 数据库库类型，目前只支持MySQL (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewGetBindMetricsRequest(
    regionId string,
    gid string,
    panelType string,
    dbType string,
) *GetBindMetricsRequest {

	return &GetBindMetricsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instance/{gid}/getBindMetrics",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        Gid: gid,
        PanelType: panelType,
        DbType: dbType,
	}
}

/*
 * param regionId: 地域代码 (Required)
 * param gid: panelType为real_time/monitor时,代表实例Id, panelType为market时，代表大盘 panelGid (Required)
 * param panelType: 展示类型，取值为： real_time 表示实时监控页面支持的自定义类型, monitor 表示性能趋势页面支持的类型 (Required)
 * param dbType: 数据库库类型，目前只支持MySQL (Required)
 */
func NewGetBindMetricsRequestWithAllParams(
    regionId string,
    gid string,
    panelType string,
    dbType string,
) *GetBindMetricsRequest {

    return &GetBindMetricsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{gid}/getBindMetrics",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        Gid: gid,
        PanelType: panelType,
        DbType: dbType,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewGetBindMetricsRequestWithoutParam() *GetBindMetricsRequest {

    return &GetBindMetricsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{gid}/getBindMetrics",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码(Required) */
func (r *GetBindMetricsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param gid: panelType为real_time/monitor时,代表实例Id, panelType为market时，代表大盘 panelGid(Required) */
func (r *GetBindMetricsRequest) SetGid(gid string) {
    r.Gid = gid
}

/* param panelType: 展示类型，取值为： real_time 表示实时监控页面支持的自定义类型, monitor 表示性能趋势页面支持的类型(Required) */
func (r *GetBindMetricsRequest) SetPanelType(panelType string) {
    r.PanelType = panelType
}

/* param dbType: 数据库库类型，目前只支持MySQL(Required) */
func (r *GetBindMetricsRequest) SetDbType(dbType string) {
    r.DbType = dbType
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r GetBindMetricsRequest) GetRegionId() string {
    return r.RegionId
}

type GetBindMetricsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result GetBindMetricsResult `json:"result"`
}

type GetBindMetricsResult struct {
    Sys []smartdba.SupportMetric `json:"sys"`
    Server []smartdba.SupportMetric `json:"server"`
}