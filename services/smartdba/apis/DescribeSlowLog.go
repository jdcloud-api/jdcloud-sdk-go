// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    smartdba "github.com/lshuining/jdcloud-sdk-go/services/smartdba/models"
)

type DescribeSlowLogRequest struct {

    core.JDCloudRequest

    /* 地域代码  */
    RegionId string `json:"regionId"`

    /* 实例ID  */
    InstanceGid string `json:"instanceGid"`

    /* 查询开始时间，格式为：2006-01-02T15:04:05Z  */
    StartTime string `json:"startTime"`

    /* 查询截止时间，格式为：2006-01-02T15:04:05Z  */
    EndTime string `json:"endTime"`

    /* 过滤条件：数据库名 (Optional) */
    DbName *string `json:"dbName"`

    /* 过滤条件：client 用户名 (Optional) */
    UserName *string `json:"userName"`

    /* 过滤条件：client IP (Optional) */
    ClientIP *string `json:"clientIP"`

    /* 模糊查询关键字，只支持单个单词 (Optional) */
    Keyword4Search *string `json:"keyword4Search"`

    /* 排序的字段，支持 execTime,lockTime,rowsExamined,rowsSent,startTime 默认是 startTime (Optional) */
    Field *string `json:"field"`

    /* 排序方式，默认desc (Optional) */
    Sort *string `json:"sort"`

    /* 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码； (Optional) */
    PageIndex *int `json:"pageIndex"`

    /* 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口 (Optional) */
    PageSize *int `json:"pageSize"`
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceGid: 实例ID (Required)
 * param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z (Required)
 * param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeSlowLogRequest(
    regionId string,
    instanceGid string,
    startTime string,
    endTime string,
) *DescribeSlowLogRequest {

	return &DescribeSlowLogRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instance/{instanceGid}/slowLog",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InstanceGid: instanceGid,
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceGid: 实例ID (Required)
 * param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z (Required)
 * param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z (Required)
 * param dbName: 过滤条件：数据库名 (Optional)
 * param userName: 过滤条件：client 用户名 (Optional)
 * param clientIP: 过滤条件：client IP (Optional)
 * param keyword4Search: 模糊查询关键字，只支持单个单词 (Optional)
 * param field: 排序的字段，支持 execTime,lockTime,rowsExamined,rowsSent,startTime 默认是 startTime (Optional)
 * param sort: 排序方式，默认desc (Optional)
 * param pageIndex: 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码； (Optional)
 * param pageSize: 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口 (Optional)
 */
func NewDescribeSlowLogRequestWithAllParams(
    regionId string,
    instanceGid string,
    startTime string,
    endTime string,
    dbName *string,
    userName *string,
    clientIP *string,
    keyword4Search *string,
    field *string,
    sort *string,
    pageIndex *int,
    pageSize *int,
) *DescribeSlowLogRequest {

    return &DescribeSlowLogRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{instanceGid}/slowLog",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InstanceGid: instanceGid,
        StartTime: startTime,
        EndTime: endTime,
        DbName: dbName,
        UserName: userName,
        ClientIP: clientIP,
        Keyword4Search: keyword4Search,
        Field: field,
        Sort: sort,
        PageIndex: pageIndex,
        PageSize: pageSize,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeSlowLogRequestWithoutParam() *DescribeSlowLogRequest {

    return &DescribeSlowLogRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{instanceGid}/slowLog",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码(Required) */
func (r *DescribeSlowLogRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceGid: 实例ID(Required) */
func (r *DescribeSlowLogRequest) SetInstanceGid(instanceGid string) {
    r.InstanceGid = instanceGid
}

/* param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z(Required) */
func (r *DescribeSlowLogRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

/* param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z(Required) */
func (r *DescribeSlowLogRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

/* param dbName: 过滤条件：数据库名(Optional) */
func (r *DescribeSlowLogRequest) SetDbName(dbName string) {
    r.DbName = &dbName
}

/* param userName: 过滤条件：client 用户名(Optional) */
func (r *DescribeSlowLogRequest) SetUserName(userName string) {
    r.UserName = &userName
}

/* param clientIP: 过滤条件：client IP(Optional) */
func (r *DescribeSlowLogRequest) SetClientIP(clientIP string) {
    r.ClientIP = &clientIP
}

/* param keyword4Search: 模糊查询关键字，只支持单个单词(Optional) */
func (r *DescribeSlowLogRequest) SetKeyword4Search(keyword4Search string) {
    r.Keyword4Search = &keyword4Search
}

/* param field: 排序的字段，支持 execTime,lockTime,rowsExamined,rowsSent,startTime 默认是 startTime(Optional) */
func (r *DescribeSlowLogRequest) SetField(field string) {
    r.Field = &field
}

/* param sort: 排序方式，默认desc(Optional) */
func (r *DescribeSlowLogRequest) SetSort(sort string) {
    r.Sort = &sort
}

/* param pageIndex: 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码；(Optional) */
func (r *DescribeSlowLogRequest) SetPageIndex(pageIndex int) {
    r.PageIndex = &pageIndex
}

/* param pageSize: 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口(Optional) */
func (r *DescribeSlowLogRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeSlowLogRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeSlowLogResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeSlowLogResult `json:"result"`
}

type DescribeSlowLogResult struct {
    Data []smartdba.SlowLog `json:"data"`
    TotalCount int `json:"totalCount"`
}