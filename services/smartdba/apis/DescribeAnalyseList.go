// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    smartdba "github.com/lshuining/jdcloud-sdk-go/services/smartdba/models"
)

type DescribeAnalyseListRequest struct {

    core.JDCloudRequest

    /* 地域代码  */
    RegionId string `json:"regionId"`

    /* RDS 实例ID，唯一标识一个RDS实例  */
    InstanceGid string `json:"instanceGid"`

    /* 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码 (Optional) */
    PageIndex *int `json:"pageIndex"`

    /* 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 查询开始时间，格式为：2006-01-02T15:04:05Z  */
    StartTime string `json:"startTime"`

    /* 查询截止时间，格式为：2006-01-02T15:04:05Z  */
    EndTime string `json:"endTime"`

    /* 是否只过滤死锁存在的记录 (Optional) */
    State *bool `json:"state"`
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceGid: RDS 实例ID，唯一标识一个RDS实例 (Required)
 * param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z (Required)
 * param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeAnalyseListRequest(
    regionId string,
    instanceGid string,
    startTime string,
    endTime string,
) *DescribeAnalyseListRequest {

	return &DescribeAnalyseListRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instance/{instanceGid}/analyseList",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InstanceGid: instanceGid,
        StartTime: startTime,
        EndTime: endTime,
	}
}

/*
 * param regionId: 地域代码 (Required)
 * param instanceGid: RDS 实例ID，唯一标识一个RDS实例 (Required)
 * param pageIndex: 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码 (Optional)
 * param pageSize: 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口 (Optional)
 * param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z (Required)
 * param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z (Required)
 * param state: 是否只过滤死锁存在的记录 (Optional)
 */
func NewDescribeAnalyseListRequestWithAllParams(
    regionId string,
    instanceGid string,
    pageIndex *int,
    pageSize *int,
    startTime string,
    endTime string,
    state *bool,
) *DescribeAnalyseListRequest {

    return &DescribeAnalyseListRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{instanceGid}/analyseList",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InstanceGid: instanceGid,
        PageIndex: pageIndex,
        PageSize: pageSize,
        StartTime: startTime,
        EndTime: endTime,
        State: state,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeAnalyseListRequestWithoutParam() *DescribeAnalyseListRequest {

    return &DescribeAnalyseListRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instance/{instanceGid}/analyseList",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码(Required) */
func (r *DescribeAnalyseListRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceGid: RDS 实例ID，唯一标识一个RDS实例(Required) */
func (r *DescribeAnalyseListRequest) SetInstanceGid(instanceGid string) {
    r.InstanceGid = instanceGid
}

/* param pageIndex: 显示数据的页码，默认为1，取值范围：[-1,∞)。pageIndex 为-1时，返回所有数据页码(Optional) */
func (r *DescribeAnalyseListRequest) SetPageIndex(pageIndex int) {
    r.PageIndex = &pageIndex
}

/* param pageSize: 每页显示的数据条数，默认为10，取值范围：[1,100]，用于查询列表的接口(Optional) */
func (r *DescribeAnalyseListRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param startTime: 查询开始时间，格式为：2006-01-02T15:04:05Z(Required) */
func (r *DescribeAnalyseListRequest) SetStartTime(startTime string) {
    r.StartTime = startTime
}

/* param endTime: 查询截止时间，格式为：2006-01-02T15:04:05Z(Required) */
func (r *DescribeAnalyseListRequest) SetEndTime(endTime string) {
    r.EndTime = endTime
}

/* param state: 是否只过滤死锁存在的记录(Optional) */
func (r *DescribeAnalyseListRequest) SetState(state bool) {
    r.State = &state
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeAnalyseListRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeAnalyseListResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeAnalyseListResult `json:"result"`
}

type DescribeAnalyseListResult struct {
    TotalCount int `json:"totalCount"`
    Data []smartdba.DeadLockOverview `json:"data"`
}