// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    pod "github.com/lshuining/jdcloud-sdk-go/services/pod/models"
)

type ResizePodRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* Pod ID  */
    PodId string `json:"podId"`

    /* 新实例类型，不可与原实例类型相同  */
    InstanceType string `json:"instanceType"`

    /* 新实例类型，不可与原实例类型相同 (Optional) */
    ContainerResources []pod.ContainerResourceSpec `json:"containerResources"`
}

/*
 * param regionId: Region ID (Required)
 * param podId: Pod ID (Required)
 * param instanceType: 新实例类型，不可与原实例类型相同 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewResizePodRequest(
    regionId string,
    podId string,
    instanceType string,
) *ResizePodRequest {

	return &ResizePodRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/pods/{podId}:resize",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        PodId: podId,
        InstanceType: instanceType,
	}
}

/*
 * param regionId: Region ID (Required)
 * param podId: Pod ID (Required)
 * param instanceType: 新实例类型，不可与原实例类型相同 (Required)
 * param containerResources: 新实例类型，不可与原实例类型相同 (Optional)
 */
func NewResizePodRequestWithAllParams(
    regionId string,
    podId string,
    instanceType string,
    containerResources []pod.ContainerResourceSpec,
) *ResizePodRequest {

    return &ResizePodRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pods/{podId}:resize",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        PodId: podId,
        InstanceType: instanceType,
        ContainerResources: containerResources,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewResizePodRequestWithoutParam() *ResizePodRequest {

    return &ResizePodRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/pods/{podId}:resize",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *ResizePodRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param podId: Pod ID(Required) */
func (r *ResizePodRequest) SetPodId(podId string) {
    r.PodId = podId
}

/* param instanceType: 新实例类型，不可与原实例类型相同(Required) */
func (r *ResizePodRequest) SetInstanceType(instanceType string) {
    r.InstanceType = instanceType
}

/* param containerResources: 新实例类型，不可与原实例类型相同(Optional) */
func (r *ResizePodRequest) SetContainerResources(containerResources []pod.ContainerResourceSpec) {
    r.ContainerResources = containerResources
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ResizePodRequest) GetRegionId() string {
    return r.RegionId
}

type ResizePodResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ResizePodResult `json:"result"`
}

type ResizePodResult struct {
}