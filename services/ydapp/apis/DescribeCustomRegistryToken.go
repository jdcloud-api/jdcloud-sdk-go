// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type DescribeCustomRegistryTokenRequest struct {

    core.JDCloudRequest

    /* 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx
  */
    AppId string `json:"appId"`

    /* 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false
 (Optional) */
    Renew *bool `json:"renew"`
}

/*
 * param appId: 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeCustomRegistryTokenRequest(
    appId string,
) *DescribeCustomRegistryTokenRequest {

	return &DescribeCustomRegistryTokenRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/app/{appId}:customRegistryToken",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
	}
}

/*
 * param appId: 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx
 (Required)
 * param renew: 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false
 (Optional)
 */
func NewDescribeCustomRegistryTokenRequestWithAllParams(
    appId string,
    renew *bool,
) *DescribeCustomRegistryTokenRequest {

    return &DescribeCustomRegistryTokenRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/app/{appId}:customRegistryToken",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        Renew: renew,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeCustomRegistryTokenRequestWithoutParam() *DescribeCustomRegistryTokenRequest {

    return &DescribeCustomRegistryTokenRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/app/{appId}:customRegistryToken",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 可以在应用列表页面获取对应应用的appId，格式为：app-xxxxxxxxxxxx
(Required) */
func (r *DescribeCustomRegistryTokenRequest) SetAppId(appId string) {
    r.AppId = appId
}
/* param renew: 用户不同应用间自定义镜像仓库使用相同注册表，注册表token全局唯一，renew 会吊销之前获取的token，请审慎使用，E.g.，true or false or null, default is false
(Optional) */
func (r *DescribeCustomRegistryTokenRequest) SetRenew(renew bool) {
    r.Renew = &renew
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeCustomRegistryTokenRequest) GetRegionId() string {
    return ""
}

type DescribeCustomRegistryTokenResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeCustomRegistryTokenResult `json:"result"`
}

type DescribeCustomRegistryTokenResult struct {
    AuthorizationToken string `json:"authorizationToken"`
    ExpiresAt string `json:"expiresAt"`
    LoginCmdLine string `json:"loginCmdLine"`
    RegistryUri string `json:"registryUri"`
    Username string `json:"username"`
}