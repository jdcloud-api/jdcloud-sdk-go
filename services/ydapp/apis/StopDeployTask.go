// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
)

type StopDeployTaskRequest struct {

    core.JDCloudRequest

    /* 应用ID，E.g.，app-123456  */
    AppId string `json:"appId"`

    /* 分组ID，E.g.，group-123456  */
    GroupId string `json:"groupId"`

    /* 部署ID，E.g.，9527  */
    DeployId int `json:"deployId"`
}

/*
 * param appId: 应用ID，E.g.，app-123456 (Required)
 * param groupId: 分组ID，E.g.，group-123456 (Required)
 * param deployId: 部署ID，E.g.，9527 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewStopDeployTaskRequest(
    appId string,
    groupId string,
    deployId int,
) *StopDeployTaskRequest {

	return &StopDeployTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/app/{appId}/group/{groupId}/deploy/{deployId}:stop",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        AppId: appId,
        GroupId: groupId,
        DeployId: deployId,
	}
}

/*
 * param appId: 应用ID，E.g.，app-123456 (Required)
 * param groupId: 分组ID，E.g.，group-123456 (Required)
 * param deployId: 部署ID，E.g.，9527 (Required)
 */
func NewStopDeployTaskRequestWithAllParams(
    appId string,
    groupId string,
    deployId int,
) *StopDeployTaskRequest {

    return &StopDeployTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/app/{appId}/group/{groupId}/deploy/{deployId}:stop",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        AppId: appId,
        GroupId: groupId,
        DeployId: deployId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewStopDeployTaskRequestWithoutParam() *StopDeployTaskRequest {

    return &StopDeployTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/app/{appId}/group/{groupId}/deploy/{deployId}:stop",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appId: 应用ID，E.g.，app-123456(Required) */
func (r *StopDeployTaskRequest) SetAppId(appId string) {
    r.AppId = appId
}
/* param groupId: 分组ID，E.g.，group-123456(Required) */
func (r *StopDeployTaskRequest) SetGroupId(groupId string) {
    r.GroupId = groupId
}
/* param deployId: 部署ID，E.g.，9527(Required) */
func (r *StopDeployTaskRequest) SetDeployId(deployId int) {
    r.DeployId = deployId
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r StopDeployTaskRequest) GetRegionId() string {
    return ""
}

type StopDeployTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result StopDeployTaskResult `json:"result"`
}

type StopDeployTaskResult struct {
    Success bool `json:"success"`
}