// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    yundingdatapush "github.com/lshuining/jdcloud-sdk-go/services/yundingdatapush/models"
)

type DescribeDatapushVendersRequest struct {

    core.JDCloudRequest

    /* appkey  */
    Appkey string `json:"appkey"`

    /* 页码 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 页大小 (Optional) */
    PageSize *int `json:"pageSize"`

    /* 云鼎数据库实例ID (Optional) */
    YdRdsInstanceId *string `json:"ydRdsInstanceId"`

    /* 数据库实例名称 (Optional) */
    RdsInstanceName *string `json:"rdsInstanceName"`

    /* 商家ID (Optional) */
    VenderId *string `json:"venderId"`

    /* 商家店铺名称 (Optional) */
    VenderName *string `json:"venderName"`
}

/*
 * param appkey: appkey (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeDatapushVendersRequest(
    appkey string,
) *DescribeDatapushVendersRequest {

	return &DescribeDatapushVendersRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/datapushVenders",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        Appkey: appkey,
	}
}

/*
 * param appkey: appkey (Required)
 * param pageNumber: 页码 (Optional)
 * param pageSize: 页大小 (Optional)
 * param ydRdsInstanceId: 云鼎数据库实例ID (Optional)
 * param rdsInstanceName: 数据库实例名称 (Optional)
 * param venderId: 商家ID (Optional)
 * param venderName: 商家店铺名称 (Optional)
 */
func NewDescribeDatapushVendersRequestWithAllParams(
    appkey string,
    pageNumber *int,
    pageSize *int,
    ydRdsInstanceId *string,
    rdsInstanceName *string,
    venderId *string,
    venderName *string,
) *DescribeDatapushVendersRequest {

    return &DescribeDatapushVendersRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/datapushVenders",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        Appkey: appkey,
        PageNumber: pageNumber,
        PageSize: pageSize,
        YdRdsInstanceId: ydRdsInstanceId,
        RdsInstanceName: rdsInstanceName,
        VenderId: venderId,
        VenderName: venderName,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeDatapushVendersRequestWithoutParam() *DescribeDatapushVendersRequest {

    return &DescribeDatapushVendersRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/datapushVenders",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param appkey: appkey(Required) */
func (r *DescribeDatapushVendersRequest) SetAppkey(appkey string) {
    r.Appkey = appkey
}

/* param pageNumber: 页码(Optional) */
func (r *DescribeDatapushVendersRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 页大小(Optional) */
func (r *DescribeDatapushVendersRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param ydRdsInstanceId: 云鼎数据库实例ID(Optional) */
func (r *DescribeDatapushVendersRequest) SetYdRdsInstanceId(ydRdsInstanceId string) {
    r.YdRdsInstanceId = &ydRdsInstanceId
}

/* param rdsInstanceName: 数据库实例名称(Optional) */
func (r *DescribeDatapushVendersRequest) SetRdsInstanceName(rdsInstanceName string) {
    r.RdsInstanceName = &rdsInstanceName
}

/* param venderId: 商家ID(Optional) */
func (r *DescribeDatapushVendersRequest) SetVenderId(venderId string) {
    r.VenderId = &venderId
}

/* param venderName: 商家店铺名称(Optional) */
func (r *DescribeDatapushVendersRequest) SetVenderName(venderName string) {
    r.VenderName = &venderName
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeDatapushVendersRequest) GetRegionId() string {
    return ""
}

type DescribeDatapushVendersResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeDatapushVendersResult `json:"result"`
}

type DescribeDatapushVendersResult struct {
    Venders []yundingdatapush.VenderShow `json:"venders"`
}