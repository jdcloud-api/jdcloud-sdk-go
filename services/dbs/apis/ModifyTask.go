// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ModifyTaskRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》]  */
    RegionId string `json:"regionId"`

    /* Task ID  */
    TaskId string `json:"taskId"`

    /*   */
    Progress int `json:"progress"`

    /*  (Optional) */
    StartTime *string `json:"startTime"`

    /*  (Optional) */
    EndTime *string `json:"endTime"`

    /*   */
    Success bool `json:"success"`

    /*  (Optional) */
    ErrorMessage *string `json:"errorMessage"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param taskId: Task ID (Required)
 * param progress:  (Required)
 * param success:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyTaskRequest(
    regionId string,
    taskId string,
    progress int,
    success bool,
) *ModifyTaskRequest {

	return &ModifyTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/task/{taskId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        TaskId: taskId,
        Progress: progress,
        Success: success,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param taskId: Task ID (Required)
 * param progress:  (Required)
 * param startTime:  (Optional)
 * param endTime:  (Optional)
 * param success:  (Required)
 * param errorMessage:  (Optional)
 */
func NewModifyTaskRequestWithAllParams(
    regionId string,
    taskId string,
    progress int,
    startTime *string,
    endTime *string,
    success bool,
    errorMessage *string,
) *ModifyTaskRequest {

    return &ModifyTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/task/{taskId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        TaskId: taskId,
        Progress: progress,
        StartTime: startTime,
        EndTime: endTime,
        Success: success,
        ErrorMessage: errorMessage,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyTaskRequestWithoutParam() *ModifyTaskRequest {

    return &ModifyTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/task/{taskId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](Required) */
func (r *ModifyTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param taskId: Task ID(Required) */
func (r *ModifyTaskRequest) SetTaskId(taskId string) {
    r.TaskId = taskId
}

/* param progress: (Required) */
func (r *ModifyTaskRequest) SetProgress(progress int) {
    r.Progress = progress
}

/* param startTime: (Optional) */
func (r *ModifyTaskRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: (Optional) */
func (r *ModifyTaskRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param success: (Required) */
func (r *ModifyTaskRequest) SetSuccess(success bool) {
    r.Success = success
}

/* param errorMessage: (Optional) */
func (r *ModifyTaskRequest) SetErrorMessage(errorMessage string) {
    r.ErrorMessage = &errorMessage
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyTaskRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyTaskResult `json:"result"`
}

type ModifyTaskResult struct {
    Ok bool `json:"ok"`
}