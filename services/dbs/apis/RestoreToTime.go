// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    dbs "github.com/lshuining/jdcloud-sdk-go/services/dbs/models"
)

type RestoreToTimeRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》]  */
    RegionId string `json:"regionId"`

    /* 备份计划ID  */
    BackupPlanId string `json:"backupPlanId"`

    /* 数据库实例要恢复到的时间点，UTC时间格式：YYYY-MM-DDTHH:mm:ssZ  */
    RestoreTime string `json:"restoreTime"`

    /* 备份实例的数据源信息  */
    SourceEndpoint *dbs.RestoreSourceEndpoint `json:"sourceEndpoint"`

    /* 是否是新建数据源；true：是；false：不是  */
    CreateNewEndpoint bool `json:"createNewEndpoint"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param backupPlanId: 备份计划ID (Required)
 * param restoreTime: 数据库实例要恢复到的时间点，UTC时间格式：YYYY-MM-DDTHH:mm:ssZ (Required)
 * param sourceEndpoint: 备份实例的数据源信息 (Required)
 * param createNewEndpoint: 是否是新建数据源；true：是；false：不是 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewRestoreToTimeRequest(
    regionId string,
    backupPlanId string,
    restoreTime string,
    sourceEndpoint *dbs.RestoreSourceEndpoint,
    createNewEndpoint bool,
) *RestoreToTimeRequest {

	return &RestoreToTimeRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/backupPlans/{backupPlanId}:restoreToTime",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        BackupPlanId: backupPlanId,
        RestoreTime: restoreTime,
        SourceEndpoint: sourceEndpoint,
        CreateNewEndpoint: createNewEndpoint,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param backupPlanId: 备份计划ID (Required)
 * param restoreTime: 数据库实例要恢复到的时间点，UTC时间格式：YYYY-MM-DDTHH:mm:ssZ (Required)
 * param sourceEndpoint: 备份实例的数据源信息 (Required)
 * param createNewEndpoint: 是否是新建数据源；true：是；false：不是 (Required)
 */
func NewRestoreToTimeRequestWithAllParams(
    regionId string,
    backupPlanId string,
    restoreTime string,
    sourceEndpoint *dbs.RestoreSourceEndpoint,
    createNewEndpoint bool,
) *RestoreToTimeRequest {

    return &RestoreToTimeRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/backupPlans/{backupPlanId}:restoreToTime",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        BackupPlanId: backupPlanId,
        RestoreTime: restoreTime,
        SourceEndpoint: sourceEndpoint,
        CreateNewEndpoint: createNewEndpoint,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewRestoreToTimeRequestWithoutParam() *RestoreToTimeRequest {

    return &RestoreToTimeRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/backupPlans/{backupPlanId}:restoreToTime",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](Required) */
func (r *RestoreToTimeRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param backupPlanId: 备份计划ID(Required) */
func (r *RestoreToTimeRequest) SetBackupPlanId(backupPlanId string) {
    r.BackupPlanId = backupPlanId
}

/* param restoreTime: 数据库实例要恢复到的时间点，UTC时间格式：YYYY-MM-DDTHH:mm:ssZ(Required) */
func (r *RestoreToTimeRequest) SetRestoreTime(restoreTime string) {
    r.RestoreTime = restoreTime
}

/* param sourceEndpoint: 备份实例的数据源信息(Required) */
func (r *RestoreToTimeRequest) SetSourceEndpoint(sourceEndpoint *dbs.RestoreSourceEndpoint) {
    r.SourceEndpoint = sourceEndpoint
}

/* param createNewEndpoint: 是否是新建数据源；true：是；false：不是(Required) */
func (r *RestoreToTimeRequest) SetCreateNewEndpoint(createNewEndpoint bool) {
    r.CreateNewEndpoint = createNewEndpoint
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r RestoreToTimeRequest) GetRegionId() string {
    return r.RegionId
}

type RestoreToTimeResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result RestoreToTimeResult `json:"result"`
}

type RestoreToTimeResult struct {
}