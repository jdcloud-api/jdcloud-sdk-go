// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ReportTaskRequest struct {

    core.JDCloudRequest

    /* 地域代码，取值范围参见[《各地域及可用区对照表》]  */
    RegionId string `json:"regionId"`

    /*   */
    Agent interface{} `json:"agent"`

    /*   */
    TaskType string `json:"taskType"`

    /*  (Optional) */
    PlanId *string `json:"planId"`

    /*   */
    Progress int `json:"progress"`

    /*  (Optional) */
    StartTime *string `json:"startTime"`

    /*  (Optional) */
    EndTime *string `json:"endTime"`

    /*  (Optional) */
    Success *bool `json:"success"`

    /*  (Optional) */
    ErrorMessage *string `json:"errorMessage"`
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param agent:  (Required)
 * param taskType:  (Required)
 * param progress:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewReportTaskRequest(
    regionId string,
    agent interface{},
    taskType string,
    progress int,
) *ReportTaskRequest {

	return &ReportTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/task",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        Agent: agent,
        TaskType: taskType,
        Progress: progress,
	}
}

/*
 * param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》] (Required)
 * param agent:  (Required)
 * param taskType:  (Required)
 * param planId:  (Optional)
 * param progress:  (Required)
 * param startTime:  (Optional)
 * param endTime:  (Optional)
 * param success:  (Optional)
 * param errorMessage:  (Optional)
 */
func NewReportTaskRequestWithAllParams(
    regionId string,
    agent interface{},
    taskType string,
    planId *string,
    progress int,
    startTime *string,
    endTime *string,
    success *bool,
    errorMessage *string,
) *ReportTaskRequest {

    return &ReportTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/task",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        Agent: agent,
        TaskType: taskType,
        PlanId: planId,
        Progress: progress,
        StartTime: startTime,
        EndTime: endTime,
        Success: success,
        ErrorMessage: errorMessage,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewReportTaskRequestWithoutParam() *ReportTaskRequest {

    return &ReportTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/task",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域代码，取值范围参见[《各地域及可用区对照表》](Required) */
func (r *ReportTaskRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param agent: (Required) */
func (r *ReportTaskRequest) SetAgent(agent interface{}) {
    r.Agent = agent
}

/* param taskType: (Required) */
func (r *ReportTaskRequest) SetTaskType(taskType string) {
    r.TaskType = taskType
}

/* param planId: (Optional) */
func (r *ReportTaskRequest) SetPlanId(planId string) {
    r.PlanId = &planId
}

/* param progress: (Required) */
func (r *ReportTaskRequest) SetProgress(progress int) {
    r.Progress = progress
}

/* param startTime: (Optional) */
func (r *ReportTaskRequest) SetStartTime(startTime string) {
    r.StartTime = &startTime
}

/* param endTime: (Optional) */
func (r *ReportTaskRequest) SetEndTime(endTime string) {
    r.EndTime = &endTime
}

/* param success: (Optional) */
func (r *ReportTaskRequest) SetSuccess(success bool) {
    r.Success = &success
}

/* param errorMessage: (Optional) */
func (r *ReportTaskRequest) SetErrorMessage(errorMessage string) {
    r.ErrorMessage = &errorMessage
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ReportTaskRequest) GetRegionId() string {
    return r.RegionId
}

type ReportTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ReportTaskResult `json:"result"`
}

type ReportTaskResult struct {
    Id string `json:"id"`
}