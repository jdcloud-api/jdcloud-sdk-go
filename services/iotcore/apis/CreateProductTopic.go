// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type CreateProductTopicRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* IoTCore实例ID信息  */
    InstanceId string `json:"instanceId"`

    /* 产品Key  */
    ProductKey string `json:"productKey"`

    /* Topic名称为必填，同一个产品下的Topic名称不能重复
只能包含字母，数字和下划线，最多64个字符，每个层级都不能为空
不能以/结尾
  */
    TopicShortName string `json:"topicShortName"`

    /* 操作权限，设备对该Topic类的操作权限，取值
pub:发布
sub:订阅
  */
    TopicOperation string `json:"topicOperation"`

    /* 描述, 0-50个字符 (Optional) */
    TopicDescription *string `json:"topicDescription"`
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoTCore实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 * param topicShortName: Topic名称为必填，同一个产品下的Topic名称不能重复
只能包含字母，数字和下划线，最多64个字符，每个层级都不能为空
不能以/结尾
 (Required)
 * param topicOperation: 操作权限，设备对该Topic类的操作权限，取值
pub:发布
sub:订阅
 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateProductTopicRequest(
    regionId string,
    instanceId string,
    productKey string,
    topicShortName string,
    topicOperation string,
) *CreateProductTopicRequest {

	return &CreateProductTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
        TopicShortName: topicShortName,
        TopicOperation: topicOperation,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoTCore实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 * param topicShortName: Topic名称为必填，同一个产品下的Topic名称不能重复
只能包含字母，数字和下划线，最多64个字符，每个层级都不能为空
不能以/结尾
 (Required)
 * param topicOperation: 操作权限，设备对该Topic类的操作权限，取值
pub:发布
sub:订阅
 (Required)
 * param topicDescription: 描述, 0-50个字符 (Optional)
 */
func NewCreateProductTopicRequestWithAllParams(
    regionId string,
    instanceId string,
    productKey string,
    topicShortName string,
    topicOperation string,
    topicDescription *string,
) *CreateProductTopicRequest {

    return &CreateProductTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
        TopicShortName: topicShortName,
        TopicOperation: topicOperation,
        TopicDescription: topicDescription,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateProductTopicRequestWithoutParam() *CreateProductTopicRequest {

    return &CreateProductTopicRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateProductTopicRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: IoTCore实例ID信息(Required) */
func (r *CreateProductTopicRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param productKey: 产品Key(Required) */
func (r *CreateProductTopicRequest) SetProductKey(productKey string) {
    r.ProductKey = productKey
}

/* param topicShortName: Topic名称为必填，同一个产品下的Topic名称不能重复
只能包含字母，数字和下划线，最多64个字符，每个层级都不能为空
不能以/结尾
(Required) */
func (r *CreateProductTopicRequest) SetTopicShortName(topicShortName string) {
    r.TopicShortName = topicShortName
}

/* param topicOperation: 操作权限，设备对该Topic类的操作权限，取值
pub:发布
sub:订阅
(Required) */
func (r *CreateProductTopicRequest) SetTopicOperation(topicOperation string) {
    r.TopicOperation = topicOperation
}

/* param topicDescription: 描述, 0-50个字符(Optional) */
func (r *CreateProductTopicRequest) SetTopicDescription(topicDescription string) {
    r.TopicDescription = &topicDescription
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateProductTopicRequest) GetRegionId() string {
    return r.RegionId
}

type CreateProductTopicResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateProductTopicResult `json:"result"`
}

type CreateProductTopicResult struct {
    TopicId string `json:"topicId"`
}