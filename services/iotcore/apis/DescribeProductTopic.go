// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type DescribeProductTopicRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* IoTCore实例ID信息  */
    InstanceId string `json:"instanceId"`

    /* 产品Key  */
    ProductKey string `json:"productKey"`

    /* 自定义topic唯一标识  */
    TopicId string `json:"topicId"`
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoTCore实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 * param topicId: 自定义topic唯一标识 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeProductTopicRequest(
    regionId string,
    instanceId string,
    productKey string,
    topicId string,
) *DescribeProductTopicRequest {

	return &DescribeProductTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics/{topicId}",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
        TopicId: topicId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoTCore实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 * param topicId: 自定义topic唯一标识 (Required)
 */
func NewDescribeProductTopicRequestWithAllParams(
    regionId string,
    instanceId string,
    productKey string,
    topicId string,
) *DescribeProductTopicRequest {

    return &DescribeProductTopicRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics/{topicId}",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
        TopicId: topicId,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeProductTopicRequestWithoutParam() *DescribeProductTopicRequest {

    return &DescribeProductTopicRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/products/{productKey}/topics/{topicId}",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeProductTopicRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: IoTCore实例ID信息(Required) */
func (r *DescribeProductTopicRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param productKey: 产品Key(Required) */
func (r *DescribeProductTopicRequest) SetProductKey(productKey string) {
    r.ProductKey = productKey
}

/* param topicId: 自定义topic唯一标识(Required) */
func (r *DescribeProductTopicRequest) SetTopicId(topicId string) {
    r.TopicId = topicId
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeProductTopicRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeProductTopicResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeProductTopicResult `json:"result"`
}

type DescribeProductTopicResult struct {
    TopicShortName string `json:"topicShortName"`
    TopicOperation string `json:"topicOperation"`
    TopicDescription string `json:"topicDescription"`
    CreatedTime int64 `json:"createdTime"`
    UdpatedTime int64 `json:"udpatedTime"`
}