// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type UpdateProductWithAdminRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* IoT Engine实例ID信息  */
    InstanceId string `json:"instanceId"`

    /* 产品Key  */
    ProductKey string `json:"productKey"`

    /* 产品名称，名称不可为空，3-30个字符，只支持汉字、英文字母、数字、下划线“_”及中划线“-”，必须以汉字、英文字母及数字开头结尾 (Optional) */
    ProductName *string `json:"productName"`

    /* 产品描述，80字符以内 (Optional) */
    ProductDescription *string `json:"productDescription"`

    /* 动态注册,0:关闭，1:开启 (Optional) */
    DynamicRegister *int `json:"dynamicRegister"`
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoT Engine实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateProductWithAdminRequest(
    regionId string,
    instanceId string,
    productKey string,
) *UpdateProductWithAdminRequest {

	return &UpdateProductWithAdminRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/loongrayinstances/{instanceId}/products/{productKey}/admin",
			Method:  "PATCH",
			Header:  nil,
			Version: "v2",
		},
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param instanceId: IoT Engine实例ID信息 (Required)
 * param productKey: 产品Key (Required)
 * param productName: 产品名称，名称不可为空，3-30个字符，只支持汉字、英文字母、数字、下划线“_”及中划线“-”，必须以汉字、英文字母及数字开头结尾 (Optional)
 * param productDescription: 产品描述，80字符以内 (Optional)
 * param dynamicRegister: 动态注册,0:关闭，1:开启 (Optional)
 */
func NewUpdateProductWithAdminRequestWithAllParams(
    regionId string,
    instanceId string,
    productKey string,
    productName *string,
    productDescription *string,
    dynamicRegister *int,
) *UpdateProductWithAdminRequest {

    return &UpdateProductWithAdminRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loongrayinstances/{instanceId}/products/{productKey}/admin",
            Method:  "PATCH",
            Header:  nil,
            Version: "v2",
        },
        RegionId: regionId,
        InstanceId: instanceId,
        ProductKey: productKey,
        ProductName: productName,
        ProductDescription: productDescription,
        DynamicRegister: dynamicRegister,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateProductWithAdminRequestWithoutParam() *UpdateProductWithAdminRequest {

    return &UpdateProductWithAdminRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/loongrayinstances/{instanceId}/products/{productKey}/admin",
            Method:  "PATCH",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *UpdateProductWithAdminRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param instanceId: IoT Engine实例ID信息(Required) */
func (r *UpdateProductWithAdminRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param productKey: 产品Key(Required) */
func (r *UpdateProductWithAdminRequest) SetProductKey(productKey string) {
    r.ProductKey = productKey
}

/* param productName: 产品名称，名称不可为空，3-30个字符，只支持汉字、英文字母、数字、下划线“_”及中划线“-”，必须以汉字、英文字母及数字开头结尾(Optional) */
func (r *UpdateProductWithAdminRequest) SetProductName(productName string) {
    r.ProductName = &productName
}

/* param productDescription: 产品描述，80字符以内(Optional) */
func (r *UpdateProductWithAdminRequest) SetProductDescription(productDescription string) {
    r.ProductDescription = &productDescription
}

/* param dynamicRegister: 动态注册,0:关闭，1:开启(Optional) */
func (r *UpdateProductWithAdminRequest) SetDynamicRegister(dynamicRegister int) {
    r.DynamicRegister = &dynamicRegister
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateProductWithAdminRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateProductWithAdminResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateProductWithAdminResult `json:"result"`
}

type UpdateProductWithAdminResult struct {
}