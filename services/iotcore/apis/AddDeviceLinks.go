// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type AddDeviceLinksRequest struct {

    core.JDCloudRequest

    /* 设备归属的实例ID  */
    InstanceId string `json:"instanceId"`

    /* 设备归属的实例所在区域  */
    RegionId string `json:"regionId"`

    /* 父级设备Id，只允许网关设备作为父级设备  */
    ParentId string `json:"parentId"`

    /* 将此产品下所有设备都设置为parentId的子设备，只允许普通设备类型的productKey (Optional) */
    ProductKey *string `json:"productKey"`

    /* 子设备Id集合，children和productKey二者至少填一个，二者都填写则同时生效，只允许普通设备类型的deviceId (Optional) */
    Children []string `json:"children"`
}

/*
 * param instanceId: 设备归属的实例ID (Required)
 * param regionId: 设备归属的实例所在区域 (Required)
 * param parentId: 父级设备Id，只允许网关设备作为父级设备 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewAddDeviceLinksRequest(
    instanceId string,
    regionId string,
    parentId string,
) *AddDeviceLinksRequest {

	return &AddDeviceLinksRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/instances/{instanceId}/devices:addLinks",
			Method:  "POST",
			Header:  nil,
			Version: "v2",
		},
        InstanceId: instanceId,
        RegionId: regionId,
        ParentId: parentId,
	}
}

/*
 * param instanceId: 设备归属的实例ID (Required)
 * param regionId: 设备归属的实例所在区域 (Required)
 * param parentId: 父级设备Id，只允许网关设备作为父级设备 (Required)
 * param productKey: 将此产品下所有设备都设置为parentId的子设备，只允许普通设备类型的productKey (Optional)
 * param children: 子设备Id集合，children和productKey二者至少填一个，二者都填写则同时生效，只允许普通设备类型的deviceId (Optional)
 */
func NewAddDeviceLinksRequestWithAllParams(
    instanceId string,
    regionId string,
    parentId string,
    productKey *string,
    children []string,
) *AddDeviceLinksRequest {

    return &AddDeviceLinksRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/devices:addLinks",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
        InstanceId: instanceId,
        RegionId: regionId,
        ParentId: parentId,
        ProductKey: productKey,
        Children: children,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewAddDeviceLinksRequestWithoutParam() *AddDeviceLinksRequest {

    return &AddDeviceLinksRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/instances/{instanceId}/devices:addLinks",
            Method:  "POST",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param instanceId: 设备归属的实例ID(Required) */
func (r *AddDeviceLinksRequest) SetInstanceId(instanceId string) {
    r.InstanceId = instanceId
}

/* param regionId: 设备归属的实例所在区域(Required) */
func (r *AddDeviceLinksRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param parentId: 父级设备Id，只允许网关设备作为父级设备(Required) */
func (r *AddDeviceLinksRequest) SetParentId(parentId string) {
    r.ParentId = parentId
}

/* param productKey: 将此产品下所有设备都设置为parentId的子设备，只允许普通设备类型的productKey(Optional) */
func (r *AddDeviceLinksRequest) SetProductKey(productKey string) {
    r.ProductKey = &productKey
}

/* param children: 子设备Id集合，children和productKey二者至少填一个，二者都填写则同时生效，只允许普通设备类型的deviceId(Optional) */
func (r *AddDeviceLinksRequest) SetChildren(children []string) {
    r.Children = children
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r AddDeviceLinksRequest) GetRegionId() string {
    return r.RegionId
}

type AddDeviceLinksResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result AddDeviceLinksResult `json:"result"`
}

type AddDeviceLinksResult struct {
}