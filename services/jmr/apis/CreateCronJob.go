// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    jmr "github.com/jdcloud-api/jdcloud-sdk-go/services/jmr/models"
)

type CreateCronJobRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /*  (Optional) */
    JmrPlanViewModel *jmr.JmrPlanViewModel `json:""`

    /*  (Optional) */
    Time *string `json:""`

    /*  (Optional) */
    Month *string `json:""`

    /*  (Optional) */
    Week *string `json:""`

    /*  (Optional) */
    Day *string `json:""`

    /*  (Optional) */
    Hour *string `json:""`

    /*  (Optional) */
    Minute *string `json:""`

    /*   */
    Hour string `json:"hour"`

    /*   */
    Minute string `json:"minute"`
}

/*
 * param regionId: 地域ID (Required)
 * param hour:  (Required)
 * param minute:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateCronJobRequest(
    regionId string,
    hour string,
    minute string,
) *CreateCronJobRequest {

	return &CreateCronJobRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/cronJob:create",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        Hour: hour,
        Minute: minute,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param jmrPlanViewModel:  (Optional)
 * param time:  (Optional)
 * param month:  (Optional)
 * param week:  (Optional)
 * param day:  (Optional)
 * param hour:  (Optional)
 * param minute:  (Optional)
 * param hour:  (Required)
 * param minute:  (Required)
 */
func NewCreateCronJobRequestWithAllParams(
    regionId string,
    jmrPlanViewModel *jmr.JmrPlanViewModel,
    time *string,
    month *string,
    week *string,
    day *string,
    hour *string,
    minute *string,
    hour string,
    minute string,
) *CreateCronJobRequest {

    return &CreateCronJobRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cronJob:create",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        JmrPlanViewModel: jmrPlanViewModel,
        Time: time,
        Month: month,
        Week: week,
        Day: day,
        Hour: hour,
        Minute: minute,
        Hour: hour,
        Minute: minute,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateCronJobRequestWithoutParam() *CreateCronJobRequest {

    return &CreateCronJobRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cronJob:create",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *CreateCronJobRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param jmrPlanViewModel: (Optional) */
func (r *CreateCronJobRequest) SetJmrPlanViewModel(jmrPlanViewModel *jmr.JmrPlanViewModel) {
    r.JmrPlanViewModel = jmrPlanViewModel
}

/* param time: (Optional) */
func (r *CreateCronJobRequest) SetTime(time string) {
    r.Time = &time
}

/* param month: (Optional) */
func (r *CreateCronJobRequest) SetMonth(month string) {
    r.Month = &month
}

/* param week: (Optional) */
func (r *CreateCronJobRequest) SetWeek(week string) {
    r.Week = &week
}

/* param day: (Optional) */
func (r *CreateCronJobRequest) SetDay(day string) {
    r.Day = &day
}

/* param hour: (Optional) */
func (r *CreateCronJobRequest) SetHour(hour string) {
    r.Hour = &hour
}

/* param minute: (Optional) */
func (r *CreateCronJobRequest) SetMinute(minute string) {
    r.Minute = &minute
}

/* param hour: (Required) */
func (r *CreateCronJobRequest) SetHour(hour string) {
    r.Hour = hour
}

/* param minute: (Required) */
func (r *CreateCronJobRequest) SetMinute(minute string) {
    r.Minute = minute
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateCronJobRequest) GetRegionId() string {
    return r.RegionId
}

type CreateCronJobResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateCronJobResult `json:"result"`
}

type CreateCronJobResult struct {
    Status string `json:"status"`
    Message string `json:"message"`
}