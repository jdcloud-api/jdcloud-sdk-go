// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    charge "github.com/jdcloud-api/jdcloud-sdk-go/services/charge/models"
    vpc "github.com/jdcloud-api/jdcloud-sdk-go/services/vpc/models"
)

type CreateElasticIpPoolRequest struct {

    core.JDCloudRequest

    /* Region ID  */
    RegionId string `json:"regionId"`

    /* IP池名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”,不超过32字符。  */
    ElasticIpPoolName string `json:"elasticIpPoolName"`

    /* IP地址网段掩码, 用于指定生成的IP池网段的大小, 和cidrBlock不能并存, 需要选择其中一个进行配置。 mask取值范围[24,30] (Optional) */
    CidrMask *int `json:"cidrMask"`

    /* 完整CIDR, 生成指定网段, 和cidrMask不能并存, 需要选择其中一个进行配置 (Optional) */
    CidrBlock *string `json:"cidrBlock"`

    /* IP池线路信息。bgp对应国际弹性公网IP池, cn-bgp对应国内弹性公网IP池。  */
    Provider string `json:"provider"`

    /* IP池计费配置。计费模式(chargeMode)：仅支持按量后付费(postpaid_by_usage)。其他计费参数：暂不支持配置chargeUnit、chargeDuration、autoRenew、autoChangeChargeMode、autoChangeChargeModeData、buyScenario (Optional) */
    ChargeSpec *charge.ChargeSpec `json:"chargeSpec"`

    /* IP池用户标签。 (Optional) */
    UserTags []vpc.Tag `json:"userTags"`

    /* IP池所属资源组ID。 (Optional) */
    ResourceGroupId *string `json:"resourceGroupId"`

    /* IP池描述信息, 允许输入UTF-8编码下的全部字符, 取值范围:0-256个字符。 (Optional) */
    Description *string `json:"description"`

    /* 用于保证请求的幂等性。由客户端生成, 并确保不同请求中该参数唯一, 长度不能超过64个字符。 (Optional) */
    ClientToken *string `json:"clientToken"`

    /* 预检标识, 默认false, dryRun为true时只进行尝试, 不会实际创建资源。 (Optional) */
    DryRun *bool `json:"dryRun"`
}

/*
 * param regionId: Region ID (Required)
 * param elasticIpPoolName: IP池名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”,不超过32字符。 (Required)
 * param provider: IP池线路信息。bgp对应国际弹性公网IP池, cn-bgp对应国内弹性公网IP池。 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewCreateElasticIpPoolRequest(
    regionId string,
    elasticIpPoolName string,
    provider string,
) *CreateElasticIpPoolRequest {

	return &CreateElasticIpPoolRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/elasticIpPool/",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ElasticIpPoolName: elasticIpPoolName,
        Provider: provider,
	}
}

/*
 * param regionId: Region ID (Required)
 * param elasticIpPoolName: IP池名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”,不超过32字符。 (Required)
 * param cidrMask: IP地址网段掩码, 用于指定生成的IP池网段的大小, 和cidrBlock不能并存, 需要选择其中一个进行配置。 mask取值范围[24,30] (Optional)
 * param cidrBlock: 完整CIDR, 生成指定网段, 和cidrMask不能并存, 需要选择其中一个进行配置 (Optional)
 * param provider: IP池线路信息。bgp对应国际弹性公网IP池, cn-bgp对应国内弹性公网IP池。 (Required)
 * param chargeSpec: IP池计费配置。计费模式(chargeMode)：仅支持按量后付费(postpaid_by_usage)。其他计费参数：暂不支持配置chargeUnit、chargeDuration、autoRenew、autoChangeChargeMode、autoChangeChargeModeData、buyScenario (Optional)
 * param userTags: IP池用户标签。 (Optional)
 * param resourceGroupId: IP池所属资源组ID。 (Optional)
 * param description: IP池描述信息, 允许输入UTF-8编码下的全部字符, 取值范围:0-256个字符。 (Optional)
 * param clientToken: 用于保证请求的幂等性。由客户端生成, 并确保不同请求中该参数唯一, 长度不能超过64个字符。 (Optional)
 * param dryRun: 预检标识, 默认false, dryRun为true时只进行尝试, 不会实际创建资源。 (Optional)
 */
func NewCreateElasticIpPoolRequestWithAllParams(
    regionId string,
    elasticIpPoolName string,
    cidrMask *int,
    cidrBlock *string,
    provider string,
    chargeSpec *charge.ChargeSpec,
    userTags []vpc.Tag,
    resourceGroupId *string,
    description *string,
    clientToken *string,
    dryRun *bool,
) *CreateElasticIpPoolRequest {

    return &CreateElasticIpPoolRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/elasticIpPool/",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ElasticIpPoolName: elasticIpPoolName,
        CidrMask: cidrMask,
        CidrBlock: cidrBlock,
        Provider: provider,
        ChargeSpec: chargeSpec,
        UserTags: userTags,
        ResourceGroupId: resourceGroupId,
        Description: description,
        ClientToken: clientToken,
        DryRun: dryRun,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewCreateElasticIpPoolRequestWithoutParam() *CreateElasticIpPoolRequest {

    return &CreateElasticIpPoolRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/elasticIpPool/",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: Region ID(Required) */
func (r *CreateElasticIpPoolRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}
/* param elasticIpPoolName: IP池名称,只允许输入中文、数字、大小写字母、英文下划线“_”及中划线“-”,不超过32字符。(Required) */
func (r *CreateElasticIpPoolRequest) SetElasticIpPoolName(elasticIpPoolName string) {
    r.ElasticIpPoolName = elasticIpPoolName
}
/* param cidrMask: IP地址网段掩码, 用于指定生成的IP池网段的大小, 和cidrBlock不能并存, 需要选择其中一个进行配置。 mask取值范围[24,30](Optional) */
func (r *CreateElasticIpPoolRequest) SetCidrMask(cidrMask int) {
    r.CidrMask = &cidrMask
}
/* param cidrBlock: 完整CIDR, 生成指定网段, 和cidrMask不能并存, 需要选择其中一个进行配置(Optional) */
func (r *CreateElasticIpPoolRequest) SetCidrBlock(cidrBlock string) {
    r.CidrBlock = &cidrBlock
}
/* param provider: IP池线路信息。bgp对应国际弹性公网IP池, cn-bgp对应国内弹性公网IP池。(Required) */
func (r *CreateElasticIpPoolRequest) SetProvider(provider string) {
    r.Provider = provider
}
/* param chargeSpec: IP池计费配置。计费模式(chargeMode)：仅支持按量后付费(postpaid_by_usage)。其他计费参数：暂不支持配置chargeUnit、chargeDuration、autoRenew、autoChangeChargeMode、autoChangeChargeModeData、buyScenario(Optional) */
func (r *CreateElasticIpPoolRequest) SetChargeSpec(chargeSpec *charge.ChargeSpec) {
    r.ChargeSpec = chargeSpec
}
/* param userTags: IP池用户标签。(Optional) */
func (r *CreateElasticIpPoolRequest) SetUserTags(userTags []vpc.Tag) {
    r.UserTags = userTags
}
/* param resourceGroupId: IP池所属资源组ID。(Optional) */
func (r *CreateElasticIpPoolRequest) SetResourceGroupId(resourceGroupId string) {
    r.ResourceGroupId = &resourceGroupId
}
/* param description: IP池描述信息, 允许输入UTF-8编码下的全部字符, 取值范围:0-256个字符。(Optional) */
func (r *CreateElasticIpPoolRequest) SetDescription(description string) {
    r.Description = &description
}
/* param clientToken: 用于保证请求的幂等性。由客户端生成, 并确保不同请求中该参数唯一, 长度不能超过64个字符。(Optional) */
func (r *CreateElasticIpPoolRequest) SetClientToken(clientToken string) {
    r.ClientToken = &clientToken
}
/* param dryRun: 预检标识, 默认false, dryRun为true时只进行尝试, 不会实际创建资源。(Optional) */
func (r *CreateElasticIpPoolRequest) SetDryRun(dryRun bool) {
    r.DryRun = &dryRun
}


// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r CreateElasticIpPoolRequest) GetRegionId() string {
    return r.RegionId
}

type CreateElasticIpPoolResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result CreateElasticIpPoolResult `json:"result"`
}

type CreateElasticIpPoolResult struct {
    ElasticIpPoolId string `json:"elasticIpPoolId"`
}