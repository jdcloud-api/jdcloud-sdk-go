// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    detection "github.com/lshuining/jdcloud-sdk-go/services/detection/models"
)

type DescribeProbeTasksRequest struct {

    core.JDCloudRequest

    /* 当前所在页，默认为1 (Optional) */
    PageNumber *int `json:"pageNumber"`

    /* 页面大小，默认为20；取值范围[1, 100] (Optional) */
    PageSize *int `json:"pageSize"`

    /* 根据探测任务的名称查询，支持模糊查询 (Optional) */
    Name *string `json:"name"`

    /* 根据探测任务的类型查询，1、http 2、telnet (Optional) */
    Type *int `json:"type"`

    /* 查询的可用率、响应时间的时间间隔，为空时默认查询最新点,最大不超过30天，支持分钟级别,小时级别，天级别，例如：1m、1h、1d (Optional) */
    TimeInterval *string `json:"timeInterval"`

    /* 是否查询可用率、响应时间 (Optional) */
    WithStats *bool `json:"withStats"`

    /* 是否包含被删除的task (Optional) */
    WithDeleted *bool `json:"withDeleted"`

    /* 任务状态：1为启用，0为禁用。默认为查所有的 (Optional) */
    Enabled *int `json:"enabled"`

    /* taskId - taskId，精确匹配，支持多个
name - task名称或探测地址，糊模匹配，支持单个 (Optional) */
    Filters []detection.Filter `json:"filters"`
}

/*
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeProbeTasksRequest(
) *DescribeProbeTasksRequest {

	return &DescribeProbeTasksRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/probeTaskList",
			Method:  "GET",
			Header:  nil,
			Version: "v2",
		},
	}
}

/*
 * param pageNumber: 当前所在页，默认为1 (Optional)
 * param pageSize: 页面大小，默认为20；取值范围[1, 100] (Optional)
 * param name: 根据探测任务的名称查询，支持模糊查询 (Optional)
 * param type_: 根据探测任务的类型查询，1、http 2、telnet (Optional)
 * param timeInterval: 查询的可用率、响应时间的时间间隔，为空时默认查询最新点,最大不超过30天，支持分钟级别,小时级别，天级别，例如：1m、1h、1d (Optional)
 * param withStats: 是否查询可用率、响应时间 (Optional)
 * param withDeleted: 是否包含被删除的task (Optional)
 * param enabled: 任务状态：1为启用，0为禁用。默认为查所有的 (Optional)
 * param filters: taskId - taskId，精确匹配，支持多个
name - task名称或探测地址，糊模匹配，支持单个 (Optional)
 */
func NewDescribeProbeTasksRequestWithAllParams(
    pageNumber *int,
    pageSize *int,
    name *string,
    type_ *int,
    timeInterval *string,
    withStats *bool,
    withDeleted *bool,
    enabled *int,
    filters []detection.Filter,
) *DescribeProbeTasksRequest {

    return &DescribeProbeTasksRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/probeTaskList",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
        PageNumber: pageNumber,
        PageSize: pageSize,
        Name: name,
        Type: type_,
        TimeInterval: timeInterval,
        WithStats: withStats,
        WithDeleted: withDeleted,
        Enabled: enabled,
        Filters: filters,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeProbeTasksRequestWithoutParam() *DescribeProbeTasksRequest {

    return &DescribeProbeTasksRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/probeTaskList",
            Method:  "GET",
            Header:  nil,
            Version: "v2",
        },
    }
}

/* param pageNumber: 当前所在页，默认为1(Optional) */
func (r *DescribeProbeTasksRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

/* param pageSize: 页面大小，默认为20；取值范围[1, 100](Optional) */
func (r *DescribeProbeTasksRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param name: 根据探测任务的名称查询，支持模糊查询(Optional) */
func (r *DescribeProbeTasksRequest) SetName(name string) {
    r.Name = &name
}

/* param type_: 根据探测任务的类型查询，1、http 2、telnet(Optional) */
func (r *DescribeProbeTasksRequest) SetType(type_ int) {
    r.Type = &type_
}

/* param timeInterval: 查询的可用率、响应时间的时间间隔，为空时默认查询最新点,最大不超过30天，支持分钟级别,小时级别，天级别，例如：1m、1h、1d(Optional) */
func (r *DescribeProbeTasksRequest) SetTimeInterval(timeInterval string) {
    r.TimeInterval = &timeInterval
}

/* param withStats: 是否查询可用率、响应时间(Optional) */
func (r *DescribeProbeTasksRequest) SetWithStats(withStats bool) {
    r.WithStats = &withStats
}

/* param withDeleted: 是否包含被删除的task(Optional) */
func (r *DescribeProbeTasksRequest) SetWithDeleted(withDeleted bool) {
    r.WithDeleted = &withDeleted
}

/* param enabled: 任务状态：1为启用，0为禁用。默认为查所有的(Optional) */
func (r *DescribeProbeTasksRequest) SetEnabled(enabled int) {
    r.Enabled = &enabled
}

/* param filters: taskId - taskId，精确匹配，支持多个
name - task名称或探测地址，糊模匹配，支持单个(Optional) */
func (r *DescribeProbeTasksRequest) SetFilters(filters []detection.Filter) {
    r.Filters = filters
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeProbeTasksRequest) GetRegionId() string {
    return ""
}

type DescribeProbeTasksResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeProbeTasksResult `json:"result"`
}

type DescribeProbeTasksResult struct {
    NumberPages int64 `json:"numberPages"`
    NumberRecords int64 `json:"numberRecords"`
    PageNumber int64 `json:"pageNumber"`
    PageSize int64 `json:"pageSize"`
    TaskInfo []detection.TaskInfo `json:"taskInfo"`
    TotalCount int64 `json:"totalCount"`
}