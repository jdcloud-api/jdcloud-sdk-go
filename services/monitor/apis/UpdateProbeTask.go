// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    monitor "github.com/jdcloud-api/jdcloud-sdk-go/services/monitor/models"
)

type UpdateProbeTaskRequest struct {

    core.JDCloudRequest

    /* 探测任务的task_id  */
    ProbeTaskID string `json:"probeTaskID"`

    /* 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”） (Optional) */
    Address *string `json:"address"`

    /* 探测间隔（单位：秒）：默认值：300，取值范围[60,1200] (Optional) */
    Frequency *int64 `json:"frequency"`

    /* http body：选择探测类型为1=http时有效，最长不超过1024字节 (Optional) */
    HttpBody *string `json:"httpBody"`

    /* http cookie：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节 (Optional) */
    HttpCookie []monitor.KeyValue `json:"httpCookie"`

    /* http header：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节 (Optional) */
    HttpHeader []monitor.KeyValue `json:"httpHeader"`

    /* task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ] (Optional) */
    Name *string `json:"name"`

    /* 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数 (Optional) */
    Port *int64 `json:"port"`

    /* 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）  */
    Probes []monitor.Probe `json:"probes"`

    /* 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填， (Optional) */
    TargetId *string `json:"targetId"`

    /* 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填 (Optional) */
    TargetRegion *string `json:"targetRegion"`

    /* 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300] (Optional) */
    Timeout *int64 `json:"timeout"`
}

/*
 * param probeTaskID: 探测任务的task_id (Required)
 * param probes: 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测） (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateProbeTaskRequest(
    probeTaskID string,
    probes []monitor.Probe,
) *UpdateProbeTaskRequest {

	return &UpdateProbeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/am/probeTask/{probeTaskID}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        ProbeTaskID: probeTaskID,
        Probes: probes,
	}
}

/*
 * param probeTaskID: 探测任务的task_id (Required)
 * param address: 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”） (Optional)
 * param frequency: 探测间隔（单位：秒）：默认值：300，取值范围[60,1200] (Optional)
 * param httpBody: http body：选择探测类型为1=http时有效，最长不超过1024字节 (Optional)
 * param httpCookie: http cookie：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节 (Optional)
 * param httpHeader: http header：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节 (Optional)
 * param name: task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ] (Optional)
 * param port: 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数 (Optional)
 * param probes: 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测） (Required)
 * param targetId: 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填， (Optional)
 * param targetRegion: 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填 (Optional)
 * param timeout: 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300] (Optional)
 */
func NewUpdateProbeTaskRequestWithAllParams(
    probeTaskID string,
    address *string,
    frequency *int64,
    httpBody *string,
    httpCookie []monitor.KeyValue,
    httpHeader []monitor.KeyValue,
    name *string,
    port *int64,
    probes []monitor.Probe,
    targetId *string,
    targetRegion *string,
    timeout *int64,
) *UpdateProbeTaskRequest {

    return &UpdateProbeTaskRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/am/probeTask/{probeTaskID}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        ProbeTaskID: probeTaskID,
        Address: address,
        Frequency: frequency,
        HttpBody: httpBody,
        HttpCookie: httpCookie,
        HttpHeader: httpHeader,
        Name: name,
        Port: port,
        Probes: probes,
        TargetId: targetId,
        TargetRegion: targetRegion,
        Timeout: timeout,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateProbeTaskRequestWithoutParam() *UpdateProbeTaskRequest {

    return &UpdateProbeTaskRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/am/probeTask/{probeTaskID}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param probeTaskID: 探测任务的task_id(Required) */
func (r *UpdateProbeTaskRequest) SetProbeTaskID(probeTaskID string) {
    r.ProbeTaskID = probeTaskID
}

/* param address: 探测地址，探测类型为http：内容为url（校验http或https头）；探测类型为telnet：内容为ip或域名（只允许中英文 、数字、中划线（-）、小数点（.）、开头及结尾均不能含有“-”）(Optional) */
func (r *UpdateProbeTaskRequest) SetAddress(address string) {
    r.Address = &address
}

/* param frequency: 探测间隔（单位：秒）：默认值：300，取值范围[60,1200](Optional) */
func (r *UpdateProbeTaskRequest) SetFrequency(frequency int64) {
    r.Frequency = &frequency
}

/* param httpBody: http body：选择探测类型为1=http时有效，最长不超过1024字节(Optional) */
func (r *UpdateProbeTaskRequest) SetHttpBody(httpBody string) {
    r.HttpBody = &httpBody
}

/* param httpCookie: http cookie：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节(Optional) */
func (r *UpdateProbeTaskRequest) SetHttpCookie(httpCookie []monitor.KeyValue) {
    r.HttpCookie = httpCookie
}

/* param httpHeader: http header：选择探测类型为1=http时有效，最大允许20个key、value对，最长不超过1024字节(Optional) */
func (r *UpdateProbeTaskRequest) SetHttpHeader(httpHeader []monitor.KeyValue) {
    r.HttpHeader = httpHeader
}

/* param name: task名称，不允许重复，长度不超过32字符，只允许中英文、数字、下划线_、中划线-, [0-9][a-z] [A-Z] [- _ ](Optional) */
func (r *UpdateProbeTaskRequest) SetName(name string) {
    r.Name = &name
}

/* param port: 探测端口，探测类型为telnet时必填，取值范围 [1-65535]，http类型忽略该参数(Optional) */
func (r *UpdateProbeTaskRequest) SetPort(port int64) {
    r.Port = &port
}

/* param probes: 探测源（发起对探测目标探测的云主机，需安装相应的agent才能探测）(Required) */
func (r *UpdateProbeTaskRequest) SetProbes(probes []monitor.Probe) {
    r.Probes = probes
}

/* param targetId: 探测目标id：该探测对象的uuid，任务类型为2：rds、3：redis时必填，(Optional) */
func (r *UpdateProbeTaskRequest) SetTargetId(targetId string) {
    r.TargetId = &targetId
}

/* param targetRegion: 探测目标region：该探测对象所在region，任务类型为2：rds、3：redis时必填(Optional) */
func (r *UpdateProbeTaskRequest) SetTargetRegion(targetRegion string) {
    r.TargetRegion = &targetRegion
}

/* param timeout: 探测超时时间（单位：秒）：默认值:5，取值范围 [1,300](Optional) */
func (r *UpdateProbeTaskRequest) SetTimeout(timeout int64) {
    r.Timeout = &timeout
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateProbeTaskRequest) GetRegionId() string {
    return ""
}

type UpdateProbeTaskResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateProbeTaskResult `json:"result"`
}

type UpdateProbeTaskResult struct {
    Suc bool `json:"suc"`
}