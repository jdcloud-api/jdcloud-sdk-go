// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    monitor "github.com/jdcloud-api/jdcloud-sdk-go/services/monitor/models"
)

type DescribeMetricsCmRequest struct {

    core.JDCloudRequest

    /* region  */
    RegionId string `json:"regionId"`

    /* namespaceUID  */
    NamespaceUID string `json:"namespaceUID"`

    /* objUID  */
    ObjUID string `json:"objUID"`
}

/*
 * param regionId: region (Required)
 * param namespaceUID: namespaceUID (Required)
 * param objUID: objUID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeMetricsCmRequest(
    regionId string,
    namespaceUID string,
    objUID string,
) *DescribeMetricsCmRequest {

	return &DescribeMetricsCmRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/cm/namespaces/{namespaceUID}/objs/{objUID}/metrics",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        NamespaceUID: namespaceUID,
        ObjUID: objUID,
	}
}

/*
 * param regionId: region (Required)
 * param namespaceUID: namespaceUID (Required)
 * param objUID: objUID (Required)
 */
func NewDescribeMetricsCmRequestWithAllParams(
    regionId string,
    namespaceUID string,
    objUID string,
) *DescribeMetricsCmRequest {

    return &DescribeMetricsCmRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cm/namespaces/{namespaceUID}/objs/{objUID}/metrics",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        NamespaceUID: namespaceUID,
        ObjUID: objUID,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeMetricsCmRequestWithoutParam() *DescribeMetricsCmRequest {

    return &DescribeMetricsCmRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/cm/namespaces/{namespaceUID}/objs/{objUID}/metrics",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: region(Required) */
func (r *DescribeMetricsCmRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param namespaceUID: namespaceUID(Required) */
func (r *DescribeMetricsCmRequest) SetNamespaceUID(namespaceUID string) {
    r.NamespaceUID = namespaceUID
}

/* param objUID: objUID(Required) */
func (r *DescribeMetricsCmRequest) SetObjUID(objUID string) {
    r.ObjUID = objUID
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeMetricsCmRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeMetricsCmResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeMetricsCmResult `json:"result"`
}

type DescribeMetricsCmResult struct {
    MetricList []monitor.MetricInfo `json:"metricList"`
}