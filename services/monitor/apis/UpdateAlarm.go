// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/jdcloud-api/jdcloud-sdk-go/core"
    monitor "github.com/jdcloud-api/jdcloud-sdk-go/services/monitor/models"
)

type UpdateAlarmRequest struct {

    core.JDCloudRequest

    /* 地域 Id  */
    RegionId string `json:"regionId"`

    /* 规则id  */
    AlarmId string `json:"alarmId"`

    /* 通知联系人 (Optional) */
    Contacts []monitor.BaseContact `json:"contacts"`

    /*   */
    Rule *monitor.BaseRule `json:"rule"`

    /* 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook (Optional) */
    WebHookContent *string `json:"webHookContent"`

    /* webHook协议 (Optional) */
    WebHookProtocol *string `json:"webHookProtocol"`

    /* 回调secret，用户请求签名，防伪造 (Optional) */
    WebHookSecret *string `json:"webHookSecret"`

    /* 回调url (Optional) */
    WebHookUrl *string `json:"webHookUrl"`
}

/*
 * param regionId: 地域 Id (Required)
 * param alarmId: 规则id (Required)
 * param rule:  (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewUpdateAlarmRequest(
    regionId string,
    alarmId string,
    rule *monitor.BaseRule,
) *UpdateAlarmRequest {

	return &UpdateAlarmRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/alarms/{alarmId}",
			Method:  "PATCH",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        AlarmId: alarmId,
        Rule: rule,
	}
}

/*
 * param regionId: 地域 Id (Required)
 * param alarmId: 规则id (Required)
 * param contacts: 通知联系人 (Optional)
 * param rule:  (Required)
 * param webHookContent: 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook (Optional)
 * param webHookProtocol: webHook协议 (Optional)
 * param webHookSecret: 回调secret，用户请求签名，防伪造 (Optional)
 * param webHookUrl: 回调url (Optional)
 */
func NewUpdateAlarmRequestWithAllParams(
    regionId string,
    alarmId string,
    contacts []monitor.BaseContact,
    rule *monitor.BaseRule,
    webHookContent *string,
    webHookProtocol *string,
    webHookSecret *string,
    webHookUrl *string,
) *UpdateAlarmRequest {

    return &UpdateAlarmRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/alarms/{alarmId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        AlarmId: alarmId,
        Contacts: contacts,
        Rule: rule,
        WebHookContent: webHookContent,
        WebHookProtocol: webHookProtocol,
        WebHookSecret: webHookSecret,
        WebHookUrl: webHookUrl,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewUpdateAlarmRequestWithoutParam() *UpdateAlarmRequest {

    return &UpdateAlarmRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/alarms/{alarmId}",
            Method:  "PATCH",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域 Id(Required) */
func (r *UpdateAlarmRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param alarmId: 规则id(Required) */
func (r *UpdateAlarmRequest) SetAlarmId(alarmId string) {
    r.AlarmId = alarmId
}

/* param contacts: 通知联系人(Optional) */
func (r *UpdateAlarmRequest) SetContacts(contacts []monitor.BaseContact) {
    r.Contacts = contacts
}

/* param rule: (Required) */
func (r *UpdateAlarmRequest) SetRule(rule *monitor.BaseRule) {
    r.Rule = rule
}

/* param webHookContent: 回调content 注：仅webHookUrl和webHookContent均不为空时，才会创建webHook(Optional) */
func (r *UpdateAlarmRequest) SetWebHookContent(webHookContent string) {
    r.WebHookContent = &webHookContent
}

/* param webHookProtocol: webHook协议(Optional) */
func (r *UpdateAlarmRequest) SetWebHookProtocol(webHookProtocol string) {
    r.WebHookProtocol = &webHookProtocol
}

/* param webHookSecret: 回调secret，用户请求签名，防伪造(Optional) */
func (r *UpdateAlarmRequest) SetWebHookSecret(webHookSecret string) {
    r.WebHookSecret = &webHookSecret
}

/* param webHookUrl: 回调url(Optional) */
func (r *UpdateAlarmRequest) SetWebHookUrl(webHookUrl string) {
    r.WebHookUrl = &webHookUrl
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r UpdateAlarmRequest) GetRegionId() string {
    return r.RegionId
}

type UpdateAlarmResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result UpdateAlarmResult `json:"result"`
}

type UpdateAlarmResult struct {
}