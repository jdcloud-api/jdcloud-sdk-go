// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
)

type ModifyResourceRecordRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* zone id  */
    ZoneId string `json:"zoneId"`

    /* 解析记录ID  */
    ResourceRecordId string `json:"resourceRecordId"`

    /* 主机记录 (Optional) */
    HostRecord *string `json:"hostRecord"`

    /* 主机记录值 (Optional) */
    HostValue *string `json:"hostValue"`

    /* 解析类型，目前支持类型 A AAAA CNAME TXT CAA SRV MX PTR (Optional) */
    RecordType *string `json:"recordType"`

    /* TTL值 (Optional) */
    Ttl *int `json:"ttl"`

    /* 优先级，只存在于MX, SRV解析记录类型 (Optional) */
    Priority *int `json:"priority"`

    /* 端口，只存在于SRV解析记录类型 (Optional) */
    Port *int `json:"port"`

    /* 解析记录的权重，目前支持权重的有：A/AAAA/CNAME，A/AAAA权重范围0-100，CNAME权重范围1-100。 (Optional) */
    Weight *int `json:"weight"`
}

/*
 * param regionId: 地域ID (Required)
 * param zoneId: zone id (Required)
 * param resourceRecordId: 解析记录ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewModifyResourceRecordRequest(
    regionId string,
    zoneId string,
    resourceRecordId string,
) *ModifyResourceRecordRequest {

	return &ModifyResourceRecordRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecord/{resourceRecordId}",
			Method:  "PUT",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ZoneId: zoneId,
        ResourceRecordId: resourceRecordId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param zoneId: zone id (Required)
 * param resourceRecordId: 解析记录ID (Required)
 * param hostRecord: 主机记录 (Optional)
 * param hostValue: 主机记录值 (Optional)
 * param recordType: 解析类型，目前支持类型 A AAAA CNAME TXT CAA SRV MX PTR (Optional)
 * param ttl: TTL值 (Optional)
 * param priority: 优先级，只存在于MX, SRV解析记录类型 (Optional)
 * param port: 端口，只存在于SRV解析记录类型 (Optional)
 * param weight: 解析记录的权重，目前支持权重的有：A/AAAA/CNAME，A/AAAA权重范围0-100，CNAME权重范围1-100。 (Optional)
 */
func NewModifyResourceRecordRequestWithAllParams(
    regionId string,
    zoneId string,
    resourceRecordId string,
    hostRecord *string,
    hostValue *string,
    recordType *string,
    ttl *int,
    priority *int,
    port *int,
    weight *int,
) *ModifyResourceRecordRequest {

    return &ModifyResourceRecordRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecord/{resourceRecordId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ZoneId: zoneId,
        ResourceRecordId: resourceRecordId,
        HostRecord: hostRecord,
        HostValue: hostValue,
        RecordType: recordType,
        Ttl: ttl,
        Priority: priority,
        Port: port,
        Weight: weight,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewModifyResourceRecordRequestWithoutParam() *ModifyResourceRecordRequest {

    return &ModifyResourceRecordRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecord/{resourceRecordId}",
            Method:  "PUT",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *ModifyResourceRecordRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param zoneId: zone id(Required) */
func (r *ModifyResourceRecordRequest) SetZoneId(zoneId string) {
    r.ZoneId = zoneId
}

/* param resourceRecordId: 解析记录ID(Required) */
func (r *ModifyResourceRecordRequest) SetResourceRecordId(resourceRecordId string) {
    r.ResourceRecordId = resourceRecordId
}

/* param hostRecord: 主机记录(Optional) */
func (r *ModifyResourceRecordRequest) SetHostRecord(hostRecord string) {
    r.HostRecord = &hostRecord
}

/* param hostValue: 主机记录值(Optional) */
func (r *ModifyResourceRecordRequest) SetHostValue(hostValue string) {
    r.HostValue = &hostValue
}

/* param recordType: 解析类型，目前支持类型 A AAAA CNAME TXT CAA SRV MX PTR(Optional) */
func (r *ModifyResourceRecordRequest) SetRecordType(recordType string) {
    r.RecordType = &recordType
}

/* param ttl: TTL值(Optional) */
func (r *ModifyResourceRecordRequest) SetTtl(ttl int) {
    r.Ttl = &ttl
}

/* param priority: 优先级，只存在于MX, SRV解析记录类型(Optional) */
func (r *ModifyResourceRecordRequest) SetPriority(priority int) {
    r.Priority = &priority
}

/* param port: 端口，只存在于SRV解析记录类型(Optional) */
func (r *ModifyResourceRecordRequest) SetPort(port int) {
    r.Port = &port
}

/* param weight: 解析记录的权重，目前支持权重的有：A/AAAA/CNAME，A/AAAA权重范围0-100，CNAME权重范围1-100。(Optional) */
func (r *ModifyResourceRecordRequest) SetWeight(weight int) {
    r.Weight = &weight
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ModifyResourceRecordRequest) GetRegionId() string {
    return r.RegionId
}

type ModifyResourceRecordResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ModifyResourceRecordResult `json:"result"`
}

type ModifyResourceRecordResult struct {
}