// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    privatezone "github.com/lshuining/jdcloud-sdk-go/services/privatezone/models"
)

type DescribeZonesRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* zone模块匹配查询 (Optional) */
    Zone *string `json:"zone"`

    /* 购买的套餐实例ID (Optional) */
    InstanceId *string `json:"instanceId"`

    /* 根据zoneId精准查询(zone模糊查询失效) (Optional) */
    ZoneId *string `json:"zoneId"`

    /* 页容量，默认10，取值范围(1 - 100) (Optional) */
    PageSize *int `json:"pageSize"`

    /* 页序号，默认1，不能小于1 (Optional) */
    PageNumber *int `json:"pageNumber"`
}

/*
 * param regionId: 地域ID (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewDescribeZonesRequest(
    regionId string,
) *DescribeZonesRequest {

	return &DescribeZonesRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/zones",
			Method:  "GET",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param zone: zone模块匹配查询 (Optional)
 * param instanceId: 购买的套餐实例ID (Optional)
 * param zoneId: 根据zoneId精准查询(zone模糊查询失效) (Optional)
 * param pageSize: 页容量，默认10，取值范围(1 - 100) (Optional)
 * param pageNumber: 页序号，默认1，不能小于1 (Optional)
 */
func NewDescribeZonesRequestWithAllParams(
    regionId string,
    zone *string,
    instanceId *string,
    zoneId *string,
    pageSize *int,
    pageNumber *int,
) *DescribeZonesRequest {

    return &DescribeZonesRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zones",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        Zone: zone,
        InstanceId: instanceId,
        ZoneId: zoneId,
        PageSize: pageSize,
        PageNumber: pageNumber,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewDescribeZonesRequestWithoutParam() *DescribeZonesRequest {

    return &DescribeZonesRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zones",
            Method:  "GET",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *DescribeZonesRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param zone: zone模块匹配查询(Optional) */
func (r *DescribeZonesRequest) SetZone(zone string) {
    r.Zone = &zone
}

/* param instanceId: 购买的套餐实例ID(Optional) */
func (r *DescribeZonesRequest) SetInstanceId(instanceId string) {
    r.InstanceId = &instanceId
}

/* param zoneId: 根据zoneId精准查询(zone模糊查询失效)(Optional) */
func (r *DescribeZonesRequest) SetZoneId(zoneId string) {
    r.ZoneId = &zoneId
}

/* param pageSize: 页容量，默认10，取值范围(1 - 100)(Optional) */
func (r *DescribeZonesRequest) SetPageSize(pageSize int) {
    r.PageSize = &pageSize
}

/* param pageNumber: 页序号，默认1，不能小于1(Optional) */
func (r *DescribeZonesRequest) SetPageNumber(pageNumber int) {
    r.PageNumber = &pageNumber
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r DescribeZonesRequest) GetRegionId() string {
    return r.RegionId
}

type DescribeZonesResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result DescribeZonesResult `json:"result"`
}

type DescribeZonesResult struct {
    DataList []privatezone.DescribeZonesRes `json:"dataList"`
    CurrentCount int `json:"currentCount"`
    TotalCount int `json:"totalCount"`
    TotalPage int `json:"totalPage"`
}