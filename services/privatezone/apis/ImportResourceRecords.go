// Copyright 2018 JDCLOUD.COM
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// NOTE: This class is auto generated by the jdcloud code generator program.

package apis

import (
    "github.com/lshuining/jdcloud-sdk-go/core"
    privatezone "github.com/lshuining/jdcloud-sdk-go/services/privatezone/models"
)

type ImportResourceRecordsRequest struct {

    core.JDCloudRequest

    /* 地域ID  */
    RegionId string `json:"regionId"`

    /* zone id  */
    ZoneId string `json:"zoneId"`

    /* 导入的解析记录数据  */
    ImportResourceRecordsReq []privatezone.ImportResourceRecordsReq `json:"importResourceRecordsReq"`
}

/*
 * param regionId: 地域ID (Required)
 * param zoneId: zone id (Required)
 * param importResourceRecordsReq: 导入的解析记录数据 (Required)
 *
 * @Deprecated, not compatible when mandatory parameters changed
 */
func NewImportResourceRecordsRequest(
    regionId string,
    zoneId string,
    importResourceRecordsReq []privatezone.ImportResourceRecordsReq,
) *ImportResourceRecordsRequest {

	return &ImportResourceRecordsRequest{
        JDCloudRequest: core.JDCloudRequest{
			URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecords:import",
			Method:  "POST",
			Header:  nil,
			Version: "v1",
		},
        RegionId: regionId,
        ZoneId: zoneId,
        ImportResourceRecordsReq: importResourceRecordsReq,
	}
}

/*
 * param regionId: 地域ID (Required)
 * param zoneId: zone id (Required)
 * param importResourceRecordsReq: 导入的解析记录数据 (Required)
 */
func NewImportResourceRecordsRequestWithAllParams(
    regionId string,
    zoneId string,
    importResourceRecordsReq []privatezone.ImportResourceRecordsReq,
) *ImportResourceRecordsRequest {

    return &ImportResourceRecordsRequest{
        JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecords:import",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
        RegionId: regionId,
        ZoneId: zoneId,
        ImportResourceRecordsReq: importResourceRecordsReq,
    }
}

/* This constructor has better compatible ability when API parameters changed */
func NewImportResourceRecordsRequestWithoutParam() *ImportResourceRecordsRequest {

    return &ImportResourceRecordsRequest{
            JDCloudRequest: core.JDCloudRequest{
            URL:     "/regions/{regionId}/zone/{zoneId}/resourceRecords:import",
            Method:  "POST",
            Header:  nil,
            Version: "v1",
        },
    }
}

/* param regionId: 地域ID(Required) */
func (r *ImportResourceRecordsRequest) SetRegionId(regionId string) {
    r.RegionId = regionId
}

/* param zoneId: zone id(Required) */
func (r *ImportResourceRecordsRequest) SetZoneId(zoneId string) {
    r.ZoneId = zoneId
}

/* param importResourceRecordsReq: 导入的解析记录数据(Required) */
func (r *ImportResourceRecordsRequest) SetImportResourceRecordsReq(importResourceRecordsReq []privatezone.ImportResourceRecordsReq) {
    r.ImportResourceRecordsReq = importResourceRecordsReq
}

// GetRegionId returns path parameter 'regionId' if exist,
// otherwise return empty string
func (r ImportResourceRecordsRequest) GetRegionId() string {
    return r.RegionId
}

type ImportResourceRecordsResponse struct {
    RequestID string `json:"requestId"`
    Error core.ErrorResponse `json:"error"`
    Result ImportResourceRecordsResult `json:"result"`
}

type ImportResourceRecordsResult struct {
}